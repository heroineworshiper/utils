

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 26 07:24:05 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	functab,global,class=ENTRY,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 1.45
    58                           ; Generated 16/11/2017 GMT
    59                           ; 
    60                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F877A Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151                           
   152                           	psect	idataCOMMON
   153  0003                     __pidataCOMMON:	
   154                           
   155                           ;initializer for _pwm_state
   156  0003  3401               	retlw	low (fp__pwm_off-i1fpbase)
   157                           
   158                           	psect	idataBANK0
   159  0811                     __pidataBANK0:	
   160                           
   161                           ;initializer for _adc_state
   162  0811  3409               	retlw	low (fp__charge_adc-fpbase)
   163                           
   164                           ;initializer for _motor_state
   165  0812  3424               	retlw	low (fp__motor_idle-fpbase)
   166                           
   167                           ;initializer for _first_edge
   168  0813  3401               	retlw	1
   169                           
   170                           	psect	stringtext
   171  0100                     __pstringtext:	
   172  0100                     stringtab:	
   173  0100                     __stringtab:	
   174                           
   175                           ;	String table - string pointers are 2 bytes each
   176  0100  1BFF               	btfsc	btemp+1,7
   177  0101  290A               	ljmp	stringcode
   178  0102  1383               	bcf	3,7
   179  0103  187F               	btfsc	btemp+1,0
   180  0104  1783               	bsf	3,7
   181  0105  0800               	movf	0,w
   182  0106  0A84               	incf	4,f
   183  0107  1903               	skipnz
   184  0108  0AFF               	incf	btemp+1,f
   185  0109  0008               	return
   186  010A                     stringcode:	
   187  010A  087F               	movf	btemp+1,w
   188  010B  397F               	andlw	127
   189  010C  008A               	movwf	10
   190  010D  0804               	movf	4,w
   191  010E  0A84               	incf	4,f
   192  010F  1903               	skipnz
   193  0110  0AFF               	incf	btemp+1,f
   194  0111  0082               	movwf	2
   195  0112                     __stringbase:	
   196  0112                     __end_of__stringtab:	
   197  0112                     _step_to_encoders:	
   198  0112  34F6               	retlw	-10
   199  0113  3411               	retlw	17
   200  0114  3408               	retlw	8
   201  0115  34F6               	retlw	-10
   202  0116  3412               	retlw	18
   203  0117  3408               	retlw	8
   204  0118  34F6               	retlw	-10
   205  0119  3413               	retlw	19
   206  011A  3409               	retlw	9
   207  011B  34F6               	retlw	-10
   208  011C  3414               	retlw	20
   209  011D  340A               	retlw	10
   210  011E  34F6               	retlw	-10
   211  011F  3415               	retlw	21
   212  0120  340B               	retlw	11
   213  0121  34F6               	retlw	-10
   214  0122  3416               	retlw	22
   215  0123  340C               	retlw	12
   216  0124  34F6               	retlw	-10
   217  0125  3417               	retlw	23
   218  0126  340D               	retlw	13
   219  0127  34F7               	retlw	-9
   220  0128  3418               	retlw	24
   221  0129  340E               	retlw	14
   222  012A  34F7               	retlw	-9
   223  012B  3419               	retlw	25
   224  012C  340F               	retlw	15
   225  012D  34F8               	retlw	-8
   226  012E  341A               	retlw	26
   227  012F  3410               	retlw	16
   228  0130  34F8               	retlw	-8
   229  0131  341B               	retlw	27
   230  0132  3411               	retlw	17
   231  0133  34F9               	retlw	-7
   232  0134  341C               	retlw	28
   233  0135  3412               	retlw	18
   234  0136  34FA               	retlw	-6
   235  0137  341D               	retlw	29
   236  0138  3413               	retlw	19
   237  0139  34FA               	retlw	-6
   238  013A  341E               	retlw	30
   239  013B  3414               	retlw	20
   240  013C  34FB               	retlw	-5
   241  013D  341F               	retlw	31
   242  013E  3415               	retlw	21
   243  013F  34FB               	retlw	-5
   244  0140  3420               	retlw	32
   245  0141  3416               	retlw	22
   246  0142  34FC               	retlw	-4
   247  0143  3421               	retlw	33
   248  0144  3417               	retlw	23
   249  0145  34FC               	retlw	-4
   250  0146  3422               	retlw	34
   251  0147  3418               	retlw	24
   252  0148  34FD               	retlw	-3
   253  0149  3423               	retlw	35
   254  014A  3419               	retlw	25
   255  014B  34FD               	retlw	-3
   256  014C  3424               	retlw	36
   257  014D  341A               	retlw	26
   258  014E  34FE               	retlw	-2
   259  014F  3425               	retlw	37
   260  0150  341B               	retlw	27
   261  0151  34FE               	retlw	-2
   262  0152  3426               	retlw	38
   263  0153  341C               	retlw	28
   264  0154  34FF               	retlw	-1
   265  0155  3427               	retlw	39
   266  0156  341D               	retlw	29
   267  0157  34FF               	retlw	-1
   268  0158  3428               	retlw	40
   269  0159  341E               	retlw	30
   270  015A  3400               	retlw	0
   271  015B  3429               	retlw	41
   272  015C  341F               	retlw	31
   273  015D                     __end_of_step_to_encoders:	
   274  015D                     _sin_table:	
   275  015D  3416               	retlw	22
   276  015E  3408               	retlw	8
   277  015F  34FB               	retlw	-5
   278  0160  34ED               	retlw	-19
   279  0161  34DF               	retlw	-33
   280  0162  34D2               	retlw	-46
   281  0163  34C5               	retlw	-59
   282  0164  34B9               	retlw	-71
   283  0165  34AE               	retlw	-82
   284  0166  34A4               	retlw	-92
   285  0167  349B               	retlw	-101
   286  0168  3493               	retlw	-109
   287  0169  348C               	retlw	-116
   288  016A  3487               	retlw	-121
   289  016B  3483               	retlw	-125
   290  016C  3481               	retlw	-127
   291  016D  3481               	retlw	-127
   292  016E  3481               	retlw	-127
   293  016F  3484               	retlw	-124
   294  0170  3487               	retlw	-121
   295  0171  348D               	retlw	-115
   296  0172  3493               	retlw	-109
   297  0173  349B               	retlw	-101
   298  0174  34A4               	retlw	-92
   299  0175  34AE               	retlw	-82
   300  0176  34BA               	retlw	-70
   301  0177  34C6               	retlw	-58
   302  0178  34D2               	retlw	-46
   303  0179  34E0               	retlw	-32
   304  017A  34ED               	retlw	-19
   305  017B  34FB               	retlw	-5
   306  017C  3408               	retlw	8
   307  017D  3416               	retlw	22
   308  017E  3424               	retlw	36
   309  017F  3431               	retlw	49
   310  0180  343E               	retlw	62
   311  0181  3449               	retlw	73
   312  0182  3454               	retlw	84
   313  0183  345E               	retlw	94
   314  0184  3467               	retlw	103
   315  0185                     __end_of_sin_table:	
   316  0185                     _cos_table:	
   317  0185  3482               	retlw	-126
   318  0186  3481               	retlw	-127
   319  0187  3481               	retlw	-127
   320  0188  3482               	retlw	-126
   321  0189  3485               	retlw	-123
   322  018A  3489               	retlw	-119
   323  018B  348F               	retlw	-113
   324  018C  3496               	retlw	-106
   325  018D  349F               	retlw	-97
   326  018E  34A8               	retlw	-88
   327  018F  34B3               	retlw	-77
   328  0190  34BE               	retlw	-66
   329  0191  34CB               	retlw	-53
   330  0192  34D8               	retlw	-40
   331  0193  34E5               	retlw	-27
   332  0194  34F3               	retlw	-13
   333  0195  3400               	retlw	0
   334  0196  340E               	retlw	14
   335  0197  341B               	retlw	27
   336  0198  3429               	retlw	41
   337  0199  3436               	retlw	54
   338  019A  3442               	retlw	66
   339  019B  344E               	retlw	78
   340  019C  3458               	retlw	88
   341  019D  3462               	retlw	98
   342  019E  346A               	retlw	106
   343  019F  3471               	retlw	113
   344  01A0  3477               	retlw	119
   345  01A1  347B               	retlw	123
   346  01A2  347E               	retlw	126
   347  01A3  347F               	retlw	127
   348  01A4  347F               	retlw	127
   349  01A5  347D               	retlw	125
   350  01A6  347A               	retlw	122
   351  01A7  3476               	retlw	118
   352  01A8  346F               	retlw	111
   353  01A9  3468               	retlw	104
   354  01AA  345F               	retlw	95
   355  01AB  3456               	retlw	86
   356  01AC  344B               	retlw	75
   357  01AD                     __end_of_cos_table:	
   358  01AD                     _hex_table:	
   359  01AD  3430               	retlw	48
   360  01AE  3431               	retlw	49
   361  01AF  3432               	retlw	50
   362  01B0  3433               	retlw	51
   363  01B1  3434               	retlw	52
   364  01B2  3435               	retlw	53
   365  01B3  3436               	retlw	54
   366  01B4  3437               	retlw	55
   367  01B5  3438               	retlw	56
   368  01B6  3439               	retlw	57
   369  01B7  3461               	retlw	97
   370  01B8  3462               	retlw	98
   371  01B9  3463               	retlw	99
   372  01BA  3464               	retlw	100
   373  01BB  3465               	retlw	101
   374  01BC  3466               	retlw	102
   375  01BD                     __end_of_hex_table:	
   376  01BD                     _button0_data:	
   377  01BD  3430               	retlw	48
   378  01BE  3419               	retlw	25
   379  01BF  3403               	retlw	3
   380  01C0  3403               	retlw	3
   381  01C1  3403               	retlw	3
   382  01C2  3409               	retlw	9
   383  01C3  3403               	retlw	3
   384  01C4  3402               	retlw	2
   385  01C5  3403               	retlw	3
   386  01C6  3409               	retlw	9
   387  01C7  3403               	retlw	3
   388  01C8  3409               	retlw	9
   389  01C9  3403               	retlw	3
   390  01CA  3409               	retlw	9
   391  01CB  3403               	retlw	3
   392  01CC  3409               	retlw	9
   393  01CD  3403               	retlw	3
   394  01CE  3403               	retlw	3
   395  01CF  3403               	retlw	3
   396  01D0  3409               	retlw	9
   397  01D1  3403               	retlw	3
   398  01D2  3403               	retlw	3
   399  01D3  3403               	retlw	3
   400  01D4  3409               	retlw	9
   401  01D5  3403               	retlw	3
   402  01D6  3403               	retlw	3
   403  01D7  3403               	retlw	3
   404  01D8  3402               	retlw	2
   405  01D9  3403               	retlw	3
   406  01DA  3402               	retlw	2
   407  01DB  3403               	retlw	3
   408  01DC  3403               	retlw	3
   409  01DD  3403               	retlw	3
   410  01DE  3409               	retlw	9
   411  01DF  3403               	retlw	3
   412  01E0  3409               	retlw	9
   413  01E1  3403               	retlw	3
   414  01E2  3403               	retlw	3
   415  01E3  3403               	retlw	3
   416  01E4  3409               	retlw	9
   417  01E5  3403               	retlw	3
   418  01E6  3403               	retlw	3
   419  01E7  3403               	retlw	3
   420  01E8  3403               	retlw	3
   421  01E9  3403               	retlw	3
   422  01EA  3403               	retlw	3
   423  01EB  3403               	retlw	3
   424  01EC  3403               	retlw	3
   425  01ED  3403               	retlw	3
   426  01EE  3409               	retlw	9
   427  01EF  3403               	retlw	3
   428  01F0  3403               	retlw	3
   429  01F1  3403               	retlw	3
   430  01F2  3409               	retlw	9
   431  01F3  3403               	retlw	3
   432  01F4  3403               	retlw	3
   433  01F5  3403               	retlw	3
   434  01F6  3409               	retlw	9
   435  01F7  3403               	retlw	3
   436  01F8  3409               	retlw	9
   437  01F9  3403               	retlw	3
   438  01FA  3409               	retlw	9
   439  01FB  3403               	retlw	3
   440  01FC  3409               	retlw	9
   441  01FD  3403               	retlw	3
   442  01FE  3403               	retlw	3
   443  01FF  3403               	retlw	3
   444  0200  34DB               	retlw	219
   445  0201  3430               	retlw	48
   446  0202  340C               	retlw	12
   447  0203  3403               	retlw	3
   448  0204                     __end_of_button0_data:	
   449  0204                     _button9_data:	
   450  0204  3430               	retlw	48
   451  0205  3419               	retlw	25
   452  0206  3403               	retlw	3
   453  0207  3403               	retlw	3
   454  0208  3403               	retlw	3
   455  0209  3409               	retlw	9
   456  020A  3403               	retlw	3
   457  020B  3403               	retlw	3
   458  020C  3403               	retlw	3
   459  020D  3409               	retlw	9
   460  020E  3403               	retlw	3
   461  020F  3409               	retlw	9
   462  0210  3403               	retlw	3
   463  0211  3409               	retlw	9
   464  0212  3403               	retlw	3
   465  0213  3409               	retlw	9
   466  0214  3403               	retlw	3
   467  0215  3402               	retlw	2
   468  0216  3403               	retlw	3
   469  0217  3409               	retlw	9
   470  0218  3403               	retlw	3
   471  0219  3402               	retlw	2
   472  021A  3403               	retlw	3
   473  021B  3409               	retlw	9
   474  021C  3403               	retlw	3
   475  021D  3402               	retlw	2
   476  021E  3403               	retlw	3
   477  021F  3403               	retlw	3
   478  0220  3403               	retlw	3
   479  0221  3403               	retlw	3
   480  0222  3403               	retlw	3
   481  0223  3403               	retlw	3
   482  0224  3403               	retlw	3
   483  0225  3409               	retlw	9
   484  0226  3403               	retlw	3
   485  0227  3409               	retlw	9
   486  0228  3403               	retlw	3
   487  0229  3409               	retlw	9
   488  022A  3403               	retlw	3
   489  022B  3409               	retlw	9
   490  022C  3403               	retlw	3
   491  022D  3402               	retlw	2
   492  022E  3403               	retlw	3
   493  022F  3403               	retlw	3
   494  0230  3403               	retlw	3
   495  0231  3402               	retlw	2
   496  0232  3403               	retlw	3
   497  0233  3403               	retlw	3
   498  0234  3403               	retlw	3
   499  0235  3409               	retlw	9
   500  0236  3403               	retlw	3
   501  0237  3402               	retlw	2
   502  0238  3403               	retlw	3
   503  0239  3402               	retlw	2
   504  023A  3403               	retlw	3
   505  023B  3403               	retlw	3
   506  023C  3403               	retlw	3
   507  023D  3409               	retlw	9
   508  023E  3403               	retlw	3
   509  023F  3409               	retlw	9
   510  0240  3403               	retlw	3
   511  0241  3409               	retlw	9
   512  0242  3403               	retlw	3
   513  0243  3409               	retlw	9
   514  0244  3403               	retlw	3
   515  0245  3402               	retlw	2
   516  0246  3403               	retlw	3
   517  0247  34DB               	retlw	219
   518  0248  3430               	retlw	48
   519  0249  340C               	retlw	12
   520  024A  3403               	retlw	3
   521  024B                     __end_of_button9_data:	
   522  024B                     _button8_data:	
   523  024B  3430               	retlw	48
   524  024C  3419               	retlw	25
   525  024D  3403               	retlw	3
   526  024E  3403               	retlw	3
   527  024F  3403               	retlw	3
   528  0250  3409               	retlw	9
   529  0251  3403               	retlw	3
   530  0252  3403               	retlw	3
   531  0253  3403               	retlw	3
   532  0254  3409               	retlw	9
   533  0255  3403               	retlw	3
   534  0256  3409               	retlw	9
   535  0257  3403               	retlw	3
   536  0258  3409               	retlw	9
   537  0259  3403               	retlw	3
   538  025A  3409               	retlw	9
   539  025B  3403               	retlw	3
   540  025C  3403               	retlw	3
   541  025D  3403               	retlw	3
   542  025E  3409               	retlw	9
   543  025F  3403               	retlw	3
   544  0260  3403               	retlw	3
   545  0261  3403               	retlw	3
   546  0262  3409               	retlw	9
   547  0263  3403               	retlw	3
   548  0264  3402               	retlw	2
   549  0265  3403               	retlw	3
   550  0266  3403               	retlw	3
   551  0267  3403               	retlw	3
   552  0268  3402               	retlw	2
   553  0269  3403               	retlw	3
   554  026A  3403               	retlw	3
   555  026B  3403               	retlw	3
   556  026C  3409               	retlw	9
   557  026D  3403               	retlw	3
   558  026E  3409               	retlw	9
   559  026F  3403               	retlw	3
   560  0270  3402               	retlw	2
   561  0271  3403               	retlw	3
   562  0272  3409               	retlw	9
   563  0273  3403               	retlw	3
   564  0274  3403               	retlw	3
   565  0275  3403               	retlw	3
   566  0276  3409               	retlw	9
   567  0277  3403               	retlw	3
   568  0278  3403               	retlw	3
   569  0279  3403               	retlw	3
   570  027A  3409               	retlw	9
   571  027B  3403               	retlw	3
   572  027C  3402               	retlw	2
   573  027D  3403               	retlw	3
   574  027E  3403               	retlw	3
   575  027F  3403               	retlw	3
   576  0280  3409               	retlw	9
   577  0281  3403               	retlw	3
   578  0282  3402               	retlw	2
   579  0283  3403               	retlw	3
   580  0284  3409               	retlw	9
   581  0285  3403               	retlw	3
   582  0286  3403               	retlw	3
   583  0287  3403               	retlw	3
   584  0288  3409               	retlw	9
   585  0289  3403               	retlw	3
   586  028A  3403               	retlw	3
   587  028B  3403               	retlw	3
   588  028C  3409               	retlw	9
   589  028D  3403               	retlw	3
   590  028E  34DB               	retlw	219
   591  028F  3430               	retlw	48
   592  0290  340C               	retlw	12
   593  0291  3403               	retlw	3
   594  0292                     __end_of_button8_data:	
   595  0292                     _button7_data:	
   596  0292  3430               	retlw	48
   597  0293  3419               	retlw	25
   598  0294  3403               	retlw	3
   599  0295  3403               	retlw	3
   600  0296  3403               	retlw	3
   601  0297  3409               	retlw	9
   602  0298  3403               	retlw	3
   603  0299  3403               	retlw	3
   604  029A  3403               	retlw	3
   605  029B  3409               	retlw	9
   606  029C  3403               	retlw	3
   607  029D  3409               	retlw	9
   608  029E  3403               	retlw	3
   609  029F  3409               	retlw	9
   610  02A0  3403               	retlw	3
   611  02A1  3408               	retlw	8
   612  02A2  3403               	retlw	3
   613  02A3  3403               	retlw	3
   614  02A4  3403               	retlw	3
   615  02A5  3409               	retlw	9
   616  02A6  3403               	retlw	3
   617  02A7  3402               	retlw	2
   618  02A8  3403               	retlw	3
   619  02A9  3409               	retlw	9
   620  02AA  3403               	retlw	3
   621  02AB  3403               	retlw	3
   622  02AC  3403               	retlw	3
   623  02AD  3403               	retlw	3
   624  02AE  3403               	retlw	3
   625  02AF  3402               	retlw	2
   626  02B0  3403               	retlw	3
   627  02B1  3403               	retlw	3
   628  02B2  3403               	retlw	3
   629  02B3  3409               	retlw	9
   630  02B4  3403               	retlw	3
   631  02B5  3402               	retlw	2
   632  02B6  3403               	retlw	3
   633  02B7  3403               	retlw	3
   634  02B8  3403               	retlw	3
   635  02B9  3409               	retlw	9
   636  02BA  3403               	retlw	3
   637  02BB  3402               	retlw	2
   638  02BC  3403               	retlw	3
   639  02BD  3409               	retlw	9
   640  02BE  3403               	retlw	3
   641  02BF  3402               	retlw	2
   642  02C0  3403               	retlw	3
   643  02C1  3403               	retlw	3
   644  02C2  3403               	retlw	3
   645  02C3  3403               	retlw	3
   646  02C4  3403               	retlw	3
   647  02C5  3409               	retlw	9
   648  02C6  3403               	retlw	3
   649  02C7  3409               	retlw	9
   650  02C8  3403               	retlw	3
   651  02C9  3402               	retlw	2
   652  02CA  3403               	retlw	3
   653  02CB  3409               	retlw	9
   654  02CC  3403               	retlw	3
   655  02CD  3403               	retlw	3
   656  02CE  3403               	retlw	3
   657  02CF  3409               	retlw	9
   658  02D0  3403               	retlw	3
   659  02D1  3409               	retlw	9
   660  02D2  3403               	retlw	3
   661  02D3  3409               	retlw	9
   662  02D4  3403               	retlw	3
   663  02D5  34DB               	retlw	219
   664  02D6  3430               	retlw	48
   665  02D7  340C               	retlw	12
   666  02D8  3403               	retlw	3
   667  02D9                     __end_of_button7_data:	
   668  02D9                     _fastfwd_data:	
   669  02D9  3430               	retlw	48
   670  02DA  3419               	retlw	25
   671  02DB  3403               	retlw	3
   672  02DC  3403               	retlw	3
   673  02DD  3403               	retlw	3
   674  02DE  3409               	retlw	9
   675  02DF  3403               	retlw	3
   676  02E0  3403               	retlw	3
   677  02E1  3403               	retlw	3
   678  02E2  3409               	retlw	9
   679  02E3  3403               	retlw	3
   680  02E4  3409               	retlw	9
   681  02E5  3403               	retlw	3
   682  02E6  3409               	retlw	9
   683  02E7  3403               	retlw	3
   684  02E8  3409               	retlw	9
   685  02E9  3403               	retlw	3
   686  02EA  3403               	retlw	3
   687  02EB  3403               	retlw	3
   688  02EC  3409               	retlw	9
   689  02ED  3403               	retlw	3
   690  02EE  3402               	retlw	2
   691  02EF  3403               	retlw	3
   692  02F0  3409               	retlw	9
   693  02F1  3403               	retlw	3
   694  02F2  3402               	retlw	2
   695  02F3  3403               	retlw	3
   696  02F4  3403               	retlw	3
   697  02F5  3403               	retlw	3
   698  02F6  3403               	retlw	3
   699  02F7  3403               	retlw	3
   700  02F8  3403               	retlw	3
   701  02F9  3403               	retlw	3
   702  02FA  3409               	retlw	9
   703  02FB  3403               	retlw	3
   704  02FC  3403               	retlw	3
   705  02FD  3403               	retlw	3
   706  02FE  3403               	retlw	3
   707  02FF  3403               	retlw	3
   708  0300  3409               	retlw	9
   709  0301  3403               	retlw	3
   710  0302  3409               	retlw	9
   711  0303  3403               	retlw	3
   712  0304  3409               	retlw	9
   713  0305  3403               	retlw	3
   714  0306  3402               	retlw	2
   715  0307  3403               	retlw	3
   716  0308  3403               	retlw	3
   717  0309  3403               	retlw	3
   718  030A  3409               	retlw	9
   719  030B  3403               	retlw	3
   720  030C  3409               	retlw	9
   721  030D  3403               	retlw	3
   722  030E  3409               	retlw	9
   723  030F  3403               	retlw	3
   724  0310  3402               	retlw	2
   725  0311  3403               	retlw	3
   726  0312  3403               	retlw	3
   727  0313  3403               	retlw	3
   728  0314  3402               	retlw	2
   729  0315  3403               	retlw	3
   730  0316  3409               	retlw	9
   731  0317  3403               	retlw	3
   732  0318  3409               	retlw	9
   733  0319  3403               	retlw	3
   734  031A  3403               	retlw	3
   735  031B  3403               	retlw	3
   736  031C  34DB               	retlw	219
   737  031D  3430               	retlw	48
   738  031E  340C               	retlw	12
   739  031F  3403               	retlw	3
   740  0320                     __end_of_fastfwd_data:	
   741  0320                     _fastrev_data:	
   742  0320  3430               	retlw	48
   743  0321  3419               	retlw	25
   744  0322  3403               	retlw	3
   745  0323  3402               	retlw	2
   746  0324  3403               	retlw	3
   747  0325  3409               	retlw	9
   748  0326  3403               	retlw	3
   749  0327  3403               	retlw	3
   750  0328  3403               	retlw	3
   751  0329  3409               	retlw	9
   752  032A  3403               	retlw	3
   753  032B  3409               	retlw	9
   754  032C  3403               	retlw	3
   755  032D  3409               	retlw	9
   756  032E  3403               	retlw	3
   757  032F  3409               	retlw	9
   758  0330  3403               	retlw	3
   759  0331  3403               	retlw	3
   760  0332  3403               	retlw	3
   761  0333  3409               	retlw	9
   762  0334  3403               	retlw	3
   763  0335  3403               	retlw	3
   764  0336  3403               	retlw	3
   765  0337  3409               	retlw	9
   766  0338  3403               	retlw	3
   767  0339  3402               	retlw	2
   768  033A  3403               	retlw	3
   769  033B  3403               	retlw	3
   770  033C  3403               	retlw	3
   771  033D  3403               	retlw	3
   772  033E  3403               	retlw	3
   773  033F  3403               	retlw	3
   774  0340  3403               	retlw	3
   775  0341  3409               	retlw	9
   776  0342  3403               	retlw	3
   777  0343  3403               	retlw	3
   778  0344  3403               	retlw	3
   779  0345  3409               	retlw	9
   780  0346  3403               	retlw	3
   781  0347  3409               	retlw	9
   782  0348  3403               	retlw	3
   783  0349  3403               	retlw	3
   784  034A  3403               	retlw	3
   785  034B  3403               	retlw	3
   786  034C  3403               	retlw	3
   787  034D  3403               	retlw	3
   788  034E  3403               	retlw	3
   789  034F  3403               	retlw	3
   790  0350  3403               	retlw	3
   791  0351  3409               	retlw	9
   792  0352  3403               	retlw	3
   793  0353  3409               	retlw	9
   794  0354  3403               	retlw	3
   795  0355  3403               	retlw	3
   796  0356  3403               	retlw	3
   797  0357  3403               	retlw	3
   798  0358  3403               	retlw	3
   799  0359  3409               	retlw	9
   800  035A  3403               	retlw	3
   801  035B  3409               	retlw	9
   802  035C  3403               	retlw	3
   803  035D  3409               	retlw	9
   804  035E  3403               	retlw	3
   805  035F  3409               	retlw	9
   806  0360  3403               	retlw	3
   807  0361  3402               	retlw	2
   808  0362  3403               	retlw	3
   809  0363  34DB               	retlw	219
   810  0364  3430               	retlw	48
   811  0365  340C               	retlw	12
   812  0366  3403               	retlw	3
   813  0367                     __end_of_fastrev_data:	
   814  0367                     _right_data:	
   815  0367  3430               	retlw	48
   816  0368  3419               	retlw	25
   817  0369  3403               	retlw	3
   818  036A  3402               	retlw	2
   819  036B  3403               	retlw	3
   820  036C  3409               	retlw	9
   821  036D  3403               	retlw	3
   822  036E  3403               	retlw	3
   823  036F  3403               	retlw	3
   824  0370  3409               	retlw	9
   825  0371  3403               	retlw	3
   826  0372  3409               	retlw	9
   827  0373  3403               	retlw	3
   828  0374  3409               	retlw	9
   829  0375  3403               	retlw	3
   830  0376  3409               	retlw	9
   831  0377  3403               	retlw	3
   832  0378  3402               	retlw	2
   833  0379  3403               	retlw	3
   834  037A  3409               	retlw	9
   835  037B  3403               	retlw	3
   836  037C  3403               	retlw	3
   837  037D  3403               	retlw	3
   838  037E  3409               	retlw	9
   839  037F  3403               	retlw	3
   840  0380  3402               	retlw	2
   841  0381  3403               	retlw	3
   842  0382  3403               	retlw	3
   843  0383  3403               	retlw	3
   844  0384  3403               	retlw	3
   845  0385  3403               	retlw	3
   846  0386  3403               	retlw	3
   847  0387  3403               	retlw	3
   848  0388  3409               	retlw	9
   849  0389  3403               	retlw	3
   850  038A  3403               	retlw	3
   851  038B  3403               	retlw	3
   852  038C  3409               	retlw	9
   853  038D  3403               	retlw	3
   854  038E  3403               	retlw	3
   855  038F  3403               	retlw	3
   856  0390  3402               	retlw	2
   857  0391  3403               	retlw	3
   858  0392  3409               	retlw	9
   859  0393  3403               	retlw	3
   860  0394  3403               	retlw	3
   861  0395  3403               	retlw	3
   862  0396  3409               	retlw	9
   863  0397  3403               	retlw	3
   864  0398  3402               	retlw	2
   865  0399  3403               	retlw	3
   866  039A  3409               	retlw	9
   867  039B  3403               	retlw	3
   868  039C  3402               	retlw	2
   869  039D  3403               	retlw	3
   870  039E  3409               	retlw	9
   871  039F  3403               	retlw	3
   872  03A0  3409               	retlw	9
   873  03A1  3403               	retlw	3
   874  03A2  3403               	retlw	3
   875  03A3  3403               	retlw	3
   876  03A4  3409               	retlw	9
   877  03A5  3403               	retlw	3
   878  03A6  3402               	retlw	2
   879  03A7  3403               	retlw	3
   880  03A8  3409               	retlw	9
   881  03A9  3403               	retlw	3
   882  03AA  34DB               	retlw	219
   883  03AB  3430               	retlw	48
   884  03AC  340C               	retlw	12
   885  03AD  3403               	retlw	3
   886  03AE                     __end_of_right_data:	
   887  03AE                     _left_data:	
   888  03AE  3430               	retlw	48
   889  03AF  3419               	retlw	25
   890  03B0  3403               	retlw	3
   891  03B1  3402               	retlw	2
   892  03B2  3403               	retlw	3
   893  03B3  3409               	retlw	9
   894  03B4  3403               	retlw	3
   895  03B5  3403               	retlw	3
   896  03B6  3403               	retlw	3
   897  03B7  3409               	retlw	9
   898  03B8  3403               	retlw	3
   899  03B9  3409               	retlw	9
   900  03BA  3403               	retlw	3
   901  03BB  3409               	retlw	9
   902  03BC  3403               	retlw	3
   903  03BD  3409               	retlw	9
   904  03BE  3403               	retlw	3
   905  03BF  3403               	retlw	3
   906  03C0  3403               	retlw	3
   907  03C1  3409               	retlw	9
   908  03C2  3403               	retlw	3
   909  03C3  3403               	retlw	3
   910  03C4  3403               	retlw	3
   911  03C5  3409               	retlw	9
   912  03C6  3403               	retlw	3
   913  03C7  3402               	retlw	2
   914  03C8  3403               	retlw	3
   915  03C9  3403               	retlw	3
   916  03CA  3403               	retlw	3
   917  03CB  3403               	retlw	3
   918  03CC  3403               	retlw	3
   919  03CD  3403               	retlw	3
   920  03CE  3403               	retlw	3
   921  03CF  3409               	retlw	9
   922  03D0  3403               	retlw	3
   923  03D1  3409               	retlw	9
   924  03D2  3403               	retlw	3
   925  03D3  3409               	retlw	9
   926  03D4  3403               	retlw	3
   927  03D5  3403               	retlw	3
   928  03D6  3403               	retlw	3
   929  03D7  3403               	retlw	3
   930  03D8  3403               	retlw	3
   931  03D9  3409               	retlw	9
   932  03DA  3403               	retlw	3
   933  03DB  3403               	retlw	3
   934  03DC  3403               	retlw	3
   935  03DD  3409               	retlw	9
   936  03DE  3403               	retlw	3
   937  03DF  3402               	retlw	2
   938  03E0  3403               	retlw	3
   939  03E1  3403               	retlw	3
   940  03E2  3403               	retlw	3
   941  03E3  3403               	retlw	3
   942  03E4  3403               	retlw	3
   943  03E5  3409               	retlw	9
   944  03E6  3403               	retlw	3
   945  03E7  3409               	retlw	9
   946  03E8  3403               	retlw	3
   947  03E9  3403               	retlw	3
   948  03EA  3403               	retlw	3
   949  03EB  3409               	retlw	9
   950  03EC  3403               	retlw	3
   951  03ED  3403               	retlw	3
   952  03EE  3403               	retlw	3
   953  03EF  3409               	retlw	9
   954  03F0  3403               	retlw	3
   955  03F1  34DB               	retlw	219
   956  03F2  3430               	retlw	48
   957  03F3  340B               	retlw	11
   958  03F4  3403               	retlw	3
   959  03F5                     __end_of_left_data:	
   960  03F5                     _down_data:	
   961  03F5  3430               	retlw	48
   962  03F6  3419               	retlw	25
   963  03F7  3403               	retlw	3
   964  03F8  3402               	retlw	2
   965  03F9  3403               	retlw	3
   966  03FA  3409               	retlw	9
   967  03FB  3403               	retlw	3
   968  03FC  3403               	retlw	3
   969  03FD  3403               	retlw	3
   970  03FE  3409               	retlw	9
   971  03FF  3403               	retlw	3
   972  0400  3409               	retlw	9
   973  0401  3403               	retlw	3
   974  0402  3409               	retlw	9
   975  0403  3403               	retlw	3
   976  0404  3409               	retlw	9
   977  0405  3403               	retlw	3
   978  0406  3403               	retlw	3
   979  0407  3403               	retlw	3
   980  0408  3409               	retlw	9
   981  0409  3403               	retlw	3
   982  040A  3403               	retlw	3
   983  040B  3403               	retlw	3
   984  040C  3409               	retlw	9
   985  040D  3403               	retlw	3
   986  040E  3403               	retlw	3
   987  040F  3403               	retlw	3
   988  0410  3403               	retlw	3
   989  0411  3403               	retlw	3
   990  0412  3403               	retlw	3
   991  0413  3403               	retlw	3
   992  0414  3403               	retlw	3
   993  0415  3403               	retlw	3
   994  0416  3409               	retlw	9
   995  0417  3403               	retlw	3
   996  0418  3409               	retlw	9
   997  0419  3403               	retlw	3
   998  041A  3402               	retlw	2
   999  041B  3403               	retlw	3
  1000  041C  3403               	retlw	3
  1001  041D  3403               	retlw	3
  1002  041E  3409               	retlw	9
  1003  041F  3403               	retlw	3
  1004  0420  3409               	retlw	9
  1005  0421  3403               	retlw	3
  1006  0422  3403               	retlw	3
  1007  0423  3403               	retlw	3
  1008  0424  3409               	retlw	9
  1009  0425  3403               	retlw	3
  1010  0426  3403               	retlw	3
  1011  0427  3403               	retlw	3
  1012  0428  3402               	retlw	2
  1013  0429  3403               	retlw	3
  1014  042A  3409               	retlw	9
  1015  042B  3403               	retlw	3
  1016  042C  3409               	retlw	9
  1017  042D  3403               	retlw	3
  1018  042E  3402               	retlw	2
  1019  042F  3403               	retlw	3
  1020  0430  3403               	retlw	3
  1021  0431  3403               	retlw	3
  1022  0432  3409               	retlw	9
  1023  0433  3403               	retlw	3
  1024  0434  3402               	retlw	2
  1025  0435  3403               	retlw	3
  1026  0436  3409               	retlw	9
  1027  0437  3403               	retlw	3
  1028  0438  34DB               	retlw	219
  1029  0439  3430               	retlw	48
  1030  043A  340C               	retlw	12
  1031  043B  3403               	retlw	3
  1032  043C                     __end_of_down_data:	
  1033  043C                     _up_data:	
  1034  043C  3430               	retlw	48
  1035  043D  3419               	retlw	25
  1036  043E  3403               	retlw	3
  1037  043F  3402               	retlw	2
  1038  0440  3403               	retlw	3
  1039  0441  3409               	retlw	9
  1040  0442  3403               	retlw	3
  1041  0443  3402               	retlw	2
  1042  0444  3403               	retlw	3
  1043  0445  3409               	retlw	9
  1044  0446  3403               	retlw	3
  1045  0447  3409               	retlw	9
  1046  0448  3403               	retlw	3
  1047  0449  3409               	retlw	9
  1048  044A  3403               	retlw	3
  1049  044B  3409               	retlw	9
  1050  044C  3403               	retlw	3
  1051  044D  3403               	retlw	3
  1052  044E  3403               	retlw	3
  1053  044F  3409               	retlw	9
  1054  0450  3403               	retlw	3
  1055  0451  3403               	retlw	3
  1056  0452  3403               	retlw	3
  1057  0453  3409               	retlw	9
  1058  0454  3403               	retlw	3
  1059  0455  3403               	retlw	3
  1060  0456  3403               	retlw	3
  1061  0457  3403               	retlw	3
  1062  0458  3403               	retlw	3
  1063  0459  3403               	retlw	3
  1064  045A  3403               	retlw	3
  1065  045B  3403               	retlw	3
  1066  045C  3403               	retlw	3
  1067  045D  3409               	retlw	9
  1068  045E  3403               	retlw	3
  1069  045F  3402               	retlw	2
  1070  0460  3403               	retlw	3
  1071  0461  3402               	retlw	2
  1072  0462  3403               	retlw	3
  1073  0463  3403               	retlw	3
  1074  0464  3403               	retlw	3
  1075  0465  3409               	retlw	9
  1076  0466  3403               	retlw	3
  1077  0467  3409               	retlw	9
  1078  0468  3403               	retlw	3
  1079  0469  3403               	retlw	3
  1080  046A  3403               	retlw	3
  1081  046B  3409               	retlw	9
  1082  046C  3403               	retlw	3
  1083  046D  3403               	retlw	3
  1084  046E  3403               	retlw	3
  1085  046F  3409               	retlw	9
  1086  0470  3403               	retlw	3
  1087  0471  3409               	retlw	9
  1088  0472  3403               	retlw	3
  1089  0473  3409               	retlw	9
  1090  0474  3403               	retlw	3
  1091  0475  3403               	retlw	3
  1092  0476  3403               	retlw	3
  1093  0477  3403               	retlw	3
  1094  0478  3403               	retlw	3
  1095  0479  3409               	retlw	9
  1096  047A  3403               	retlw	3
  1097  047B  3403               	retlw	3
  1098  047C  3403               	retlw	3
  1099  047D  3409               	retlw	9
  1100  047E  3403               	retlw	3
  1101  047F  34DB               	retlw	219
  1102  0480  3430               	retlw	48
  1103  0481  340B               	retlw	11
  1104  0482  3403               	retlw	3
  1105  0483                     __end_of_up_data:	
  1106  0483                     _ir_codes:	
  1107  0483  3492               	retlw	low (_button7_data| (0+32768))
  1108  0484  3482               	retlw	high (_button7_data| (0+32768))
  1109  0485  3447               	retlw	71
  1110  0486  3406               	retlw	6
  1111  0487  344B               	retlw	low (_button8_data| (0+32768))
  1112  0488  3482               	retlw	high (_button8_data| (0+32768))
  1113  0489  3447               	retlw	71
  1114  048A  3407               	retlw	7
  1115  048B  3404               	retlw	low (_button9_data| (0+32768))
  1116  048C  3482               	retlw	high (_button9_data| (0+32768))
  1117  048D  3447               	retlw	71
  1118  048E  3408               	retlw	8
  1119  048F  34BD               	retlw	low (_button0_data| (0+32768))
  1120  0490  3481               	retlw	high (_button0_data| (0+32768))
  1121  0491  3447               	retlw	71
  1122  0492  3409               	retlw	9
  1123  0493  343C               	retlw	low (_up_data| (0+32768))
  1124  0494  3484               	retlw	high (_up_data| (0+32768))
  1125  0495  3447               	retlw	71
  1126  0496  3400               	retlw	0
  1127  0497  34F5               	retlw	low (_down_data| (0+32768))
  1128  0498  3483               	retlw	high (_down_data| (0+32768))
  1129  0499  3447               	retlw	71
  1130  049A  3401               	retlw	1
  1131  049B  34AE               	retlw	low (_left_data| (0+32768))
  1132  049C  3483               	retlw	high (_left_data| (0+32768))
  1133  049D  3447               	retlw	71
  1134  049E  3402               	retlw	2
  1135  049F  3467               	retlw	low (_right_data| (0+32768))
  1136  04A0  3483               	retlw	high (_right_data| (0+32768))
  1137  04A1  3447               	retlw	71
  1138  04A2  3403               	retlw	3
  1139  04A3  34D9               	retlw	low (_fastfwd_data| (0+32768))
  1140  04A4  3482               	retlw	high (_fastfwd_data| (0+32768))
  1141  04A5  3447               	retlw	71
  1142  04A6  3405               	retlw	5
  1143  04A7  3420               	retlw	low (_fastrev_data| (0+32768))
  1144  04A8  3483               	retlw	high (_fastrev_data| (0+32768))
  1145  04A9  3447               	retlw	71
  1146  04AA  3404               	retlw	4
  1147  04AB                     __end_of_ir_codes:	
  1148  000E                     _TMR1	set	14
  1149  0001                     _TMR0	set	1
  1150  0010                     _T1CON	set	16
  1151  0012                     _T2CON	set	18
  1152  0018                     _RCSTA	set	24
  1153  001A                     _RCREG	set	26
  1154  001F                     _ADCON0bits	set	31
  1155  001F                     _ADCON0	set	31
  1156  001E                     _ADRESH	set	30
  1157  0011                     _TMR2	set	17
  1158  000D                     _PIR2bits	set	13
  1159  000B                     _INTCONbits	set	11
  1160  0008                     _PORTD	set	8
  1161  0008                     _PORTDbits	set	8
  1162  0019                     _TXREG	set	25
  1163  000C                     _PIR1bits	set	12
  1164  009F                     _ADCON1	set	159
  1165  008C                     _PIE1bits	set	140
  1166  0098                     _TXSTA	set	152
  1167  0099                     _SPBRG	set	153
  1168  0088                     _TRISD	set	136
  1169  0088                     _TRISDbits	set	136
  1170  0092                     _PR2	set	146
  1171  0081                     _OPTION_REGbits	set	129
  1172  010C                     _EEDATA	set	268
  1173  010D                     _EEADR	set	269
  1174  018D                     _EECON2	set	397
  1175  018C                     _EECON1bits	set	396
  1176  04AB                     STR_1:	
  1177  04AB  340A               	retlw	10
  1178  04AC  340A               	retlw	10
  1179  04AD  340A               	retlw	10
  1180  04AE  340A               	retlw	10
  1181  04AF  3457               	retlw	87	;'W'
  1182  04B0  3465               	retlw	101	;'e'
  1183  04B1  346C               	retlw	108	;'l'
  1184  04B2  3463               	retlw	99	;'c'
  1185  04B3  346F               	retlw	111	;'o'
  1186  04B4  346D               	retlw	109	;'m'
  1187  04B5  3465               	retlw	101	;'e'
  1188  04B6  3420               	retlw	32	;' '
  1189  04B7  3474               	retlw	116	;'t'
  1190  04B8  346F               	retlw	111	;'o'
  1191  04B9  3420               	retlw	32	;' '
  1192  04BA  3446               	retlw	70	;'F'
  1193  04BB  342D               	retlw	45	;'-'
  1194  04BC  3433               	retlw	51	;'3'
  1195  04BD  3435               	retlw	53	;'5'
  1196  04BE  3420               	retlw	32	;' '
  1197  04BF  346E               	retlw	110	;'n'
  1198  04C0  346F               	retlw	111	;'o'
  1199  04C1  347A               	retlw	122	;'z'
  1200  04C2  347A               	retlw	122	;'z'
  1201  04C3  346C               	retlw	108	;'l'
  1202  04C4  3465               	retlw	101	;'e'
  1203  04C5  340A               	retlw	10
  1204  04C6  3400               	retlw	0
  1205                           
  1206                           ; #config settings
  1207  0000                     
  1208                           	psect	cinit
  1209  0015                     start_initialization:	
  1210  0015                     __initialization:	
  1211                           
  1212                           ; Initialize objects allocated to BANK0
  1213  0015  120A  158A  2011  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1214  001A  00E8               	movwf	__pdataBANK0& (0+127)
  1215  001B  120A  158A  2012  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1216  0020  00E9               	movwf	(__pdataBANK0+1)& (0+127)
  1217  0021  120A  158A  2013  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
  1218  0026  00EA               	movwf	(__pdataBANK0+2)& (0+127)
  1219                           
  1220                           ; Initialize objects allocated to COMMON
  1221  0027  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1222  002C  00FD               	movwf	__pdataCOMMON& (0+127)
  1223                           
  1224                           ; Clear objects allocated to BANK3
  1225  002D  1783               	bsf	3,7	;select IRP bank2
  1226  002E  3090               	movlw	low __pbssBANK3
  1227  002F  0084               	movwf	4
  1228  0030  30D0               	movlw	low (__pbssBANK3+64)
  1229  0031  120A  158A  2014  120A  118A  	fcall	clear_ram0
  1230                           
  1231                           ; Clear objects allocated to BANK1
  1232  0036  1383               	bcf	3,7	;select IRP bank0
  1233  0037  30A0               	movlw	low __pbssBANK1
  1234  0038  0084               	movwf	4
  1235  0039  30E6               	movlw	low (__pbssBANK1+70)
  1236  003A  120A  158A  2014  120A  118A  	fcall	clear_ram0
  1237                           
  1238                           ; Clear objects allocated to BANK0
  1239  003F  3020               	movlw	low __pbssBANK0
  1240  0040  0084               	movwf	4
  1241  0041  3046               	movlw	low (__pbssBANK0+38)
  1242  0042  120A  158A  2014   	fcall	clear_ram0
  1243                           
  1244                           ; Clear objects allocated to COMMON
  1245  0045  01F7               	clrf	__pbssCOMMON& (0+127)
  1246  0046  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1247  0047  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1248  0048  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1249  0049  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1250  004A  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1251  004B                     end_of_initialization:	
  1252                           ;End of C runtime variable initialization code
  1253                           
  1254  004B                     __end_of__initialization:	
  1255  004B  0183               	clrf	3
  1256  004C  120A  118A  2CC7   	ljmp	_main	;jump to C main() function
  1257                           
  1258                           	psect	bssCOMMON
  1259  0077                     __pbssCOMMON:	
  1260  0077                     _pwm_duty:	
  1261  0077                     	ds	2
  1262  0079                     _uart_position2:	
  1263  0079                     	ds	1
  1264  007A                     _uart_position1:	
  1265  007A                     	ds	1
  1266  007B                     _uart_size:	
  1267  007B                     	ds	1
  1268  007C                     _interrupt_done:	
  1269  007C                     	ds	1
  1270                           
  1271                           	psect	dataCOMMON
  1272  007D                     __pdataCOMMON:	
  1273  007D                     _pwm_state:	
  1274  007D                     	ds	1
  1275                           
  1276                           	psect	bssBANK0
  1277  0020                     __pbssBANK0:	
  1278  0020                     _pwm_duty_counter:	
  1279  0020                     	ds	2
  1280  0022                     _tmr2_high:	
  1281  0022                     	ds	2
  1282  0024                     _ir_time:	
  1283  0024                     	ds	2
  1284  0026                     _adc_counter:	
  1285  0026                     	ds	1
  1286  0027                     _ir_timeout:	
  1287  0027                     	ds	1
  1288  0028                     _got_tmr2:	
  1289  0028                     	ds	1
  1290  0029                     _got_ir_int:	
  1291  0029                     	ds	1
  1292  002A                     _repeat_delay:	
  1293  002A                     	ds	1
  1294  002B                     _ir_code:	
  1295  002B                     	ds	1
  1296  002C                     _have_ir:	
  1297  002C                     	ds	1
  1298  002D                     _ir_offset:	
  1299  002D                     	ds	1
  1300  002E                     _preset_delay:	
  1301  002E                     	ds	1
  1302  002F                     _orig_nozzle_angle:	
  1303  002F                     	ds	1
  1304  0030                     _preset_state:	
  1305  0030                     	ds	1
  1306  0031                     _current_preset:	
  1307  0031                     	ds	1
  1308  0032                     _setting_preset:	
  1309  0032                     	ds	1
  1310  0033                     _nozzle_angle:	
  1311  0033                     	ds	1
  1312  0034                     _current_adc:	
  1313  0034                     	ds	1
  1314  0035                     _motor_master:	
  1315  0035                     	ds	1
  1316  0036                     _current_motor:	
  1317  0036                     	ds	1
  1318  0037                     _tick:	
  1319  0037                     	ds	1
  1320  0038                     _got_tick:	
  1321  0038                     	ds	1
  1322  0039                     _led_counter:	
  1323  0039                     	ds	1
  1324  003A                     _armed:	
  1325  003A                     	ds	1
  1326  003B                     _serial_in:	
  1327  003B                     	ds	1
  1328  003C                     _have_serial:	
  1329  003C                     	ds	1
  1330  003D                     _presets:	
  1331  003D                     	ds	8
  1332  0045                     _nozzle_pitch:	
  1333  0045                     	ds	1
  1334                           
  1335                           	psect	dataBANK0
  1336  0068                     __pdataBANK0:	
  1337  0068                     _adc_state:	
  1338  0068                     	ds	1
  1339  0069                     _motor_state:	
  1340  0069                     	ds	1
  1341  006A                     _first_edge:	
  1342  006A                     	ds	1
  1343                           
  1344                           	psect	bssBANK1
  1345  00A0                     __pbssBANK1:	
  1346  00A0                     _ir_code_failed:	
  1347  00A0                     	ds	10
  1348  00AA                     _tracking_state:	
  1349  00AA                     	ds	36
  1350  00CE                     _sensors:	
  1351  00CE                     	ds	24
  1352                           
  1353                           	psect	bssBANK3
  1354  0190                     __pbssBANK3:	
  1355  0190                     _uart_buffer:	
  1356  0190                     	ds	64
  1357                           
  1358                           	psect	clrtext
  1359  0814                     clear_ram0:	
  1360                           ;	Called with FSR containing the base address, and
  1361                           ;	W with the last address+1
  1362                           
  1363  0814  0064               	clrwdt	;clear the watchdog before getting into this loop
  1364  0815                     clrloop0:	
  1365  0815  0180               	clrf	0	;clear RAM location pointed to by FSR
  1366  0816  0A84               	incf	4,f	;increment pointer
  1367  0817  0604               	xorwf	4,w	;XOR with final address
  1368  0818  1903               	btfsc	3,2	;have we reached the end yet?
  1369  0819  3400               	retlw	0	;all done for this memory range, return
  1370  081A  0604               	xorwf	4,w	;XOR again to restore value
  1371  081B  2815               	goto	clrloop0	;do the next byte
  1372                           
  1373                           	psect	cstackCOMMON
  1374  0070                     __pcstackCOMMON:	
  1375  0070                     ?_motor_idle:	
  1376  0070                     ?_motor_home1:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_charge_adc:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_pwm_off:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_pwm_off:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_print_byte:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_handle_uart:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_motor_tracking:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_motor_home6:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_motor_home5:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_motor_home4:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_motor_home3:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_motor_home2:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_arm_motors:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_disarm_motors:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_update_motors:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_motors_tracking:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_do_preset_pitch:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_do_preset_delay2:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_do_preset_angle:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_do_preset_delay1:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_do_preset_center:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_do_preset_save2:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_do_preset_save1:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_read_presets:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_write_presets:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_handle_ir_code:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_handle_ir2:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_handle_ir:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_capture_adc:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_pwm_on:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ??_pwm_on:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_isr:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_main:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475                           
  1476                           ; 1 bytes @ 0x0
  1477  0070                     	ds	1
  1478  0071                     pwm_on@temp_mask:	
  1479  0071                     pwm_off@prev_port:	
  1480                           ; 1 bytes @ 0x1
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x1
  1484  0071                     	ds	1
  1485  0072                     ??_isr:	
  1486                           
  1487                           ; 1 bytes @ 0x2
  1488  0072                     	ds	5
  1489                           
  1490                           	psect	cstackBANK0
  1491  0046                     __pcstackBANK0:	
  1492  0046                     ??_motor_idle:	
  1493  0046                     ??_charge_adc:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0046                     ?_memset:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0046                     ??_print_byte:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0046                     ??_handle_uart:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0046                     ??_arm_motors:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0046                     ??_disarm_motors:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0046                     ??_motors_tracking:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0046                     ??_do_preset_delay2:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0046                     ??_do_preset_delay1:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0046                     ??_do_preset_save1:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0046                     ??_read_presets:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0046                     ??_write_presets:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0046                     ??_capture_adc:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0046                     ?___bmul:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0046                     ___bmul@multiplicand:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0046                     memset@c:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541                           
  1542                           ; 2 bytes @ 0x0
  1543  0046                     	ds	1
  1544  0047                     ??___bmul:	
  1545  0047                     print_byte@c:	
  1546                           ; 1 bytes @ 0x1
  1547                           
  1548  0047                     read_presets@ptr:	
  1549                           ; 1 bytes @ 0x1
  1550                           
  1551  0047                     write_presets@ptr:	
  1552                           ; 1 bytes @ 0x1
  1553                           
  1554                           
  1555                           ; 1 bytes @ 0x1
  1556  0047                     	ds	1
  1557  0048                     ?_print_text:	
  1558  0048                     read_presets@i:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561  0048                     write_presets@i:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564  0048                     capture_adc@sensor:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567  0048                     ___bmul@product:	
  1568                           ; 1 bytes @ 0x2
  1569                           
  1570  0048                     print_text@s:	
  1571                           ; 1 bytes @ 0x2
  1572                           
  1573  0048                     memset@n:	
  1574                           ; 2 bytes @ 0x2
  1575                           
  1576                           
  1577                           ; 2 bytes @ 0x2
  1578  0048                     	ds	1
  1579  0049                     ___bmul@multiplier:	
  1580                           
  1581                           ; 1 bytes @ 0x3
  1582  0049                     	ds	1
  1583  004A                     ??_motor_home1:	
  1584  004A                     ??_memset:	
  1585                           ; 1 bytes @ 0x4
  1586                           
  1587  004A                     ??_print_text:	
  1588                           ; 1 bytes @ 0x4
  1589                           
  1590  004A                     ??_motor_tracking:	
  1591                           ; 1 bytes @ 0x4
  1592                           
  1593  004A                     ??_motor_home6:	
  1594                           ; 1 bytes @ 0x4
  1595                           
  1596  004A                     ??_motor_home5:	
  1597                           ; 1 bytes @ 0x4
  1598                           
  1599  004A                     ??_motor_home4:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602  004A                     ??_motor_home3:	
  1603                           ; 1 bytes @ 0x4
  1604                           
  1605  004A                     ??_motor_home2:	
  1606                           ; 1 bytes @ 0x4
  1607                           
  1608  004A                     ??_update_motors:	
  1609                           ; 1 bytes @ 0x4
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0x4
  1613  004A                     	ds	1
  1614  004B                     memset@p1:	
  1615                           
  1616                           ; 1 bytes @ 0x5
  1617  004B                     	ds	1
  1618  004C                     motor_tracking@encoder:	
  1619  004C                     motor_home6@current_encoder:	
  1620                           ; 1 bytes @ 0x6
  1621                           
  1622  004C                     motor_home4@current_boundary:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625  004C                     motor_home3@tracking:	
  1626                           ; 1 bytes @ 0x6
  1627                           
  1628  004C                     motor_home2@current_boundary:	
  1629                           ; 1 bytes @ 0x6
  1630                           
  1631  004C                     motor_home1@current_boundary:	
  1632                           ; 1 bytes @ 0x6
  1633                           
  1634  004C                     update_motors@diff:	
  1635                           ; 1 bytes @ 0x6
  1636                           
  1637  004C                     memset@p:	
  1638                           ; 1 bytes @ 0x6
  1639                           
  1640                           
  1641                           ; 1 bytes @ 0x6
  1642  004C                     	ds	1
  1643  004D                     motor_tracking@tracking:	
  1644  004D                     motor_home6@tracking:	
  1645                           ; 1 bytes @ 0x7
  1646                           
  1647  004D                     motor_home5@current_encoder:	
  1648                           ; 1 bytes @ 0x7
  1649                           
  1650  004D                     update_motors@diff_551:	
  1651                           ; 1 bytes @ 0x7
  1652                           
  1653  004D                     _motor_home4$488:	
  1654                           ; 1 bytes @ 0x7
  1655                           
  1656  004D                     _motor_home2$520:	
  1657                           ; 2 bytes @ 0x7
  1658                           
  1659  004D                     _motor_home1$537:	
  1660                           ; 2 bytes @ 0x7
  1661                           
  1662                           
  1663                           ; 2 bytes @ 0x7
  1664  004D                     	ds	1
  1665  004E                     ??_do_preset_pitch:	
  1666  004E                     ??_do_preset_angle:	
  1667                           ; 1 bytes @ 0x8
  1668                           
  1669  004E                     ??_do_preset_center:	
  1670                           ; 1 bytes @ 0x8
  1671                           
  1672  004E                     ??_do_preset_save2:	
  1673                           ; 1 bytes @ 0x8
  1674                           
  1675  004E                     ?_handle_preset_button:	
  1676                           ; 1 bytes @ 0x8
  1677                           
  1678  004E                     motor_home5@tracking:	
  1679                           ; 1 bytes @ 0x8
  1680                           
  1681  004E                     handle_preset_button@preset:	
  1682                           ; 1 bytes @ 0x8
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x8
  1686  004E                     	ds	1
  1687  004F                     motor_home4@tracking:	
  1688  004F                     motor_home2@tracking:	
  1689                           ; 1 bytes @ 0x9
  1690                           
  1691  004F                     motor_home1@tracking:	
  1692                           ; 1 bytes @ 0x9
  1693                           
  1694  004F                     do_preset_angle@want_angle:	
  1695                           ; 1 bytes @ 0x9
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x9
  1699  004F                     	ds	1
  1700  0050                     ??_handle_preset_button:	
  1701  0050                     motor_home4@current_encoder:	
  1702                           ; 1 bytes @ 0xA
  1703                           
  1704  0050                     motor_home2@sensor_value:	
  1705                           ; 1 bytes @ 0xA
  1706                           
  1707  0050                     motor_home1@sensor_value:	
  1708                           ; 1 bytes @ 0xA
  1709                           
  1710  0050                     do_preset_pitch@want_pitch:	
  1711                           ; 1 bytes @ 0xA
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0xA
  1715  0050                     	ds	1
  1716  0051                     motor_home4@sensor_value:	
  1717                           
  1718                           ; 1 bytes @ 0xB
  1719  0051                     	ds	1
  1720  0052                     ??_handle_ir_code:	
  1721                           
  1722                           ; 1 bytes @ 0xC
  1723  0052                     	ds	1
  1724  0053                     ??_handle_ir2:	
  1725                           
  1726                           ; 1 bytes @ 0xD
  1727  0053                     	ds	4
  1728  0057                     handle_ir2@data:	
  1729                           
  1730                           ; 2 bytes @ 0x11
  1731  0057                     	ds	2
  1732  0059                     handle_ir2@error:	
  1733                           
  1734                           ; 2 bytes @ 0x13
  1735  0059                     	ds	2
  1736  005B                     handle_ir2@got_one:	
  1737                           
  1738                           ; 1 bytes @ 0x15
  1739  005B                     	ds	1
  1740  005C                     handle_ir2@got_it:	
  1741                           
  1742                           ; 1 bytes @ 0x16
  1743  005C                     	ds	1
  1744  005D                     handle_ir2@data_value:	
  1745                           
  1746                           ; 2 bytes @ 0x17
  1747  005D                     	ds	2
  1748  005F                     handle_ir2@code:	
  1749                           
  1750                           ; 2 bytes @ 0x19
  1751  005F                     	ds	2
  1752  0061                     handle_ir2@i:	
  1753                           
  1754                           ; 1 bytes @ 0x1B
  1755  0061                     	ds	1
  1756  0062                     ??_handle_ir:	
  1757                           
  1758                           ; 1 bytes @ 0x1C
  1759  0062                     	ds	1
  1760  0063                     handle_ir@i:	
  1761                           
  1762                           ; 1 bytes @ 0x1D
  1763  0063                     	ds	1
  1764  0064                     ??_main:	
  1765                           
  1766                           ; 1 bytes @ 0x1E
  1767  0064                     	ds	2
  1768  0066                     main@tracking:	
  1769                           
  1770                           ; 1 bytes @ 0x20
  1771  0066                     	ds	1
  1772  0067                     main@i:	
  1773                           
  1774                           ; 1 bytes @ 0x21
  1775  0067                     	ds	1
  1776                           
  1777                           	psect	maintext
  1778  04C7                     __pmaintext:	
  1779 ;;
  1780 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1781 ;;
  1782 ;; *************** function _main *****************
  1783 ;; Defined at:
  1784 ;;		line 1740 in file "nozzle.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  tracking        1   32[BANK0 ] PTR struct .
  1789 ;;		 -> tracking_state(36), 
  1790 ;;  i               1   33[BANK0 ] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : B00/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       2       0       0       0
  1802 ;;      Temps:          0       2       0       0       0
  1803 ;;      Totals:         0       4       0       0       0
  1804 ;;Total ram usage:        4 bytes
  1805 ;; Hardware stack levels required when called:    8
  1806 ;; This function calls:
  1807 ;;		Absolute function
  1808 ;;		___bmul
  1809 ;;		_capture_adc
  1810 ;;		_charge_adc
  1811 ;;		_do_preset_angle
  1812 ;;		_do_preset_center
  1813 ;;		_do_preset_delay1
  1814 ;;		_do_preset_delay2
  1815 ;;		_do_preset_pitch
  1816 ;;		_do_preset_save1
  1817 ;;		_do_preset_save2
  1818 ;;		_handle_ir
  1819 ;;		_handle_uart
  1820 ;;		_memset
  1821 ;;		_motor_home1
  1822 ;;		_motor_home2
  1823 ;;		_motor_home3
  1824 ;;		_motor_home4
  1825 ;;		_motor_home5
  1826 ;;		_motor_home6
  1827 ;;		_motor_idle
  1828 ;;		_motor_tracking
  1829 ;;		_print_text
  1830 ;;		_read_presets
  1831 ;; This function is called by:
  1832 ;;		Startup code after reset
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _main
  1838  04C7                     _main:	
  1839                           
  1840                           ;nozzle.c: 1742: uint8_t i;
  1841                           ;nozzle.c: 1743: PORTDbits.RD7 = 1;
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1845  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1846  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1847  04C9  1788               	bsf	8,7	;volatile
  1848                           
  1849                           ;nozzle.c: 1744: TRISDbits.TRISD7 = 0;
  1850  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1851  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1852  04CC  1388               	bcf	8,7	;volatile
  1853                           
  1854                           ;nozzle.c: 1746: PORTD &= ~(uint8_t)0b00111111;
  1855  04CD  30C0               	movlw	192
  1856  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1857  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1858  04D0  00E4               	movwf	??_main
  1859  04D1  0864               	movf	??_main,w
  1860  04D2  0588               	andwf	8,f	;volatile
  1861                           
  1862                           ;nozzle.c: 1747: TRISD &= ~(uint8_t)0b00111111;
  1863  04D3  30C0               	movlw	192
  1864  04D4  00E4               	movwf	??_main
  1865  04D5  0864               	movf	??_main,w
  1866  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  1867  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  1868  04D8  0588               	andwf	8,f	;volatile
  1869                           
  1870                           ;nozzle.c: 1749: have_serial = 0;
  1871  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1872  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1873  04DB  01BC               	clrf	_have_serial
  1874                           
  1875                           ;nozzle.c: 1750: SPBRG = (22579000 / 16 / 57600);
  1876  04DC  3018               	movlw	24
  1877  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1878  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1879  04DF  0099               	movwf	25	;volatile
  1880                           
  1881                           ;nozzle.c: 1752: TXSTA = 0b00100100;
  1882  04E0  3024               	movlw	36
  1883  04E1  0098               	movwf	24	;volatile
  1884                           
  1885                           ;nozzle.c: 1754: RCSTA = 0b10010000;
  1886  04E2  3090               	movlw	144
  1887  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1888  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1889  04E5  0098               	movwf	24	;volatile
  1890                           
  1891                           ;nozzle.c: 1755: PIE1bits.RCIE = 1;
  1892  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  1893  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  1894  04E8  168C               	bsf	12,5	;volatile
  1895                           
  1896                           ;nozzle.c: 1759: INTCONbits.INTE = 1;
  1897  04E9  160B               	bsf	11,4	;volatile
  1898                           
  1899                           ;nozzle.c: 1760: INTCONbits.INTF = 0;
  1900  04EA  108B               	bcf	11,1	;volatile
  1901                           
  1902                           ;nozzle.c: 1762: OPTION_REGbits.INTEDG = 0;
  1903  04EB  1301               	bcf	1,6	;volatile
  1904                           
  1905                           ;nozzle.c: 1763: ir_offset = 0;
  1906  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1907  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1908  04EE  01AD               	clrf	_ir_offset
  1909                           
  1910                           ;nozzle.c: 1764: first_edge = 1;
  1911  04EF  01EA               	clrf	_first_edge
  1912  04F0  0AEA               	incf	_first_edge,f
  1913                           
  1914                           ;nozzle.c: 1767: T2CON = 0b00000101;
  1915  04F1  3005               	movlw	5
  1916  04F2  0092               	movwf	18	;volatile
  1917                           
  1918                           ;nozzle.c: 1769: PR2 = 0xff;
  1919  04F3  30FF               	movlw	255
  1920  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1921  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1922  04F6  0092               	movwf	18	;volatile
  1923                           
  1924                           ;nozzle.c: 1770: PIR1bits.TMR2IF = 0;
  1925  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1926  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1927  04F9  108C               	bcf	12,1	;volatile
  1928                           
  1929                           ;nozzle.c: 1771: PIE1bits.TMR2IE = 1;
  1930  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1931  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1932  04FC  148C               	bsf	12,1	;volatile
  1933                           
  1934                           ;nozzle.c: 1776: T1CON = 0b00110001;
  1935  04FD  3031               	movlw	49
  1936  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1937  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0500  0090               	movwf	16	;volatile
  1939                           
  1940                           ;nozzle.c: 1777: TMR1 = (-22579000 / 4 / 8 / 100);
  1941  0501  30E4               	movlw	228
  1942  0502  008F               	movwf	15	;volatile
  1943  0503  3071               	movlw	113
  1944  0504  008E               	movwf	14	;volatile
  1945                           
  1946                           ;nozzle.c: 1779: memset(sensors, 0, sizeof(sensor_state_t) * 6);
  1947  0505  3000               	movlw	0
  1948  0506  00C6               	movwf	memset@c
  1949  0507  00C7               	movwf	memset@c+1
  1950  0508  3018               	movlw	24
  1951  0509  00C8               	movwf	memset@n
  1952  050A  3000               	movlw	0
  1953  050B  00C9               	movwf	memset@n+1
  1954  050C  30CE               	movlw	(low (_sensors| 0))& (0+255)
  1955  050D  120A  158A  20BD  120A  118A  	fcall	_memset
  1956                           
  1957                           ;nozzle.c: 1782: ADCON0 = 0b10000001;
  1958  0512  3081               	movlw	129
  1959  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0515  009F               	movwf	31	;volatile
  1962                           
  1963                           ;nozzle.c: 1784: ADCON1 = 0b01001001;
  1964  0516  3049               	movlw	73
  1965  0517  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0518  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0519  009F               	movwf	31	;volatile
  1968                           
  1969                           ;nozzle.c: 1788: OPTION_REGbits.T0CS = 0;
  1970  051A  1281               	bcf	1,5	;volatile
  1971                           
  1972                           ;nozzle.c: 1789: TMR0 = 0;
  1973  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1974  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1975  051D  0181               	clrf	1	;volatile
  1976                           
  1977                           ;nozzle.c: 1790: INTCONbits.TMR0IF = 0;
  1978  051E  110B               	bcf	11,2	;volatile
  1979                           
  1980                           ;nozzle.c: 1791: INTCONbits.TMR0IE = 1;
  1981  051F  168B               	bsf	11,5	;volatile
  1982                           
  1983                           ;nozzle.c: 1794: read_presets();
  1984  0520  120A  158A  2149  120A  118A  	fcall	_read_presets
  1985                           
  1986                           ;nozzle.c: 1797: INTCONbits.PEIE = 1;
  1987  0525  170B               	bsf	11,6	;volatile
  1988                           
  1989                           ;nozzle.c: 1798: INTCONbits.GIE = 1;
  1990  0526  178B               	bsf	11,7	;volatile
  1991                           
  1992                           ;nozzle.c: 1800: print_text("\n\n\n\nWelcome to F-35 nozzle\n");
  1993  0527  30AB               	movlw	low (STR_1| (0+32768))
  1994  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1996  052A  00C8               	movwf	print_text@s
  1997  052B  3084               	movlw	high (STR_1| (0+32768))
  1998  052C  00C9               	movwf	print_text@s+1
  1999  052D  120A  158A  20FD  120A  118A  	fcall	_print_text
  2000                           
  2001                           ;nozzle.c: 1804: tracking_state[2].min = 8;
  2002  0532  3008               	movlw	8
  2003  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0534  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0535  00E4               	movwf	??_main
  2006  0536  0864               	movf	??_main,w
  2007  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0538  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0539  00CA               	movwf	(_tracking_state^(0+128)+32)
  2010                           
  2011                           ;nozzle.c: 1805: tracking_state[2].max = 31;
  2012  053A  301F               	movlw	31
  2013  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2014  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2015  053D  00E4               	movwf	??_main
  2016  053E  0864               	movf	??_main,w
  2017  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0541  00CB               	movwf	(_tracking_state^(0+128)+33)
  2020                           
  2021                           ;nozzle.c: 1806: tracking_state[2].boundary = 5;
  2022  0542  3005               	movlw	5
  2023  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0545  00E4               	movwf	??_main
  2026  0546  0864               	movf	??_main,w
  2027  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0549  00C2               	movwf	(_tracking_state^(0+128)+24)
  2030                           
  2031                           ;nozzle.c: 1807: tracking_state[2].encoder = 4;
  2032  054A  3004               	movlw	4
  2033  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2034  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2035  054D  00E4               	movwf	??_main
  2036  054E  0864               	movf	??_main,w
  2037  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0551  00C3               	movwf	(_tracking_state^(0+128)+25)
  2040                           
  2041                           ;nozzle.c: 1808: tracking_state[2].dec_mask = (uint8_t)0b00000010;
  2042  0552  3002               	movlw	2
  2043  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0555  00E4               	movwf	??_main
  2046  0556  0864               	movf	??_main,w
  2047  0557  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0558  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0559  00C4               	movwf	(_tracking_state^(0+128)+26)
  2050                           
  2051                           ;nozzle.c: 1809: tracking_state[2].inc_mask = (uint8_t)0b00000001;
  2052  055A  01C5               	clrf	(_tracking_state^(0+128)+27)
  2053  055B  0AC5               	incf	(_tracking_state^(0+128)+27),f
  2054                           
  2055                           ;nozzle.c: 1810: tracking_state[2].total_unmask = ~((uint8_t)0b00000001 | (uint8_t)0b000
      +                          00010);
  2056  055C  30FC               	movlw	252
  2057  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2058  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2059  055F  00E4               	movwf	??_main
  2060  0560  0864               	movf	??_main,w
  2061  0561  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0562  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0563  00C6               	movwf	(_tracking_state^(0+128)+28)
  2064                           
  2065                           ;nozzle.c: 1811: tracking_state[2].total_mask = (uint8_t)0b00000001 | (uint8_t)0b0000001
      +                          0;
  2066  0564  3003               	movlw	3
  2067  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0567  00E4               	movwf	??_main
  2070  0568  0864               	movf	??_main,w
  2071  0569  1683               	bsf	3,5	;RP0=1, select bank1
  2072  056A  1303               	bcf	3,6	;RP1=0, select bank1
  2073  056B  00C7               	movwf	(_tracking_state^(0+128)+29)
  2074                           
  2075                           ;nozzle.c: 1812: tracking_state[2].brake = 1;
  2076  056C  01CD               	clrf	(_tracking_state^(0+128)+35)
  2077  056D  0ACD               	incf	(_tracking_state^(0+128)+35),f
  2078                           
  2079                           ;nozzle.c: 1814: tracking_state[1].min = 17;
  2080  056E  3011               	movlw	17
  2081  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0571  00E4               	movwf	??_main
  2084  0572  0864               	movf	??_main,w
  2085  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0575  00BE               	movwf	(_tracking_state^(0+128)+20)
  2088                           
  2089                           ;nozzle.c: 1815: tracking_state[1].max = 41;
  2090  0576  3029               	movlw	41
  2091  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0579  00E4               	movwf	??_main
  2094  057A  0864               	movf	??_main,w
  2095  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2096  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2097  057D  00BF               	movwf	(_tracking_state^(0+128)+21)
  2098                           
  2099                           ;nozzle.c: 1816: tracking_state[1].boundary = 2;
  2100  057E  3002               	movlw	2
  2101  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0581  00E4               	movwf	??_main
  2104  0582  0864               	movf	??_main,w
  2105  0583  1683               	bsf	3,5	;RP0=1, select bank1
  2106  0584  1303               	bcf	3,6	;RP1=0, select bank1
  2107  0585  00B6               	movwf	(_tracking_state^(0+128)+12)
  2108                           
  2109                           ;nozzle.c: 1817: tracking_state[1].encoder = 3;
  2110  0586  3003               	movlw	3
  2111  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0589  00E4               	movwf	??_main
  2114  058A  0864               	movf	??_main,w
  2115  058B  1683               	bsf	3,5	;RP0=1, select bank1
  2116  058C  1303               	bcf	3,6	;RP1=0, select bank1
  2117  058D  00B7               	movwf	(_tracking_state^(0+128)+13)
  2118                           
  2119                           ;nozzle.c: 1818: tracking_state[1].dec_mask = (uint8_t)0b00100000;
  2120  058E  3020               	movlw	32
  2121  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0591  00E4               	movwf	??_main
  2124  0592  0864               	movf	??_main,w
  2125  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2126  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2127  0595  00B8               	movwf	(_tracking_state^(0+128)+14)
  2128                           
  2129                           ;nozzle.c: 1819: tracking_state[1].inc_mask = (uint8_t)0b00010000;
  2130  0596  3010               	movlw	16
  2131  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0599  00E4               	movwf	??_main
  2134  059A  0864               	movf	??_main,w
  2135  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2136  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2137  059D  00B9               	movwf	(_tracking_state^(0+128)+15)
  2138                           
  2139                           ;nozzle.c: 1820: tracking_state[1].total_unmask = ~((uint8_t)0b00100000 | (uint8_t)0b000
      +                          10000);
  2140  059E  30CF               	movlw	207
  2141  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2142  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2143  05A1  00E4               	movwf	??_main
  2144  05A2  0864               	movf	??_main,w
  2145  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2146  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2147  05A5  00BA               	movwf	(_tracking_state^(0+128)+16)
  2148                           
  2149                           ;nozzle.c: 1821: tracking_state[1].total_mask = (uint8_t)0b00100000 | (uint8_t)0b0001000
      +                          0;
  2150  05A6  3030               	movlw	48
  2151  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2152  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2153  05A9  00E4               	movwf	??_main
  2154  05AA  0864               	movf	??_main,w
  2155  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2156  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2157  05AD  00BB               	movwf	(_tracking_state^(0+128)+17)
  2158                           
  2159                           ;nozzle.c: 1823: tracking_state[0].min = 6;
  2160  05AE  3006               	movlw	6
  2161  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2162  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2163  05B1  00E4               	movwf	??_main
  2164  05B2  0864               	movf	??_main,w
  2165  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2166  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  2167  05B5  00B2               	movwf	(_tracking_state^(0+128)+8)
  2168                           
  2169                           ;nozzle.c: 1824: tracking_state[0].max = 45;
  2170  05B6  302D               	movlw	45
  2171  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2172  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2173  05B9  00E4               	movwf	??_main
  2174  05BA  0864               	movf	??_main,w
  2175  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2176  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2177  05BD  00B3               	movwf	(_tracking_state^(0+128)+9)
  2178                           
  2179                           ;nozzle.c: 1825: tracking_state[0].boundary = 1;
  2180  05BE  01AA               	clrf	_tracking_state^(0+128)
  2181  05BF  0AAA               	incf	_tracking_state^(0+128),f
  2182                           
  2183                           ;nozzle.c: 1826: tracking_state[0].encoder = 0;
  2184  05C0  01AB               	clrf	(_tracking_state^(0+128)+1)
  2185                           
  2186                           ;nozzle.c: 1827: tracking_state[0].dec_mask = (uint8_t)0b00001000;
  2187  05C1  3008               	movlw	8
  2188  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2189  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2190  05C4  00E4               	movwf	??_main
  2191  05C5  0864               	movf	??_main,w
  2192  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2193  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2194  05C8  00AC               	movwf	(_tracking_state^(0+128)+2)
  2195                           
  2196                           ;nozzle.c: 1828: tracking_state[0].inc_mask = (uint8_t)0b00000100;
  2197  05C9  3004               	movlw	4
  2198  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2199  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2200  05CC  00E4               	movwf	??_main
  2201  05CD  0864               	movf	??_main,w
  2202  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  2203  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  2204  05D0  00AD               	movwf	(_tracking_state^(0+128)+3)
  2205                           
  2206                           ;nozzle.c: 1829: tracking_state[0].total_unmask = ~((uint8_t)0b00000100 | (uint8_t)0b000
      +                          01000);
  2207  05D1  30F3               	movlw	243
  2208  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2209  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2210  05D4  00E4               	movwf	??_main
  2211  05D5  0864               	movf	??_main,w
  2212  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  2213  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  2214  05D8  00AE               	movwf	(_tracking_state^(0+128)+4)
  2215                           
  2216                           ;nozzle.c: 1830: tracking_state[0].total_mask = (uint8_t)0b00000100 | (uint8_t)0b0000100
      +                          0;
  2217  05D9  300C               	movlw	12
  2218  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2219  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2220  05DC  00E4               	movwf	??_main
  2221  05DD  0864               	movf	??_main,w
  2222  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  2223  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  2224  05E0  00AF               	movwf	(_tracking_state^(0+128)+5)
  2225  05E1                     l510:	
  2226                           ;nozzle.c: 1845: while(1)
  2227                           
  2228  05E1  0064               	clrwdt	;# 
  2229                           
  2230                           ;nozzle.c: 1850: if(!armed)
  2231  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2232  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2233  05E4  083A               	movf	_armed,w
  2234  05E5  1D03               	btfss	3,2
  2235  05E6  2DEB               	goto	l3530
  2236                           
  2237                           ;nozzle.c: 1851: {
  2238                           ;nozzle.c: 1852: motor_master &= ~(uint8_t)0b00111111;
  2239  05E7  30C0               	movlw	192
  2240  05E8  00E4               	movwf	??_main
  2241  05E9  0864               	movf	??_main,w
  2242  05EA  05B5               	andwf	_motor_master,f
  2243  05EB                     l3530:	
  2244                           ;nozzle.c: 1854: else
  2245                           ;nozzle.c: 1855: {
  2246                           
  2247                           ;nozzle.c: 1853: }
  2248                           
  2249                           
  2250                           ;nozzle.c: 1857: }
  2251                           ;nozzle.c: 1860: handle_uart();
  2252  05EB  120A  158A  2086  120A  118A  	fcall	_handle_uart
  2253                           
  2254                           ;nozzle.c: 1868: if(got_tick)
  2255  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2256  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2257  05F2  0838               	movf	_got_tick,w
  2258  05F3  1903               	btfsc	3,2
  2259  05F4  2E4E               	goto	l3574
  2260                           
  2261                           ;nozzle.c: 1869: {
  2262                           ;nozzle.c: 1870: got_tick = 0;
  2263  05F5  01B8               	clrf	_got_tick
  2264                           
  2265                           ;nozzle.c: 1871: for(i = 0; i < 3; i++)
  2266  05F6  01E7               	clrf	main@i
  2267  05F7  3003               	movlw	3
  2268  05F8  0267               	subwf	main@i,w
  2269  05F9  1803               	btfsc	3,0
  2270  05FA  2E1F               	goto	l3550
  2271  05FB                     l3540:	
  2272                           
  2273                           ;nozzle.c: 1872: {
  2274                           ;nozzle.c: 1873: tracking_state_t *tracking = &tracking_state[i];
  2275  05FB  300C               	movlw	12
  2276  05FC  00E4               	movwf	??_main
  2277  05FD  0864               	movf	??_main,w
  2278  05FE  00C6               	movwf	___bmul@multiplicand
  2279  05FF  0867               	movf	main@i,w
  2280  0600  120A  158A  2060  120A  118A  	fcall	___bmul
  2281  0605  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  2282  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0608  00E5               	movwf	??_main+1
  2285  0609  0865               	movf	??_main+1,w
  2286  060A  00E6               	movwf	main@tracking
  2287                           
  2288                           ;nozzle.c: 1874: if(tracking->timer > 0)
  2289  060B  0866               	movf	main@tracking,w
  2290  060C  3E06               	addlw	6
  2291  060D  0084               	movwf	4
  2292  060E  1383               	bcf	3,7	;select IRP bank0
  2293  060F  0800               	movf	0,w
  2294  0610  1903               	btfsc	3,2
  2295  0611  2E17               	goto	l3546
  2296                           
  2297                           ;nozzle.c: 1875: {
  2298                           ;nozzle.c: 1876: tracking->timer--;
  2299  0612  0866               	movf	main@tracking,w
  2300  0613  3E06               	addlw	6
  2301  0614  0084               	movwf	4
  2302  0615  3001               	movlw	1
  2303  0616  0280               	subwf	0,f
  2304  0617                     l3546:	
  2305  0617  3001               	movlw	1
  2306  0618  00E4               	movwf	??_main
  2307  0619  0864               	movf	??_main,w
  2308  061A  07E7               	addwf	main@i,f
  2309  061B  3003               	movlw	3
  2310  061C  0267               	subwf	main@i,w
  2311  061D  1C03               	skipc
  2312  061E  2DFB               	goto	l3540
  2313  061F                     l3550:	
  2314                           
  2315                           ;nozzle.c: 1877: }
  2316                           ;nozzle.c: 1878: }
  2317                           ;nozzle.c: 1879: tick++;
  2318  061F  3001               	movlw	1
  2319  0620  00E4               	movwf	??_main
  2320  0621  0864               	movf	??_main,w
  2321  0622  07B7               	addwf	_tick,f
  2322                           
  2323                           ;nozzle.c: 1880: if(repeat_delay > 0)
  2324  0623  082A               	movf	_repeat_delay,w
  2325  0624  1903               	btfsc	3,2
  2326  0625  2E28               	goto	l517
  2327                           
  2328                           ;nozzle.c: 1881: {
  2329                           ;nozzle.c: 1882: repeat_delay--;
  2330  0626  3001               	movlw	1
  2331  0627  02AA               	subwf	_repeat_delay,f
  2332  0628                     l517:	
  2333                           
  2334                           ;nozzle.c: 1883: }
  2335                           ;nozzle.c: 1884: if(preset_delay > 0)
  2336  0628  082E               	movf	_preset_delay,w
  2337  0629  1903               	btfsc	3,2
  2338  062A  2E2D               	goto	l518
  2339                           
  2340                           ;nozzle.c: 1885: {
  2341                           ;nozzle.c: 1886: preset_delay--;
  2342  062B  3001               	movlw	1
  2343  062C  02AE               	subwf	_preset_delay,f
  2344  062D                     l518:	
  2345                           
  2346                           ;nozzle.c: 1887: }
  2347                           ;nozzle.c: 1890: if(!armed)
  2348  062D  083A               	movf	_armed,w
  2349  062E  1D03               	btfss	3,2
  2350  062F  2E36               	goto	l3564
  2351                           
  2352                           ;nozzle.c: 1891: {
  2353                           ;nozzle.c: 1892: led_counter++;
  2354  0630  3001               	movlw	1
  2355  0631  00E4               	movwf	??_main
  2356  0632  0864               	movf	??_main,w
  2357  0633  07B9               	addwf	_led_counter,f
  2358                           
  2359                           ;nozzle.c: 1893: if(led_counter >= (100 / 2))
  2360  0634  3032               	movlw	50
  2361  0635  2E3E               	goto	L3
  2362  0636                     l3564:	
  2363                           ;nozzle.c: 1897: }
  2364                           ;nozzle.c: 1898: }
  2365                           
  2366                           ;nozzle.c: 1896: PORTDbits.RD7 = !PORTDbits.RD7;
  2367                           
  2368                           ;nozzle.c: 1894: {
  2369                           ;nozzle.c: 1895: led_counter = 0;
  2370                           
  2371                           
  2372                           ;nozzle.c: 1899: else
  2373                           ;nozzle.c: 1900: if(setting_preset)
  2374  0636  0832               	movf	_setting_preset,w
  2375  0637  1903               	btfsc	3,2
  2376  0638  2E4E               	goto	l3574
  2377                           
  2378                           ;nozzle.c: 1901: {
  2379                           ;nozzle.c: 1902: led_counter++;
  2380  0639  3001               	movlw	1
  2381  063A  00E4               	movwf	??_main
  2382  063B  0864               	movf	??_main,w
  2383  063C  07B9               	addwf	_led_counter,f
  2384                           
  2385                           ;nozzle.c: 1903: if(led_counter >= (100 / 4))
  2386  063D  3019               	movlw	25
  2387  063E                     L3:	
  2388  063E  0239               	subwf	_led_counter,w
  2389  063F  1C03               	skipc
  2390  0640  2E4E               	goto	l3574
  2391                           
  2392                           ;nozzle.c: 1904: {
  2393                           ;nozzle.c: 1905: led_counter = 0;
  2394  0641  01B9               	clrf	_led_counter
  2395                           
  2396                           ;nozzle.c: 1906: PORTDbits.RD7 = !PORTDbits.RD7;
  2397  0642  1003               	clrc
  2398  0643  1F88               	btfss	8,7	;volatile
  2399  0644  1403               	setc
  2400  0645  1C03               	btfss	3,0
  2401  0646  2E4B               	goto	u4050
  2402  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0649  1788               	bsf	8,7	;volatile
  2405  064A  2E4E               	goto	l3574
  2406  064B                     u4050:	
  2407  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2408  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2409  064D  1388               	bcf	8,7	;volatile
  2410  064E                     l3574:	
  2411                           
  2412                           ;nozzle.c: 1907: }
  2413                           ;nozzle.c: 1908: }
  2414                           ;nozzle.c: 1909: }
  2415                           ;nozzle.c: 1912: handle_ir();
  2416  064E  120A  158A  23AC  120A  118A  	fcall	_handle_ir
  2417                           
  2418                           ;nozzle.c: 1917: if(got_tmr2)
  2419  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0655  0828               	movf	_got_tmr2,w
  2422  0656  1903               	btfsc	3,2
  2423  0657  2E5F               	goto	l3582
  2424                           
  2425                           ;nozzle.c: 1918: {
  2426                           ;nozzle.c: 1919: got_tmr2 = 0;
  2427  0658  01A8               	clrf	_got_tmr2
  2428                           
  2429                           ;nozzle.c: 1920: adc_state();
  2430  0659  0868               	movf	_adc_state,w
  2431  065A  120A  118A  204F  120A  118A  	fcall	fptable
  2432  065F                     l3582:	
  2433                           
  2434                           ;nozzle.c: 1921: }
  2435                           ;nozzle.c: 1924: motor_state();
  2436  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0661  0869               	movf	_motor_state,w
  2439  0662  120A  118A  204F  120A  118A  	fcall	fptable
  2440                           
  2441                           ;nozzle.c: 1926: if(preset_state != 0)
  2442  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0669  0830               	movf	_preset_state,w
  2445  066A  1903               	btfsc	3,2
  2446  066B  2DE1               	goto	l510
  2447                           
  2448                           ;nozzle.c: 1927: {
  2449                           ;nozzle.c: 1928: preset_state();
  2450  066C  0830               	movf	_preset_state,w
  2451  066D  120A  118A  204F  120A  118A  	fcall	fptable
  2452  0672  2DE1               	goto	l510
  2453  0673                     __end_of_main:	
  2454                           
  2455                           	psect	text1
  2456  0949                     __ptext1:	
  2457 ;; *************** function _read_presets *****************
  2458 ;; Defined at:
  2459 ;;		line 884 in file "nozzle.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  i               1    2[BANK0 ] unsigned char 
  2464 ;;  ptr             1    1[BANK0 ] PTR unsigned char 
  2465 ;;		 -> presets(8), 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       0       0       0
  2476 ;;      Locals:         0       2       0       0       0
  2477 ;;      Temps:          0       1       0       0       0
  2478 ;;      Totals:         0       3       0       0       0
  2479 ;;Total ram usage:        3 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    2
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _read_presets
  2491  0949                     _read_presets:	
  2492                           
  2493                           ;nozzle.c: 886: uint8_t i;
  2494                           ;nozzle.c: 887: uint8_t *ptr = (uint8_t*)presets;
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _read_presets: [wreg-fsr0h+status,2+status,0]
  2498  0949  303D               	movlw	(low (_presets| 0))& (0+255)
  2499  094A  1283               	bcf	3,5	;RP0=0, select bank0
  2500  094B  1303               	bcf	3,6	;RP1=0, select bank0
  2501  094C  00C6               	movwf	??_read_presets
  2502  094D  0846               	movf	??_read_presets,w
  2503  094E  00C7               	movwf	read_presets@ptr
  2504                           
  2505                           ;nozzle.c: 888: for(i = 0; i < sizeof(presets); i++)
  2506  094F  01C8               	clrf	read_presets@i
  2507  0950                     L4:	
  2508  0950  3008               	movlw	8
  2509  0951  0248               	subwf	read_presets@i,w
  2510  0952  1803               	btfsc	3,0
  2511  0953  0008               	return
  2512                           
  2513                           ;nozzle.c: 889: {
  2514                           ;nozzle.c: 890: EEADR = 0x00 + i;
  2515  0954  0848               	movf	read_presets@i,w
  2516  0955  1283               	bcf	3,5	;RP0=0, select bank2
  2517  0956  1703               	bsf	3,6	;RP1=1, select bank2
  2518  0957  008D               	movwf	13	;volatile
  2519                           
  2520                           ;nozzle.c: 891: EECON1bits.EEPGD = 0;
  2521  0958  1683               	bsf	3,5	;RP0=1, select bank3
  2522  0959  1703               	bsf	3,6	;RP1=1, select bank3
  2523  095A  138C               	bcf	12,7	;volsfr
  2524                           
  2525                           ;nozzle.c: 892: EECON1bits.RD = 1;
  2526  095B  140C               	bsf	12,0	;volsfr
  2527                           
  2528                           ;nozzle.c: 893: *ptr++ = EEDATA;
  2529  095C  1283               	bcf	3,5	;RP0=0, select bank2
  2530  095D  1703               	bsf	3,6	;RP1=1, select bank2
  2531  095E  080C               	movf	12,w	;volatile
  2532  095F  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0960  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0961  00C6               	movwf	??_read_presets
  2535  0962  0847               	movf	read_presets@ptr,w
  2536  0963  0084               	movwf	4
  2537  0964  0846               	movf	??_read_presets,w
  2538  0965  1383               	bcf	3,7	;select IRP bank0
  2539  0966  0080               	movwf	0
  2540  0967  3001               	movlw	1
  2541  0968  00C6               	movwf	??_read_presets
  2542  0969  0846               	movf	??_read_presets,w
  2543  096A  07C7               	addwf	read_presets@ptr,f
  2544  096B  3001               	movlw	1
  2545  096C  00C6               	movwf	??_read_presets
  2546  096D  0846               	movf	??_read_presets,w
  2547  096E  07C8               	addwf	read_presets@i,f
  2548  096F  2950               	goto	L4
  2549  0970                     __end_of_read_presets:	
  2550                           
  2551                           	psect	text2
  2552  08FD                     __ptext2:	
  2553 ;; *************** function _print_text *****************
  2554 ;; Defined at:
  2555 ;;		line 343 in file "nozzle.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  2558 ;;		 -> STR_1(28), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       2       0       0       0
  2571 ;;      Locals:         0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         0       2       0       0       0
  2574 ;;Total ram usage:        2 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    3
  2577 ;; This function calls:
  2578 ;;		_print_byte
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _print_text
  2586  08FD                     _print_text:	
  2587  08FD                     l3210:	
  2588                           ;nozzle.c: 345: while(*s != 0)
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _print_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2592                           
  2593  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  2594  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  2595  08FF  0849               	movf	print_text@s+1,w
  2596  0900  00FF               	movwf	127
  2597  0901  0848               	movf	print_text@s,w
  2598  0902  0084               	movwf	4
  2599  0903  120A  118A  2100  120A  158A  	fcall	stringtab
  2600  0908  3A00               	xorlw	0
  2601  0909  1903               	btfsc	3,2
  2602  090A  0008               	return
  2603                           
  2604                           ;nozzle.c: 346: {
  2605                           ;nozzle.c: 347: print_byte(*s);
  2606  090B  1283               	bcf	3,5	;RP0=0, select bank0
  2607  090C  1303               	bcf	3,6	;RP1=0, select bank0
  2608  090D  0849               	movf	print_text@s+1,w
  2609  090E  00FF               	movwf	127
  2610  090F  0848               	movf	print_text@s,w
  2611  0910  0084               	movwf	4
  2612  0911  120A  118A  2100  120A  158A  	fcall	stringtab
  2613  0916  120A  158A  20A0  120A  158A  	fcall	_print_byte
  2614                           
  2615                           ;nozzle.c: 348: s++;
  2616  091B  3001               	movlw	1
  2617  091C  1283               	bcf	3,5	;RP0=0, select bank0
  2618  091D  1303               	bcf	3,6	;RP1=0, select bank0
  2619  091E  07C8               	addwf	print_text@s,f
  2620  091F  1803               	skipnc
  2621  0920  0AC9               	incf	print_text@s+1,f
  2622  0921  28FD               	goto	l3210
  2623  0922                     __end_of_print_text:	
  2624                           
  2625                           	psect	text3
  2626  08A0                     __ptext3:	
  2627 ;; *************** function _print_byte *****************
  2628 ;; Defined at:
  2629 ;;		line 330 in file "nozzle.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  c               1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  c               1    1[BANK0 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       0       0       0
  2644 ;;      Locals:         0       1       0       0       0
  2645 ;;      Temps:          0       1       0       0       0
  2646 ;;      Totals:         0       2       0       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_print_text
  2654 ;;		_print_number_nospace
  2655 ;;		_print_number2
  2656 ;;		_print_number
  2657 ;;		_print_number_signed
  2658 ;;		_print_hex2
  2659 ;;		_print_bin
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _print_byte
  2665  08A0                     _print_byte:	
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _print_byte: [wreg-fsr0h+status,2+status,0]
  2669                           ;print_byte@c stored from wreg
  2670  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  2671  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  2672  08A2  00C7               	movwf	print_byte@c
  2673                           
  2674                           ;nozzle.c: 332: if(uart_size < 64)
  2675  08A3  3040               	movlw	64
  2676  08A4  027B               	subwf	_uart_size,w
  2677  08A5  1803               	skipnc
  2678  08A6  0008               	return
  2679                           
  2680                           ;nozzle.c: 333: {
  2681                           ;nozzle.c: 334: uart_buffer[uart_position1++] = c;
  2682  08A7  0847               	movf	print_byte@c,w
  2683  08A8  00C6               	movwf	??_print_byte
  2684  08A9  087A               	movf	_uart_position1,w
  2685  08AA  3E90               	addlw	(low (_uart_buffer| (0+256)))& (0+255)
  2686  08AB  0084               	movwf	4
  2687  08AC  0846               	movf	??_print_byte,w
  2688  08AD  1783               	bsf	3,7	;select IRP bank3
  2689  08AE  0080               	movwf	0
  2690  08AF  3001               	movlw	1
  2691  08B0  00C6               	movwf	??_print_byte
  2692  08B1  0846               	movf	??_print_byte,w
  2693  08B2  07FA               	addwf	_uart_position1,f
  2694                           
  2695                           ;nozzle.c: 335: uart_size++;
  2696  08B3  3001               	movlw	1
  2697  08B4  00C6               	movwf	??_print_byte
  2698  08B5  0846               	movf	??_print_byte,w
  2699  08B6  07FB               	addwf	_uart_size,f
  2700                           
  2701                           ;nozzle.c: 336: if(uart_position1 >= 64)
  2702  08B7  3040               	movlw	64
  2703  08B8  027A               	subwf	_uart_position1,w
  2704  08B9  1C03               	skipc
  2705  08BA  0008               	return
  2706                           
  2707                           ;nozzle.c: 337: {
  2708                           ;nozzle.c: 338: uart_position1 = 0;
  2709  08BB  01FA               	clrf	_uart_position1
  2710  08BC  0008               	return
  2711  08BD                     __end_of_print_byte:	
  2712                           
  2713                           	psect	text4
  2714  0C0A                     __ptext4:	
  2715 ;; *************** function _motor_home2 *****************
  2716 ;; Defined at:
  2717 ;;		line 625 in file "nozzle.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  sensor_value    1   10[BANK0 ] unsigned char 
  2722 ;;  tracking        1    9[BANK0 ] PTR struct .
  2723 ;;		 -> tracking_state(36), 
  2724 ;;  current_boun    1    6[BANK0 ] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         0       5       0       0       0
  2736 ;;      Temps:          0       2       0       0       0
  2737 ;;      Totals:         0       7       0       0       0
  2738 ;;Total ram usage:        7 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    3
  2741 ;; This function calls:
  2742 ;;		___bmul
  2743 ;; This function is called by:
  2744 ;;		_motor_home1
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _motor_home2
  2751  0C0A                     _motor_home2:	
  2752                           
  2753                           ;nozzle.c: 627: tracking_state_t *tracking = &tracking_state[current_motor];
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _motor_home2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2757  0C0A  300C               	movlw	12
  2758  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0C0D  00CA               	movwf	??_motor_home2
  2761  0C0E  084A               	movf	??_motor_home2,w
  2762  0C0F  00C6               	movwf	___bmul@multiplicand
  2763  0C10  0836               	movf	_current_motor,w
  2764  0C11  120A  158A  2060  120A  158A  	fcall	___bmul
  2765  0C16  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  2766  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0C19  00CB               	movwf	??_motor_home2+1
  2769  0C1A  084B               	movf	??_motor_home2+1,w
  2770  0C1B  00CF               	movwf	motor_home2@tracking
  2771                           
  2772                           ;nozzle.c: 628: uint8_t current_boundary = tracking->boundary;
  2773  0C1C  084F               	movf	motor_home2@tracking,w
  2774  0C1D  0084               	movwf	4
  2775  0C1E  1383               	bcf	3,7	;select IRP bank0
  2776  0C1F  0800               	movf	0,w
  2777  0C20  00CA               	movwf	??_motor_home2
  2778  0C21  084A               	movf	??_motor_home2,w
  2779  0C22  00CC               	movwf	motor_home2@current_boundary
  2780                           
  2781                           ;nozzle.c: 629: uint8_t sensor_value = sensors[current_boundary].analog;
  2782  0C23  084C               	movf	motor_home2@current_boundary,w
  2783  0C24  00CA               	movwf	??_motor_home2
  2784  0C25  3001               	movlw	1
  2785  0C26                     u3635:	
  2786  0C26  1003               	clrc
  2787  0C27  0DCA               	rlf	??_motor_home2,f
  2788  0C28  3EFF               	addlw	-1
  2789  0C29  1D03               	skipz
  2790  0C2A  2C26               	goto	u3635
  2791  0C2B  1003               	clrc
  2792  0C2C  0D4A               	rlf	??_motor_home2,w
  2793  0C2D  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  2794  0C2E  0084               	movwf	4
  2795  0C2F  0800               	movf	0,w
  2796  0C30  00CB               	movwf	??_motor_home2+1
  2797  0C31  084B               	movf	??_motor_home2+1,w
  2798  0C32  00D0               	movwf	motor_home2@sensor_value
  2799                           
  2800                           ;nozzle.c: 630: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  2801  0C33  0850               	movf	motor_home2@sensor_value,w
  2802  0C34  3E80               	addlw	128
  2803  0C35  00CA               	movwf	??_motor_home2
  2804  0C36  30FF               	movlw	255
  2805  0C37  1803               	skipnc
  2806  0C38  3000               	movlw	0
  2807  0C39  00CB               	movwf	??_motor_home2+1
  2808  0C3A  1BCB               	btfsc	??_motor_home2+1,7
  2809  0C3B  2C43               	goto	l3282
  2810  0C3C  0850               	movf	motor_home2@sensor_value,w
  2811  0C3D  3E80               	addlw	128
  2812  0C3E  00CD               	movwf	_motor_home2$520
  2813  0C3F  30FF               	movlw	255
  2814  0C40  1803               	skipnc
  2815  0C41  3000               	movlw	0
  2816  0C42  2C52               	goto	L5
  2817  0C43                     l3282:	
  2818  0C43  0850               	movf	motor_home2@sensor_value,w
  2819  0C44  3E80               	addlw	128
  2820  0C45  00CA               	movwf	??_motor_home2
  2821  0C46  30FF               	movlw	255
  2822  0C47  1803               	skipnc
  2823  0C48  3000               	movlw	0
  2824  0C49  00CB               	movwf	??_motor_home2+1
  2825  0C4A  09CA               	comf	??_motor_home2,f
  2826  0C4B  09CB               	comf	??_motor_home2+1,f
  2827  0C4C  0ACA               	incf	??_motor_home2,f
  2828  0C4D  1903               	skipnz
  2829  0C4E  0ACB               	incf	??_motor_home2+1,f
  2830  0C4F  084A               	movf	??_motor_home2,w
  2831  0C50  00CD               	movwf	_motor_home2$520
  2832  0C51  084B               	movf	??_motor_home2+1,w
  2833  0C52                     L5:	
  2834  0C52  00CE               	movwf	_motor_home2$520+1
  2835  0C53  084E               	movf	_motor_home2$520+1,w
  2836  0C54  3A80               	xorlw	128
  2837  0C55  00FF               	movwf	127
  2838  0C56  3080               	movlw	128
  2839  0C57  027F               	subwf	127,w
  2840  0C58  1D03               	skipz
  2841  0C59  2C5C               	goto	u3655
  2842  0C5A  3020               	movlw	32
  2843  0C5B  024D               	subwf	_motor_home2$520,w
  2844  0C5C                     u3655:	
  2845  0C5C  1C03               	skipc
  2846  0C5D  0008               	return
  2847                           
  2848                           ;nozzle.c: 631: {
  2849                           ;nozzle.c: 633: motor_master &= tracking->total_unmask;
  2850  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0C60  084F               	movf	motor_home2@tracking,w
  2853  0C61  3E04               	addlw	4
  2854  0C62  0084               	movwf	4
  2855  0C63  1383               	bcf	3,7	;select IRP bank0
  2856  0C64  0800               	movf	0,w
  2857  0C65  00CA               	movwf	??_motor_home2
  2858  0C66  084A               	movf	??_motor_home2,w
  2859  0C67  05B5               	andwf	_motor_master,f
  2860                           
  2861                           ;nozzle.c: 634: motor_state = motor_home3;
  2862  0C68  3036               	movlw	(low (fp__motor_home3-fpbase))& (0+255)
  2863  0C69  00CA               	movwf	??_motor_home2
  2864  0C6A  084A               	movf	??_motor_home2,w
  2865  0C6B  00E9               	movwf	_motor_state
  2866                           
  2867                           ;nozzle.c: 635: tracking->timer = (100 / 2);
  2868  0C6C  3032               	movlw	50
  2869  0C6D  00CA               	movwf	??_motor_home2
  2870  0C6E  084F               	movf	motor_home2@tracking,w
  2871  0C6F  3E06               	addlw	6
  2872  0C70  0084               	movwf	4
  2873  0C71  084A               	movf	??_motor_home2,w
  2874  0C72  0080               	movwf	0
  2875  0C73  0008               	return
  2876  0C74                     __end_of_motor_home2:	
  2877                           
  2878                           	psect	text5
  2879  0970                     __ptext5:	
  2880 ;; *************** function _motor_home3 *****************
  2881 ;; Defined at:
  2882 ;;		line 613 in file "nozzle.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  tracking        1    6[BANK0 ] PTR struct .
  2887 ;;		 -> tracking_state(36), 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       1       0       0       0
  2899 ;;      Temps:          0       2       0       0       0
  2900 ;;      Totals:         0       3       0       0       0
  2901 ;;Total ram usage:        3 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    3
  2904 ;; This function calls:
  2905 ;;		___bmul
  2906 ;; This function is called by:
  2907 ;;		_motor_home2
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _motor_home3
  2914  0970                     _motor_home3:	
  2915                           
  2916                           ;nozzle.c: 615: tracking_state_t *tracking = &tracking_state[current_motor];
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _motor_home3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2920  0970  300C               	movlw	12
  2921  0971  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0972  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0973  00CA               	movwf	??_motor_home3
  2924  0974  084A               	movf	??_motor_home3,w
  2925  0975  00C6               	movwf	___bmul@multiplicand
  2926  0976  0836               	movf	_current_motor,w
  2927  0977  120A  158A  2060  120A  158A  	fcall	___bmul
  2928  097C  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  2929  097D  1283               	bcf	3,5	;RP0=0, select bank0
  2930  097E  1303               	bcf	3,6	;RP1=0, select bank0
  2931  097F  00CB               	movwf	??_motor_home3+1
  2932  0980  084B               	movf	??_motor_home3+1,w
  2933  0981  00CC               	movwf	motor_home3@tracking
  2934                           
  2935                           ;nozzle.c: 616: if(tracking->timer == 0)
  2936  0982  084C               	movf	motor_home3@tracking,w
  2937  0983  3E06               	addlw	6
  2938  0984  0084               	movwf	4
  2939  0985  1383               	bcf	3,7	;select IRP bank0
  2940  0986  0800               	movf	0,w
  2941  0987  1D03               	btfss	3,2
  2942  0988  0008               	return
  2943                           
  2944                           ;nozzle.c: 617: {
  2945                           ;nozzle.c: 618: motor_master &= tracking->total_unmask;
  2946  0989  084C               	movf	motor_home3@tracking,w
  2947  098A  3E04               	addlw	4
  2948  098B  0084               	movwf	4
  2949  098C  0800               	movf	0,w
  2950  098D  00CA               	movwf	??_motor_home3
  2951  098E  084A               	movf	??_motor_home3,w
  2952  098F  05B5               	andwf	_motor_master,f
  2953                           
  2954                           ;nozzle.c: 619: motor_master |= tracking->inc_mask;
  2955  0990  084C               	movf	motor_home3@tracking,w
  2956  0991  3E03               	addlw	3
  2957  0992  0084               	movwf	4
  2958  0993  0800               	movf	0,w
  2959  0994  00CA               	movwf	??_motor_home3
  2960  0995  084A               	movf	??_motor_home3,w
  2961  0996  04B5               	iorwf	_motor_master,f
  2962                           
  2963                           ;nozzle.c: 620: motor_state = motor_home4;
  2964  0997  3033               	movlw	(low (fp__motor_home4-fpbase))& (0+255)
  2965  0998  00CA               	movwf	??_motor_home3
  2966  0999  084A               	movf	??_motor_home3,w
  2967  099A  00E9               	movwf	_motor_state
  2968  099B  0008               	return
  2969  099C                     __end_of_motor_home3:	
  2970                           
  2971                           	psect	text6
  2972  0777                     __ptext6:	
  2973 ;; *************** function _motor_home4 *****************
  2974 ;; Defined at:
  2975 ;;		line 598 in file "nozzle.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  current_enco    1   10[BANK0 ] unsigned char 
  2980 ;;  sensor_value    1   11[BANK0 ] unsigned char 
  2981 ;;  tracking        1    9[BANK0 ] PTR struct .
  2982 ;;		 -> tracking_state(36), 
  2983 ;;  current_boun    1    6[BANK0 ] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         0       6       0       0       0
  2995 ;;      Temps:          0       2       0       0       0
  2996 ;;      Totals:         0       8       0       0       0
  2997 ;;Total ram usage:        8 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    3
  3000 ;; This function calls:
  3001 ;;		___bmul
  3002 ;; This function is called by:
  3003 ;;		_motor_home3
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _motor_home4
  3010  0777                     _motor_home4:	
  3011                           
  3012                           ;nozzle.c: 600: tracking_state_t *tracking = &tracking_state[current_motor];
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _motor_home4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3016  0777  300C               	movlw	12
  3017  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3019  077A  00CA               	movwf	??_motor_home4
  3020  077B  084A               	movf	??_motor_home4,w
  3021  077C  00C6               	movwf	___bmul@multiplicand
  3022  077D  0836               	movf	_current_motor,w
  3023  077E  120A  158A  2060  120A  118A  	fcall	___bmul
  3024  0783  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3025  0784  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0785  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0786  00CB               	movwf	??_motor_home4+1
  3028  0787  084B               	movf	??_motor_home4+1,w
  3029  0788  00CF               	movwf	motor_home4@tracking
  3030                           
  3031                           ;nozzle.c: 601: uint8_t current_boundary = tracking->boundary;
  3032  0789  084F               	movf	motor_home4@tracking,w
  3033  078A  0084               	movwf	4
  3034  078B  1383               	bcf	3,7	;select IRP bank0
  3035  078C  0800               	movf	0,w
  3036  078D  00CA               	movwf	??_motor_home4
  3037  078E  084A               	movf	??_motor_home4,w
  3038  078F  00CC               	movwf	motor_home4@current_boundary
  3039                           
  3040                           ;nozzle.c: 602: uint8_t sensor_value = sensors[current_boundary].analog;
  3041  0790  084C               	movf	motor_home4@current_boundary,w
  3042  0791  00CA               	movwf	??_motor_home4
  3043  0792  3001               	movlw	1
  3044  0793                     u3575:	
  3045  0793  1003               	clrc
  3046  0794  0DCA               	rlf	??_motor_home4,f
  3047  0795  3EFF               	addlw	-1
  3048  0796  1D03               	skipz
  3049  0797  2F93               	goto	u3575
  3050  0798  1003               	clrc
  3051  0799  0D4A               	rlf	??_motor_home4,w
  3052  079A  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3053  079B  0084               	movwf	4
  3054  079C  0800               	movf	0,w
  3055  079D  00CB               	movwf	??_motor_home4+1
  3056  079E  084B               	movf	??_motor_home4+1,w
  3057  079F  00D1               	movwf	motor_home4@sensor_value
  3058                           
  3059                           ;nozzle.c: 603: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  3060  07A0  0851               	movf	motor_home4@sensor_value,w
  3061  07A1  3E80               	addlw	128
  3062  07A2  00CA               	movwf	??_motor_home4
  3063  07A3  30FF               	movlw	255
  3064  07A4  1803               	skipnc
  3065  07A5  3000               	movlw	0
  3066  07A6  00CB               	movwf	??_motor_home4+1
  3067  07A7  1BCB               	btfsc	??_motor_home4+1,7
  3068  07A8  2FB0               	goto	l3252
  3069  07A9  0851               	movf	motor_home4@sensor_value,w
  3070  07AA  3E80               	addlw	128
  3071  07AB  00CD               	movwf	_motor_home4$488
  3072  07AC  30FF               	movlw	255
  3073  07AD  1803               	skipnc
  3074  07AE  3000               	movlw	0
  3075  07AF  2FBF               	goto	L6
  3076  07B0                     l3252:	
  3077  07B0  0851               	movf	motor_home4@sensor_value,w
  3078  07B1  3E80               	addlw	128
  3079  07B2  00CA               	movwf	??_motor_home4
  3080  07B3  30FF               	movlw	255
  3081  07B4  1803               	skipnc
  3082  07B5  3000               	movlw	0
  3083  07B6  00CB               	movwf	??_motor_home4+1
  3084  07B7  09CA               	comf	??_motor_home4,f
  3085  07B8  09CB               	comf	??_motor_home4+1,f
  3086  07B9  0ACA               	incf	??_motor_home4,f
  3087  07BA  1903               	skipnz
  3088  07BB  0ACB               	incf	??_motor_home4+1,f
  3089  07BC  084A               	movf	??_motor_home4,w
  3090  07BD  00CD               	movwf	_motor_home4$488
  3091  07BE  084B               	movf	??_motor_home4+1,w
  3092  07BF                     L6:	
  3093  07BF  00CE               	movwf	_motor_home4$488+1
  3094  07C0  084E               	movf	_motor_home4$488+1,w
  3095  07C1  3A80               	xorlw	128
  3096  07C2  00FF               	movwf	127
  3097  07C3  3080               	movlw	128
  3098  07C4  027F               	subwf	127,w
  3099  07C5  1D03               	skipz
  3100  07C6  2FC9               	goto	u3595
  3101  07C7  3020               	movlw	32
  3102  07C8  024D               	subwf	_motor_home4$488,w
  3103  07C9                     u3595:	
  3104  07C9  1C03               	skipc
  3105  07CA  0008               	return
  3106                           
  3107                           ;nozzle.c: 604: {
  3108                           ;nozzle.c: 605: uint8_t current_encoder = tracking->encoder;
  3109  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3110  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3111  07CD  0A4F               	incf	motor_home4@tracking,w
  3112  07CE  0084               	movwf	4
  3113  07CF  1383               	bcf	3,7	;select IRP bank0
  3114  07D0  0800               	movf	0,w
  3115  07D1  00CA               	movwf	??_motor_home4
  3116  07D2  084A               	movf	??_motor_home4,w
  3117  07D3  00D0               	movwf	motor_home4@current_encoder
  3118                           
  3119                           ;nozzle.c: 606: sensors[current_encoder].position = 0;
  3120  07D4  0850               	movf	motor_home4@current_encoder,w
  3121  07D5  00CA               	movwf	??_motor_home4
  3122  07D6  3001               	movlw	1
  3123  07D7                     u3605:	
  3124  07D7  1003               	clrc
  3125  07D8  0DCA               	rlf	??_motor_home4,f
  3126  07D9  3EFF               	addlw	-1
  3127  07DA  1D03               	skipz
  3128  07DB  2FD7               	goto	u3605
  3129  07DC  1003               	clrc
  3130  07DD  0D4A               	rlf	??_motor_home4,w
  3131  07DE  3E03               	addlw	3
  3132  07DF  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3133  07E0  0084               	movwf	4
  3134  07E1  0180               	clrf	0
  3135                           
  3136                           ;nozzle.c: 607: sensors[current_encoder].step = 1;
  3137  07E2  0850               	movf	motor_home4@current_encoder,w
  3138  07E3  00CA               	movwf	??_motor_home4
  3139  07E4  3001               	movlw	1
  3140  07E5                     u3615:	
  3141  07E5  1003               	clrc
  3142  07E6  0DCA               	rlf	??_motor_home4,f
  3143  07E7  3EFF               	addlw	-1
  3144  07E8  1D03               	skipz
  3145  07E9  2FE5               	goto	u3615
  3146  07EA  1003               	clrc
  3147  07EB  0D4A               	rlf	??_motor_home4,w
  3148  07EC  3E02               	addlw	2
  3149  07ED  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3150  07EE  0084               	movwf	4
  3151  07EF  0180               	clrf	0
  3152  07F0  0A80               	incf	0,f
  3153                           
  3154                           ;nozzle.c: 608: motor_state = motor_home5;
  3155  07F1  3030               	movlw	(low (fp__motor_home5-fpbase))& (0+255)
  3156  07F2  00CA               	movwf	??_motor_home4
  3157  07F3  084A               	movf	??_motor_home4,w
  3158  07F4  00E9               	movwf	_motor_state
  3159  07F5  0008               	return
  3160  07F6                     __end_of_motor_home4:	
  3161                           
  3162                           	psect	text7
  3163  0B04                     __ptext7:	
  3164 ;; *************** function _motor_home5 *****************
  3165 ;; Defined at:
  3166 ;;		line 574 in file "nozzle.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  tracking        1    8[BANK0 ] PTR struct .
  3171 ;;		 -> tracking_state(36), 
  3172 ;;  current_enco    1    7[BANK0 ] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         0       2       0       0       0
  3184 ;;      Temps:          0       3       0       0       0
  3185 ;;      Totals:         0       5       0       0       0
  3186 ;;Total ram usage:        5 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		___bmul
  3191 ;; This function is called by:
  3192 ;;		_motor_home4
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _motor_home5
  3199  0B04                     _motor_home5:	
  3200                           
  3201                           ;nozzle.c: 576: tracking_state_t *tracking = &tracking_state[current_motor];
  3202                           
  3203                           ;incstack = 0
  3204                           ; Regs used in _motor_home5: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3205  0B04  300C               	movlw	12
  3206  0B05  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0B07  00CA               	movwf	??_motor_home5
  3209  0B08  084A               	movf	??_motor_home5,w
  3210  0B09  00C6               	movwf	___bmul@multiplicand
  3211  0B0A  0836               	movf	_current_motor,w
  3212  0B0B  120A  158A  2060  120A  158A  	fcall	___bmul
  3213  0B10  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3214  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0B13  00CB               	movwf	??_motor_home5+1
  3217  0B14  084B               	movf	??_motor_home5+1,w
  3218  0B15  00CE               	movwf	motor_home5@tracking
  3219                           
  3220                           ;nozzle.c: 577: uint8_t current_encoder = tracking->encoder;
  3221  0B16  0A4E               	incf	motor_home5@tracking,w
  3222  0B17  0084               	movwf	4
  3223  0B18  1383               	bcf	3,7	;select IRP bank0
  3224  0B19  0800               	movf	0,w
  3225  0B1A  00CA               	movwf	??_motor_home5
  3226  0B1B  084A               	movf	??_motor_home5,w
  3227  0B1C  00CD               	movwf	motor_home5@current_encoder
  3228                           
  3229                           ;nozzle.c: 578: if(sensors[current_encoder].position >=
  3230                           ;nozzle.c: 579: tracking_state[current_motor].target_position)
  3231  0B1D  084D               	movf	motor_home5@current_encoder,w
  3232  0B1E  00CA               	movwf	??_motor_home5
  3233  0B1F  3001               	movlw	1
  3234  0B20                     u3555:	
  3235  0B20  1003               	clrc
  3236  0B21  0DCA               	rlf	??_motor_home5,f
  3237  0B22  3EFF               	addlw	-1
  3238  0B23  1D03               	skipz
  3239  0B24  2B20               	goto	u3555
  3240  0B25  1003               	clrc
  3241  0B26  0D4A               	rlf	??_motor_home5,w
  3242  0B27  3E03               	addlw	3
  3243  0B28  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3244  0B29  0084               	movwf	4
  3245  0B2A  0800               	movf	0,w
  3246  0B2B  3A80               	xorlw	128
  3247  0B2C  00CB               	movwf	??_motor_home5+1
  3248  0B2D  300C               	movlw	12
  3249  0B2E  00CC               	movwf	??_motor_home5+2
  3250  0B2F  084C               	movf	??_motor_home5+2,w
  3251  0B30  00C6               	movwf	___bmul@multiplicand
  3252  0B31  0836               	movf	_current_motor,w
  3253  0B32  120A  158A  2060  120A  158A  	fcall	___bmul
  3254  0B37  3E07               	addlw	7
  3255  0B38  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3256  0B39  0084               	movwf	4
  3257  0B3A  1383               	bcf	3,7	;select IRP bank1
  3258  0B3B  0800               	movf	0,w
  3259  0B3C  3A80               	xorlw	128
  3260  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0B3F  02CB               	subwf	??_motor_home5+1,f
  3263  0B40  1C03               	skipc
  3264  0B41  0008               	return
  3265                           
  3266                           ;nozzle.c: 580: {
  3267                           ;nozzle.c: 588: {
  3268                           ;nozzle.c: 589: motor_master |= tracking->total_mask;
  3269  0B42  084E               	movf	motor_home5@tracking,w
  3270  0B43  3E05               	addlw	5
  3271  0B44  0084               	movwf	4
  3272  0B45  0800               	movf	0,w
  3273  0B46  00CA               	movwf	??_motor_home5
  3274  0B47  084A               	movf	??_motor_home5,w
  3275  0B48  04B5               	iorwf	_motor_master,f
  3276                           
  3277                           ;nozzle.c: 590: }
  3278                           ;nozzle.c: 592: tracking->timer = (100 / 2);
  3279  0B49  3032               	movlw	50
  3280  0B4A  00CA               	movwf	??_motor_home5
  3281  0B4B  084E               	movf	motor_home5@tracking,w
  3282  0B4C  3E06               	addlw	6
  3283  0B4D  0084               	movwf	4
  3284  0B4E  084A               	movf	??_motor_home5,w
  3285  0B4F  0080               	movwf	0
  3286                           
  3287                           ;nozzle.c: 593: motor_state = motor_home6;
  3288  0B50  302D               	movlw	(low (fp__motor_home6-fpbase))& (0+255)
  3289  0B51  00CA               	movwf	??_motor_home5
  3290  0B52  084A               	movf	??_motor_home5,w
  3291  0B53  00E9               	movwf	_motor_state
  3292  0B54  0008               	return
  3293  0B55                     __end_of_motor_home5:	
  3294                           
  3295                           	psect	text8
  3296  0A43                     __ptext8:	
  3297 ;; *************** function _motor_home6 *****************
  3298 ;; Defined at:
  3299 ;;		line 541 in file "nozzle.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  current_enco    1    6[BANK0 ] unsigned char 
  3304 ;;  tracking        1    7[BANK0 ] PTR struct .
  3305 ;;		 -> tracking_state(36), 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       2       0       0       0
  3317 ;;      Temps:          0       2       0       0       0
  3318 ;;      Totals:         0       4       0       0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		___bmul
  3324 ;; This function is called by:
  3325 ;;		_motor_home5
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _motor_home6
  3332  0A43                     _motor_home6:	
  3333                           
  3334                           ;nozzle.c: 543: tracking_state_t *tracking = &tracking_state[current_motor];
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _motor_home6: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3338  0A43  300C               	movlw	12
  3339  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0A46  00CA               	movwf	??_motor_home6
  3342  0A47  084A               	movf	??_motor_home6,w
  3343  0A48  00C6               	movwf	___bmul@multiplicand
  3344  0A49  0836               	movf	_current_motor,w
  3345  0A4A  120A  158A  2060  120A  158A  	fcall	___bmul
  3346  0A4F  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3347  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0A52  00CB               	movwf	??_motor_home6+1
  3350  0A53  084B               	movf	??_motor_home6+1,w
  3351  0A54  00CD               	movwf	motor_home6@tracking
  3352                           
  3353                           ;nozzle.c: 544: if(tracking->timer == 0)
  3354  0A55  084D               	movf	motor_home6@tracking,w
  3355  0A56  3E06               	addlw	6
  3356  0A57  0084               	movwf	4
  3357  0A58  1383               	bcf	3,7	;select IRP bank0
  3358  0A59  0800               	movf	0,w
  3359  0A5A  1D03               	btfss	3,2
  3360  0A5B  0008               	return
  3361                           
  3362                           ;nozzle.c: 545: {
  3363                           ;nozzle.c: 546: uint8_t current_encoder = tracking->encoder;
  3364  0A5C  0A4D               	incf	motor_home6@tracking,w
  3365  0A5D  0084               	movwf	4
  3366  0A5E  0800               	movf	0,w
  3367  0A5F  00CA               	movwf	??_motor_home6
  3368  0A60  084A               	movf	??_motor_home6,w
  3369  0A61  00CC               	movwf	motor_home6@current_encoder
  3370                           
  3371                           ;nozzle.c: 554: switch(current_motor)
  3372  0A62  2A76               	goto	l3230
  3373  0A63                     l266:	
  3374                           ;nozzle.c: 555: {
  3375                           ;nozzle.c: 556: case 2:
  3376                           
  3377                           
  3378                           ;nozzle.c: 557: current_motor = 1;
  3379  0A63  01B6               	clrf	_current_motor
  3380  0A64  0AB6               	incf	_current_motor,f
  3381                           
  3382                           ;nozzle.c: 558: motor_state = motor_home1;
  3383  0A65  3021               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  3384  0A66  00CA               	movwf	??_motor_home6
  3385  0A67  084A               	movf	??_motor_home6,w
  3386  0A68  00E9               	movwf	_motor_state
  3387                           
  3388                           ;nozzle.c: 559: break;
  3389  0A69  0008               	return
  3390  0A6A                     l3220:	
  3391                           ;nozzle.c: 560: case 1:
  3392                           
  3393                           
  3394                           ;nozzle.c: 561: current_motor = 0;
  3395  0A6A  01B6               	clrf	_current_motor
  3396                           
  3397                           ;nozzle.c: 562: motor_state = motor_home1;
  3398  0A6B  3021               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  3399  0A6C  00CA               	movwf	??_motor_home6
  3400  0A6D  084A               	movf	??_motor_home6,w
  3401  0A6E  00E9               	movwf	_motor_state
  3402                           
  3403                           ;nozzle.c: 563: break;
  3404  0A6F  0008               	return
  3405  0A70                     l3224:	
  3406                           ;nozzle.c: 565: default:
  3407                           
  3408                           ;nozzle.c: 564: case 0:
  3409                           
  3410                           
  3411                           ;nozzle.c: 566: current_motor = 0;
  3412  0A70  01B6               	clrf	_current_motor
  3413                           
  3414                           ;nozzle.c: 567: motor_state = motor_tracking;
  3415  0A71  3027               	movlw	(low (fp__motor_tracking-fpbase))& (0+255)
  3416  0A72  00CA               	movwf	??_motor_home6
  3417  0A73  084A               	movf	??_motor_home6,w
  3418  0A74  00E9               	movwf	_motor_state
  3419                           
  3420                           ;nozzle.c: 569: }
  3421                           
  3422                           ;nozzle.c: 568: break;
  3423  0A75  0008               	return
  3424  0A76                     l3230:	
  3425  0A76  0836               	movf	_current_motor,w
  3426                           
  3427                           ; Switch size 1, requested type "space"
  3428                           ; Number of cases is 3, Range of values is 0 to 2
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte           10     6 (average)
  3432                           ; direct_byte           17     8 (fixed)
  3433                           ; jumptable            260     6 (fixed)
  3434                           ;	Chosen strategy is simple_byte
  3435  0A77  3A00               	xorlw	0	; case 0
  3436  0A78  1903               	skipnz
  3437  0A79  2A70               	goto	l3224
  3438  0A7A  3A01               	xorlw	1	; case 1
  3439  0A7B  1903               	skipnz
  3440  0A7C  2A6A               	goto	l3220
  3441  0A7D  3A03               	xorlw	3	; case 2
  3442  0A7E  1903               	skipnz
  3443  0A7F  2A63               	goto	l266
  3444  0A80  2A70               	goto	l3224
  3445  0A81  0008               	return
  3446  0A82                     __end_of_motor_home6:	
  3447                           
  3448                           	psect	text9
  3449  0C74                     __ptext9:	
  3450 ;; *************** function _motor_home1 *****************
  3451 ;; Defined at:
  3452 ;;		line 640 in file "nozzle.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  sensor_value    1   10[BANK0 ] unsigned char 
  3457 ;;  tracking        1    9[BANK0 ] PTR struct .
  3458 ;;		 -> tracking_state(36), 
  3459 ;;  current_boun    1    6[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       0       0       0       0
  3470 ;;      Locals:         0       5       0       0       0
  3471 ;;      Temps:          0       2       0       0       0
  3472 ;;      Totals:         0       7       0       0       0
  3473 ;;Total ram usage:        7 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    3
  3476 ;; This function calls:
  3477 ;;		___bmul
  3478 ;; This function is called by:
  3479 ;;		_motor_home6
  3480 ;;		_arm_motors
  3481 ;;		_main
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           
  3486                           ;psect for function _motor_home1
  3487  0C74                     _motor_home1:	
  3488                           
  3489                           ;nozzle.c: 642: tracking_state_t *tracking = &tracking_state[current_motor];
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in _motor_home1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3493  0C74  300C               	movlw	12
  3494  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0C77  00CA               	movwf	??_motor_home1
  3497  0C78  084A               	movf	??_motor_home1,w
  3498  0C79  00C6               	movwf	___bmul@multiplicand
  3499  0C7A  0836               	movf	_current_motor,w
  3500  0C7B  120A  158A  2060  120A  158A  	fcall	___bmul
  3501  0C80  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3502  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0C83  00CB               	movwf	??_motor_home1+1
  3505  0C84  084B               	movf	??_motor_home1+1,w
  3506  0C85  00CF               	movwf	motor_home1@tracking
  3507                           
  3508                           ;nozzle.c: 643: uint8_t current_boundary = tracking->boundary;
  3509  0C86  084F               	movf	motor_home1@tracking,w
  3510  0C87  0084               	movwf	4
  3511  0C88  1383               	bcf	3,7	;select IRP bank0
  3512  0C89  0800               	movf	0,w
  3513  0C8A  00CA               	movwf	??_motor_home1
  3514  0C8B  084A               	movf	??_motor_home1,w
  3515  0C8C  00CC               	movwf	motor_home1@current_boundary
  3516                           
  3517                           ;nozzle.c: 644: uint8_t sensor_value = sensors[current_boundary].analog;
  3518  0C8D  084C               	movf	motor_home1@current_boundary,w
  3519  0C8E  00CA               	movwf	??_motor_home1
  3520  0C8F  3001               	movlw	1
  3521  0C90                     u3665:	
  3522  0C90  1003               	clrc
  3523  0C91  0DCA               	rlf	??_motor_home1,f
  3524  0C92  3EFF               	addlw	-1
  3525  0C93  1D03               	skipz
  3526  0C94  2C90               	goto	u3665
  3527  0C95  1003               	clrc
  3528  0C96  0D4A               	rlf	??_motor_home1,w
  3529  0C97  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3530  0C98  0084               	movwf	4
  3531  0C99  0800               	movf	0,w
  3532  0C9A  00CB               	movwf	??_motor_home1+1
  3533  0C9B  084B               	movf	??_motor_home1+1,w
  3534  0C9C  00D0               	movwf	motor_home1@sensor_value
  3535                           
  3536                           ;nozzle.c: 646: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  3537  0C9D  0850               	movf	motor_home1@sensor_value,w
  3538  0C9E  3E80               	addlw	128
  3539  0C9F  00CA               	movwf	??_motor_home1
  3540  0CA0  30FF               	movlw	255
  3541  0CA1  1803               	skipnc
  3542  0CA2  3000               	movlw	0
  3543  0CA3  00CB               	movwf	??_motor_home1+1
  3544  0CA4  1BCB               	btfsc	??_motor_home1+1,7
  3545  0CA5  2CAD               	goto	l3302
  3546  0CA6  0850               	movf	motor_home1@sensor_value,w
  3547  0CA7  3E80               	addlw	128
  3548  0CA8  00CD               	movwf	_motor_home1$537
  3549  0CA9  30FF               	movlw	255
  3550  0CAA  1803               	skipnc
  3551  0CAB  3000               	movlw	0
  3552  0CAC  2CBC               	goto	L7
  3553  0CAD                     l3302:	
  3554  0CAD  0850               	movf	motor_home1@sensor_value,w
  3555  0CAE  3E80               	addlw	128
  3556  0CAF  00CA               	movwf	??_motor_home1
  3557  0CB0  30FF               	movlw	255
  3558  0CB1  1803               	skipnc
  3559  0CB2  3000               	movlw	0
  3560  0CB3  00CB               	movwf	??_motor_home1+1
  3561  0CB4  09CA               	comf	??_motor_home1,f
  3562  0CB5  09CB               	comf	??_motor_home1+1,f
  3563  0CB6  0ACA               	incf	??_motor_home1,f
  3564  0CB7  1903               	skipnz
  3565  0CB8  0ACB               	incf	??_motor_home1+1,f
  3566  0CB9  084A               	movf	??_motor_home1,w
  3567  0CBA  00CD               	movwf	_motor_home1$537
  3568  0CBB  084B               	movf	??_motor_home1+1,w
  3569  0CBC                     L7:	
  3570  0CBC  00CE               	movwf	_motor_home1$537+1
  3571  0CBD  084E               	movf	_motor_home1$537+1,w
  3572  0CBE  3A80               	xorlw	128
  3573  0CBF  00FF               	movwf	127
  3574  0CC0  3080               	movlw	128
  3575  0CC1  027F               	subwf	127,w
  3576  0CC2  1D03               	skipz
  3577  0CC3  2CC6               	goto	u3685
  3578  0CC4  3020               	movlw	32
  3579  0CC5  024D               	subwf	_motor_home1$537,w
  3580  0CC6                     u3685:	
  3581  0CC6  1C03               	skipc
  3582  0CC7  2CCF               	goto	l3308
  3583                           
  3584                           ;nozzle.c: 647: {
  3585                           ;nozzle.c: 648: motor_state = motor_idle;
  3586  0CC8  3024               	movlw	(low (fp__motor_idle-fpbase))& (0+255)
  3587  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0CCB  00CA               	movwf	??_motor_home1
  3590  0CCC  084A               	movf	??_motor_home1,w
  3591  0CCD  00E9               	movwf	_motor_state
  3592                           
  3593                           ;nozzle.c: 649: }
  3594  0CCE  0008               	return
  3595  0CCF                     l3308:	
  3596                           
  3597                           ;nozzle.c: 650: else
  3598                           ;nozzle.c: 652: {
  3599                           ;nozzle.c: 653: motor_master &= tracking->total_unmask;
  3600  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0CD1  084F               	movf	motor_home1@tracking,w
  3603  0CD2  3E04               	addlw	4
  3604  0CD3  0084               	movwf	4
  3605  0CD4  1383               	bcf	3,7	;select IRP bank0
  3606  0CD5  0800               	movf	0,w
  3607  0CD6  00CA               	movwf	??_motor_home1
  3608  0CD7  084A               	movf	??_motor_home1,w
  3609  0CD8  05B5               	andwf	_motor_master,f
  3610                           
  3611                           ;nozzle.c: 654: motor_master |= tracking->dec_mask;
  3612  0CD9  084F               	movf	motor_home1@tracking,w
  3613  0CDA  3E02               	addlw	2
  3614  0CDB  0084               	movwf	4
  3615  0CDC  0800               	movf	0,w
  3616  0CDD  00CA               	movwf	??_motor_home1
  3617  0CDE  084A               	movf	??_motor_home1,w
  3618  0CDF  04B5               	iorwf	_motor_master,f
  3619                           
  3620                           ;nozzle.c: 655: motor_state = motor_home2;
  3621  0CE0  302A               	movlw	(low (fp__motor_home2-fpbase))& (0+255)
  3622  0CE1  00CA               	movwf	??_motor_home1
  3623  0CE2  084A               	movf	??_motor_home1,w
  3624  0CE3  00E9               	movwf	_motor_state
  3625  0CE4  0008               	return
  3626  0CE5                     __end_of_motor_home1:	
  3627                           
  3628                           	psect	text10
  3629  0810                     __ptext10:	
  3630 ;; *************** function _motor_idle *****************
  3631 ;; Defined at:
  3632 ;;		line 659 in file "nozzle.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		None
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_motor_home1
  3657 ;;		_disarm_motors
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           
  3663                           ;psect for function _motor_idle
  3664  0810                     _motor_idle:	
  3665                           
  3666                           ;incstack = 0
  3667                           ; Regs used in _motor_idle: []
  3668  0810  0008               	return
  3669  0811                     __end_of_motor_idle:	
  3670                           
  3671                           	psect	text11
  3672  0D57                     __ptext11:	
  3673 ;; *************** function _motor_tracking *****************
  3674 ;; Defined at:
  3675 ;;		line 460 in file "nozzle.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  tracking        1    7[BANK0 ] PTR struct .
  3680 ;;		 -> tracking_state(36), 
  3681 ;;  encoder         1    6[BANK0 ] PTR struct .
  3682 ;;		 -> sensors(24), 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       2       0       0       0
  3694 ;;      Temps:          0       2       0       0       0
  3695 ;;      Totals:         0       4       0       0       0
  3696 ;;Total ram usage:        4 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    3
  3699 ;; This function calls:
  3700 ;;		___bmul
  3701 ;; This function is called by:
  3702 ;;		_motor_home6
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _motor_tracking
  3709  0D57                     _motor_tracking:	
  3710                           
  3711                           ;nozzle.c: 463: tracking_state_t *tracking = &tracking_state[current_motor];
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _motor_tracking: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3715  0D57  300C               	movlw	12
  3716  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0D5A  00CA               	movwf	??_motor_tracking
  3719  0D5B  084A               	movf	??_motor_tracking,w
  3720  0D5C  00C6               	movwf	___bmul@multiplicand
  3721  0D5D  0836               	movf	_current_motor,w
  3722  0D5E  120A  158A  2060  120A  158A  	fcall	___bmul
  3723  0D63  3EAA               	addlw	(low (_tracking_state| 0))& (0+255)
  3724  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0D66  00CB               	movwf	??_motor_tracking+1
  3727  0D67  084B               	movf	??_motor_tracking+1,w
  3728  0D68  00CD               	movwf	motor_tracking@tracking
  3729                           
  3730                           ;nozzle.c: 464: sensor_state_t *encoder = &sensors[tracking->encoder];
  3731  0D69  0A4D               	incf	motor_tracking@tracking,w
  3732  0D6A  0084               	movwf	4
  3733  0D6B  1383               	bcf	3,7	;select IRP bank0
  3734  0D6C  0800               	movf	0,w
  3735  0D6D  00CA               	movwf	??_motor_tracking
  3736  0D6E  3001               	movlw	1
  3737  0D6F                     u2185:	
  3738  0D6F  1003               	clrc
  3739  0D70  0DCA               	rlf	??_motor_tracking,f
  3740  0D71  3EFF               	addlw	-1
  3741  0D72  1D03               	skipz
  3742  0D73  2D6F               	goto	u2185
  3743  0D74  1003               	clrc
  3744  0D75  0D4A               	rlf	??_motor_tracking,w
  3745  0D76  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  3746  0D77  00CB               	movwf	??_motor_tracking+1
  3747  0D78  084B               	movf	??_motor_tracking+1,w
  3748  0D79  00CC               	movwf	motor_tracking@encoder
  3749                           
  3750                           ;nozzle.c: 466: current_motor++;
  3751  0D7A  3001               	movlw	1
  3752  0D7B  00CA               	movwf	??_motor_tracking
  3753  0D7C  084A               	movf	??_motor_tracking,w
  3754  0D7D  07B6               	addwf	_current_motor,f
  3755                           
  3756                           ;nozzle.c: 467: if(current_motor >= 3)
  3757  0D7E  3003               	movlw	3
  3758  0D7F  0236               	subwf	_current_motor,w
  3759  0D80  1803               	btfsc	3,0
  3760                           
  3761                           ;nozzle.c: 468: {
  3762                           ;nozzle.c: 469: current_motor = 0;
  3763  0D81  01B6               	clrf	_current_motor
  3764                           
  3765                           ;nozzle.c: 470: }
  3766                           ;nozzle.c: 473: if((motor_master & tracking->total_mask) == tracking->inc_mask)
  3767  0D82  084D               	movf	motor_tracking@tracking,w
  3768  0D83  3E03               	addlw	3
  3769  0D84  0084               	movwf	4
  3770  0D85  0800               	movf	0,w
  3771  0D86  00CA               	movwf	??_motor_tracking
  3772  0D87  084D               	movf	motor_tracking@tracking,w
  3773  0D88  3E05               	addlw	5
  3774  0D89  0084               	movwf	4
  3775  0D8A  0800               	movf	0,w
  3776  0D8B  0535               	andwf	_motor_master,w
  3777  0D8C  064A               	xorwf	??_motor_tracking,w
  3778  0D8D  1D03               	skipz
  3779  0D8E  2DAC               	goto	l2346
  3780                           
  3781                           ;nozzle.c: 474: {
  3782                           ;nozzle.c: 475: if(encoder->position >= tracking->target_position)
  3783  0D8F  084C               	movf	motor_tracking@encoder,w
  3784  0D90  3E03               	addlw	3
  3785  0D91  0084               	movwf	4
  3786  0D92  0800               	movf	0,w
  3787  0D93  3A80               	xorlw	128
  3788  0D94  00CA               	movwf	??_motor_tracking
  3789  0D95  084D               	movf	motor_tracking@tracking,w
  3790  0D96  3E07               	addlw	7
  3791  0D97  0084               	movwf	4
  3792  0D98  0800               	movf	0,w
  3793  0D99  3A80               	xorlw	128
  3794  0D9A  02CA               	subwf	??_motor_tracking,f
  3795  0D9B  1C03               	skipc
  3796  0D9C  0008               	return
  3797                           
  3798                           ;nozzle.c: 476: {
  3799                           ;nozzle.c: 484: {
  3800                           ;nozzle.c: 485: motor_master |= tracking->total_mask;
  3801  0D9D  084D               	movf	motor_tracking@tracking,w
  3802  0D9E  3E05               	addlw	5
  3803  0D9F  0084               	movwf	4
  3804  0DA0  0800               	movf	0,w
  3805  0DA1  00CA               	movwf	??_motor_tracking
  3806  0DA2  084A               	movf	??_motor_tracking,w
  3807  0DA3  04B5               	iorwf	_motor_master,f
  3808                           
  3809                           ;nozzle.c: 486: }
  3810                           ;nozzle.c: 488: tracking->timer = (100 / 2);
  3811  0DA4  3032               	movlw	50
  3812  0DA5  00CA               	movwf	??_motor_tracking
  3813  0DA6  084D               	movf	motor_tracking@tracking,w
  3814  0DA7  3E06               	addlw	6
  3815  0DA8  0084               	movwf	4
  3816  0DA9  084A               	movf	??_motor_tracking,w
  3817  0DAA  0080               	movwf	0
  3818                           
  3819                           ;nozzle.c: 489: }
  3820                           ;nozzle.c: 490: }
  3821  0DAB  0008               	return
  3822  0DAC                     l2346:	
  3823                           
  3824                           ;nozzle.c: 491: else
  3825                           ;nozzle.c: 492: if((motor_master & tracking->total_mask) == tracking->dec_mask)
  3826  0DAC  084D               	movf	motor_tracking@tracking,w
  3827  0DAD  3E02               	addlw	2
  3828  0DAE  0084               	movwf	4
  3829  0DAF  0800               	movf	0,w
  3830  0DB0  00CA               	movwf	??_motor_tracking
  3831  0DB1  084D               	movf	motor_tracking@tracking,w
  3832  0DB2  3E05               	addlw	5
  3833  0DB3  0084               	movwf	4
  3834  0DB4  0800               	movf	0,w
  3835  0DB5  0535               	andwf	_motor_master,w
  3836  0DB6  064A               	xorwf	??_motor_tracking,w
  3837  0DB7  1D03               	skipz
  3838  0DB8  2DD6               	goto	l2352
  3839                           
  3840                           ;nozzle.c: 493: {
  3841                           ;nozzle.c: 494: if(encoder->position <= tracking->target_position)
  3842  0DB9  084D               	movf	motor_tracking@tracking,w
  3843  0DBA  3E07               	addlw	7
  3844  0DBB  0084               	movwf	4
  3845  0DBC  0800               	movf	0,w
  3846  0DBD  3A80               	xorlw	128
  3847  0DBE  00CA               	movwf	??_motor_tracking
  3848  0DBF  084C               	movf	motor_tracking@encoder,w
  3849  0DC0  3E03               	addlw	3
  3850  0DC1  0084               	movwf	4
  3851  0DC2  0800               	movf	0,w
  3852  0DC3  3A80               	xorlw	128
  3853  0DC4  02CA               	subwf	??_motor_tracking,f
  3854  0DC5  1C03               	skipc
  3855  0DC6  0008               	return
  3856                           
  3857                           ;nozzle.c: 495: {
  3858                           ;nozzle.c: 503: {
  3859                           ;nozzle.c: 504: motor_master |= tracking->total_mask;
  3860  0DC7  084D               	movf	motor_tracking@tracking,w
  3861  0DC8  3E05               	addlw	5
  3862  0DC9  0084               	movwf	4
  3863  0DCA  0800               	movf	0,w
  3864  0DCB  00CA               	movwf	??_motor_tracking
  3865  0DCC  084A               	movf	??_motor_tracking,w
  3866  0DCD  04B5               	iorwf	_motor_master,f
  3867                           
  3868                           ;nozzle.c: 505: }
  3869                           ;nozzle.c: 507: tracking->timer = (100 / 2);
  3870  0DCE  3032               	movlw	50
  3871  0DCF  00CA               	movwf	??_motor_tracking
  3872  0DD0  084D               	movf	motor_tracking@tracking,w
  3873  0DD1  3E06               	addlw	6
  3874  0DD2  0084               	movwf	4
  3875  0DD3  084A               	movf	??_motor_tracking,w
  3876  0DD4  0080               	movwf	0
  3877                           
  3878                           ;nozzle.c: 508: }
  3879                           ;nozzle.c: 509: }
  3880  0DD5  0008               	return
  3881  0DD6                     l2352:	
  3882                           
  3883                           ;nozzle.c: 510: else
  3884                           ;nozzle.c: 512: if( tracking->changed > 0)
  3885  0DD6  084D               	movf	motor_tracking@tracking,w
  3886  0DD7  3E0A               	addlw	10
  3887  0DD8  0084               	movwf	4
  3888  0DD9  0800               	movf	0,w
  3889  0DDA  1903               	btfsc	3,2
  3890  0DDB  0008               	return
  3891                           
  3892                           ;nozzle.c: 513: {
  3893                           ;nozzle.c: 517: if(encoder->position > tracking->target_position)
  3894  0DDC  084D               	movf	motor_tracking@tracking,w
  3895  0DDD  3E07               	addlw	7
  3896  0DDE  0084               	movwf	4
  3897  0DDF  0800               	movf	0,w
  3898  0DE0  3A80               	xorlw	128
  3899  0DE1  00CA               	movwf	??_motor_tracking
  3900  0DE2  084C               	movf	motor_tracking@encoder,w
  3901  0DE3  3E03               	addlw	3
  3902  0DE4  0084               	movwf	4
  3903  0DE5  0800               	movf	0,w
  3904  0DE6  3A80               	xorlw	128
  3905  0DE7  02CA               	subwf	??_motor_tracking,f
  3906  0DE8  1803               	skipnc
  3907  0DE9  2E03               	goto	l2358
  3908                           
  3909                           ;nozzle.c: 518: {
  3910                           ;nozzle.c: 519: encoder->step = -1;
  3911  0DEA  084C               	movf	motor_tracking@encoder,w
  3912  0DEB  3E02               	addlw	2
  3913  0DEC  0084               	movwf	4
  3914  0DED  0180               	clrf	0
  3915  0DEE  0380               	decf	0,f
  3916                           
  3917                           ;nozzle.c: 520: motor_master &= tracking->total_unmask;
  3918  0DEF  084D               	movf	motor_tracking@tracking,w
  3919  0DF0  3E04               	addlw	4
  3920  0DF1  0084               	movwf	4
  3921  0DF2  0800               	movf	0,w
  3922  0DF3  00CA               	movwf	??_motor_tracking
  3923  0DF4  084A               	movf	??_motor_tracking,w
  3924  0DF5  05B5               	andwf	_motor_master,f
  3925                           
  3926                           ;nozzle.c: 521: motor_master |= tracking->dec_mask;
  3927  0DF6  084D               	movf	motor_tracking@tracking,w
  3928  0DF7  3E02               	addlw	2
  3929  0DF8  0084               	movwf	4
  3930  0DF9  0800               	movf	0,w
  3931  0DFA  00CA               	movwf	??_motor_tracking
  3932  0DFB  084A               	movf	??_motor_tracking,w
  3933  0DFC  04B5               	iorwf	_motor_master,f
  3934                           
  3935                           ;nozzle.c: 522: tracking->changed--;
  3936  0DFD  084D               	movf	motor_tracking@tracking,w
  3937  0DFE  3E0A               	addlw	10
  3938  0DFF  0084               	movwf	4
  3939  0E00  3001               	movlw	1
  3940  0E01  0280               	subwf	0,f
  3941                           
  3942                           ;nozzle.c: 523: }
  3943  0E02  0008               	return
  3944  0E03                     l2358:	
  3945                           
  3946                           ;nozzle.c: 524: else
  3947                           ;nozzle.c: 525: if(encoder->position < tracking->target_position)
  3948  0E03  084C               	movf	motor_tracking@encoder,w
  3949  0E04  3E03               	addlw	3
  3950  0E05  0084               	movwf	4
  3951  0E06  0800               	movf	0,w
  3952  0E07  3A80               	xorlw	128
  3953  0E08  00CA               	movwf	??_motor_tracking
  3954  0E09  084D               	movf	motor_tracking@tracking,w
  3955  0E0A  3E07               	addlw	7
  3956  0E0B  0084               	movwf	4
  3957  0E0C  0800               	movf	0,w
  3958  0E0D  3A80               	xorlw	128
  3959  0E0E  02CA               	subwf	??_motor_tracking,f
  3960  0E0F  1803               	skipnc
  3961  0E10  2E2A               	goto	l2362
  3962                           
  3963                           ;nozzle.c: 526: {
  3964                           ;nozzle.c: 527: encoder->step = 1;
  3965  0E11  084C               	movf	motor_tracking@encoder,w
  3966  0E12  3E02               	addlw	2
  3967  0E13  0084               	movwf	4
  3968  0E14  0180               	clrf	0
  3969  0E15  0A80               	incf	0,f
  3970                           
  3971                           ;nozzle.c: 528: motor_master &= tracking->total_unmask;
  3972  0E16  084D               	movf	motor_tracking@tracking,w
  3973  0E17  3E04               	addlw	4
  3974  0E18  0084               	movwf	4
  3975  0E19  0800               	movf	0,w
  3976  0E1A  00CA               	movwf	??_motor_tracking
  3977  0E1B  084A               	movf	??_motor_tracking,w
  3978  0E1C  05B5               	andwf	_motor_master,f
  3979                           
  3980                           ;nozzle.c: 529: motor_master |= tracking->inc_mask;
  3981  0E1D  084D               	movf	motor_tracking@tracking,w
  3982  0E1E  3E03               	addlw	3
  3983  0E1F  0084               	movwf	4
  3984  0E20  0800               	movf	0,w
  3985  0E21  00CA               	movwf	??_motor_tracking
  3986  0E22  084A               	movf	??_motor_tracking,w
  3987  0E23  04B5               	iorwf	_motor_master,f
  3988                           
  3989                           ;nozzle.c: 530: tracking->changed--;
  3990  0E24  084D               	movf	motor_tracking@tracking,w
  3991  0E25  3E0A               	addlw	10
  3992  0E26  0084               	movwf	4
  3993  0E27  3001               	movlw	1
  3994  0E28  0280               	subwf	0,f
  3995                           
  3996                           ;nozzle.c: 531: }
  3997  0E29  0008               	return
  3998  0E2A                     l2362:	
  3999                           
  4000                           ;nozzle.c: 532: else
  4001                           ;nozzle.c: 533: {
  4002                           ;nozzle.c: 535: tracking->changed--;
  4003  0E2A  084D               	movf	motor_tracking@tracking,w
  4004  0E2B  3E0A               	addlw	10
  4005  0E2C  0084               	movwf	4
  4006  0E2D  3001               	movlw	1
  4007  0E2E  0280               	subwf	0,f
  4008  0E2F  0008               	return
  4009  0E30                     __end_of_motor_tracking:	
  4010                           
  4011                           	psect	text12
  4012  08BD                     __ptext12:	
  4013 ;; *************** function _memset *****************
  4014 ;; Defined at:
  4015 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  p1              1    wreg     PTR void 
  4018 ;;		 -> sensors(24), 
  4019 ;;  c               2    0[BANK0 ] int 
  4020 ;;  n               2    2[BANK0 ] unsigned int 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  p1              1    5[BANK0 ] PTR void 
  4023 ;;		 -> sensors(24), 
  4024 ;;  p               1    6[BANK0 ] PTR unsigned char 
  4025 ;;		 -> sensors(24), 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      PTR void 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         0       4       0       0       0
  4036 ;;      Locals:         0       2       0       0       0
  4037 ;;      Temps:          0       1       0       0       0
  4038 ;;      Totals:         0       7       0       0       0
  4039 ;;Total ram usage:        7 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    2
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _memset
  4051  08BD                     _memset:	
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  4055                           ;memset@p1 stored from wreg
  4056  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  4057  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  4058  08BF  00CB               	movwf	memset@p1
  4059  08C0  084B               	movf	memset@p1,w
  4060  08C1  00CA               	movwf	??_memset
  4061  08C2  084A               	movf	??_memset,w
  4062  08C3  00CC               	movwf	memset@p
  4063  08C4                     l2698:	
  4064  08C4  3001               	movlw	1
  4065  08C5  02C8               	subwf	memset@n,f
  4066  08C6  3000               	movlw	0
  4067  08C7  1C03               	skipc
  4068  08C8  03C9               	decf	memset@n+1,f
  4069  08C9  02C9               	subwf	memset@n+1,f
  4070  08CA  0A48               	incf	memset@n,w
  4071  08CB  1903               	btfsc	3,2
  4072  08CC  0A49               	incf	memset@n+1,w
  4073  08CD  1903               	btfsc	3,2
  4074  08CE  0008               	return
  4075  08CF  0846               	movf	memset@c,w
  4076  08D0  00CA               	movwf	??_memset
  4077  08D1  084C               	movf	memset@p,w
  4078  08D2  0084               	movwf	4
  4079  08D3  084A               	movf	??_memset,w
  4080  08D4  1383               	bcf	3,7	;select IRP bank0
  4081  08D5  0080               	movwf	0
  4082  08D6  3001               	movlw	1
  4083  08D7  00CA               	movwf	??_memset
  4084  08D8  084A               	movf	??_memset,w
  4085  08D9  07CC               	addwf	memset@p,f
  4086  08DA  28C4               	goto	l2698
  4087  08DB                     __end_of_memset:	
  4088                           ;	Return value of _memset is never used
  4089                           
  4090                           
  4091                           	psect	text13
  4092  0886                     __ptext13:	
  4093 ;; *************** function _handle_uart *****************
  4094 ;; Defined at:
  4095 ;;		line 414 in file "nozzle.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0
  4111 ;;      Temps:          0       1       0       0       0
  4112 ;;      Totals:         0       1       0       0       0
  4113 ;;Total ram usage:        1 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    2
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;;		_flush_uart
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _handle_uart
  4126  0886                     _handle_uart:	
  4127                           
  4128                           ;nozzle.c: 416: if(uart_size > 0 && PIR1bits.TXIF)
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _handle_uart: [wreg-fsr0h+status,2+status,0]
  4132  0886  087B               	movf	_uart_size,w
  4133  0887  1903               	btfsc	3,2
  4134  0888  0008               	return
  4135  0889  1283               	bcf	3,5	;RP0=0, select bank0
  4136  088A  1303               	bcf	3,6	;RP1=0, select bank0
  4137  088B  1E0C               	btfss	12,4	;volatile
  4138  088C  0008               	return
  4139                           
  4140                           ;nozzle.c: 417: {
  4141                           ;nozzle.c: 418: PIR1bits.TXIF = 0;
  4142  088D  120C               	bcf	12,4	;volatile
  4143                           
  4144                           ;nozzle.c: 419: TXREG = uart_buffer[uart_position2++];
  4145  088E  0879               	movf	_uart_position2,w
  4146  088F  3E90               	addlw	(low (_uart_buffer| (0+256)))& (0+255)
  4147  0890  0084               	movwf	4
  4148  0891  1783               	bsf	3,7	;select IRP bank3
  4149  0892  0800               	movf	0,w
  4150  0893  0099               	movwf	25	;volatile
  4151  0894  3001               	movlw	1
  4152  0895  00C6               	movwf	??_handle_uart
  4153  0896  0846               	movf	??_handle_uart,w
  4154  0897  07F9               	addwf	_uart_position2,f
  4155                           
  4156                           ;nozzle.c: 420: uart_size--;
  4157  0898  3001               	movlw	1
  4158  0899  02FB               	subwf	_uart_size,f
  4159                           
  4160                           ;nozzle.c: 421: if(uart_position2 >= 64)
  4161  089A  3040               	movlw	64
  4162  089B  0279               	subwf	_uart_position2,w
  4163  089C  1C03               	skipc
  4164  089D  0008               	return
  4165                           
  4166                           ;nozzle.c: 422: {
  4167                           ;nozzle.c: 423: uart_position2 = 0;
  4168  089E  01F9               	clrf	_uart_position2
  4169  089F  0008               	return
  4170  08A0                     __end_of_handle_uart:	
  4171                           
  4172                           	psect	text14
  4173  0BAC                     __ptext14:	
  4174 ;; *************** function _handle_ir *****************
  4175 ;; Defined at:
  4176 ;;		line 1242 in file "nozzle.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  i               1   29[BANK0 ] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       0       0       0       0
  4191 ;;      Locals:         0       1       0       0       0
  4192 ;;      Temps:          0       1       0       0       0
  4193 ;;      Totals:         0       2       0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    7
  4197 ;; This function calls:
  4198 ;;		_handle_ir2
  4199 ;;		_handle_ir_code
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _handle_ir
  4207  0BAC                     _handle_ir:	
  4208                           
  4209                           ;nozzle.c: 1244: uint8_t i;
  4210                           ;nozzle.c: 1246: if(ir_timeout && !first_edge)
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _handle_ir: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4214  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0BAE  0827               	movf	_ir_timeout,w
  4217  0BAF  1903               	btfsc	3,2
  4218  0BB0  2BD5               	goto	l3396
  4219  0BB1  086A               	movf	_first_edge,w
  4220  0BB2  1D03               	btfss	3,2
  4221  0BB3  2BD5               	goto	l3396
  4222                           
  4223                           ;nozzle.c: 1247: {
  4224                           ;nozzle.c: 1253: INTCONbits.GIE = 0;
  4225  0BB4  138B               	bcf	11,7	;volatile
  4226                           
  4227                           ;nozzle.c: 1255: OPTION_REGbits.INTEDG = 0;
  4228  0BB5  1683               	bsf	3,5	;RP0=1, select bank1
  4229  0BB6  1303               	bcf	3,6	;RP1=0, select bank1
  4230  0BB7  1301               	bcf	1,6	;volatile
  4231                           
  4232                           ;nozzle.c: 1256: TMR2 = 0;
  4233  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4235  0BBA  0191               	clrf	17	;volatile
  4236                           
  4237                           ;nozzle.c: 1257: PIR1bits.TMR2IF = 0;
  4238  0BBB  108C               	bcf	12,1	;volatile
  4239                           
  4240                           ;nozzle.c: 1258: INTCONbits.GIE = 1;
  4241  0BBC  178B               	bsf	11,7	;volatile
  4242                           
  4243                           ;nozzle.c: 1260: ir_offset = 0;
  4244  0BBD  01AD               	clrf	_ir_offset
  4245                           
  4246                           ;nozzle.c: 1261: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
  4247  0BBE  01E3               	clrf	handle_ir@i
  4248  0BBF  300A               	movlw	10
  4249  0BC0  0263               	subwf	handle_ir@i,w
  4250  0BC1  1803               	btfsc	3,0
  4251  0BC2  2BD0               	goto	l441
  4252  0BC3                     l3386:	
  4253                           
  4254                           ;nozzle.c: 1262: {
  4255                           ;nozzle.c: 1263: ir_code_failed[i] = 0;
  4256  0BC3  0863               	movf	handle_ir@i,w
  4257  0BC4  3EA0               	addlw	(low (_ir_code_failed| 0))& (0+255)
  4258  0BC5  0084               	movwf	4
  4259  0BC6  1383               	bcf	3,7	;select IRP bank1
  4260  0BC7  0180               	clrf	0
  4261  0BC8  3001               	movlw	1
  4262  0BC9  00E2               	movwf	??_handle_ir
  4263  0BCA  0862               	movf	??_handle_ir,w
  4264  0BCB  07E3               	addwf	handle_ir@i,f
  4265  0BCC  300A               	movlw	10
  4266  0BCD  0263               	subwf	handle_ir@i,w
  4267  0BCE  1C03               	skipc
  4268  0BCF  2BC3               	goto	l3386
  4269  0BD0                     l441:	
  4270                           
  4271                           ;nozzle.c: 1264: }
  4272                           ;nozzle.c: 1265: first_edge = 1;
  4273  0BD0  01EA               	clrf	_first_edge
  4274  0BD1  0AEA               	incf	_first_edge,f
  4275                           
  4276                           ;nozzle.c: 1266: have_ir = 0;
  4277  0BD2  01AC               	clrf	_have_ir
  4278                           
  4279                           ;nozzle.c: 1267: got_ir_int = 0;
  4280  0BD3  01A9               	clrf	_got_ir_int	;volatile
  4281                           
  4282                           ;nozzle.c: 1268: PORTDbits.RD7 = 1;
  4283  0BD4  1788               	bsf	8,7	;volatile
  4284  0BD5                     l3396:	
  4285                           
  4286                           ;nozzle.c: 1269: }
  4287                           ;nozzle.c: 1272: if(have_ir &&
  4288                           ;nozzle.c: 1273: repeat_delay == 0 &&
  4289                           ;nozzle.c: 1274: ir_code != 4 &&
  4290                           ;nozzle.c: 1275: (motor_master & (uint8_t)0b00111111) == (uint8_t)0b00111111)
  4291  0BD5  082C               	movf	_have_ir,w
  4292  0BD6  1903               	btfsc	3,2
  4293  0BD7  2BEB               	goto	l3406
  4294  0BD8  082A               	movf	_repeat_delay,w
  4295  0BD9  1D03               	btfss	3,2
  4296  0BDA  2BEB               	goto	l3406
  4297  0BDB  3004               	movlw	4
  4298  0BDC  062B               	xorwf	_ir_code,w
  4299  0BDD  1903               	btfsc	3,2
  4300  0BDE  2BEB               	goto	l3406
  4301  0BDF  303F               	movlw	63
  4302  0BE0  0535               	andwf	_motor_master,w
  4303  0BE1  00E2               	movwf	??_handle_ir
  4304  0BE2  303F               	movlw	63
  4305  0BE3  0662               	xorwf	??_handle_ir,w
  4306  0BE4  1D03               	btfss	3,2
  4307  0BE5  2BEB               	goto	l3406
  4308                           
  4309                           ;nozzle.c: 1276: {
  4310                           ;nozzle.c: 1279: handle_ir_code();
  4311  0BE6  120A  158A  270D  120A  158A  	fcall	_handle_ir_code
  4312  0BEB                     l3406:	
  4313                           
  4314                           ;nozzle.c: 1280: }
  4315                           ;nozzle.c: 1282: if(got_ir_int)
  4316  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0BED  0829               	movf	_got_ir_int,w	;volatile
  4319  0BEE  1903               	btfsc	3,2
  4320  0BEF  0008               	return
  4321                           
  4322                           ;nozzle.c: 1283: {
  4323                           ;nozzle.c: 1284: got_ir_int = 0;
  4324  0BF0  01A9               	clrf	_got_ir_int	;volatile
  4325                           
  4326                           ;nozzle.c: 1286: OPTION_REGbits.INTEDG = !OPTION_REGbits.INTEDG;
  4327  0BF1  1003               	clrc
  4328  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  4329  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  4330  0BF4  1F01               	btfss	1,6	;volatile
  4331  0BF5  1403               	setc
  4332  0BF6  1C03               	btfss	3,0
  4333  0BF7  2BFC               	goto	u3890
  4334  0BF8  1683               	bsf	3,5	;RP0=1, select bank1
  4335  0BF9  1303               	bcf	3,6	;RP1=0, select bank1
  4336  0BFA  1701               	bsf	1,6	;volatile
  4337  0BFB  2BFF               	goto	l3412
  4338  0BFC                     u3890:	
  4339  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0BFE  1301               	bcf	1,6	;volatile
  4342  0BFF                     l3412:	
  4343                           
  4344                           ;nozzle.c: 1287: if(first_edge)
  4345  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0C01  086A               	movf	_first_edge,w
  4348  0C02  1903               	btfsc	3,2
  4349  0C03  2C06               	goto	l3416
  4350                           
  4351                           ;nozzle.c: 1288: {
  4352                           ;nozzle.c: 1289: first_edge = 0;
  4353  0C04  01EA               	clrf	_first_edge
  4354                           
  4355                           ;nozzle.c: 1290: }
  4356  0C05  0008               	return
  4357  0C06                     l3416:	
  4358                           
  4359                           ;nozzle.c: 1291: else
  4360                           ;nozzle.c: 1292: {
  4361                           ;nozzle.c: 1293: handle_ir2();
  4362  0C06  120A  118A  2673   	fcall	_handle_ir2
  4363  0C09  0008               	return
  4364  0C0A                     __end_of_handle_ir:	
  4365                           
  4366                           	psect	text15
  4367  0673                     __ptext15:	
  4368 ;; *************** function _handle_ir2 *****************
  4369 ;; Defined at:
  4370 ;;		line 1154 in file "nozzle.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  data_value      2   23[BANK0 ] int 
  4375 ;;  error           2   19[BANK0 ] int 
  4376 ;;  code            2   25[BANK0 ] PTR const struct .
  4377 ;;		 -> ir_codes(40), 
  4378 ;;  data            2   17[BANK0 ] PTR const unsigned char 
  4379 ;;		 -> fastfwd_data(71), right_data(71), left_data(71), down_data(71), 
  4380 ;;		 -> up_data(71), fastrev_data(71), button0_data(71), button9_data(71), 
  4381 ;;		 -> button8_data(71), button7_data(71), 
  4382 ;;  i               1   27[BANK0 ] unsigned char 
  4383 ;;  got_it          1   22[BANK0 ] unsigned char 
  4384 ;;  got_one         1   21[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0      11       0       0       0
  4396 ;;      Temps:          0       4       0       0       0
  4397 ;;      Totals:         0      15       0       0       0
  4398 ;;Total ram usage:       15 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    6
  4401 ;; This function calls:
  4402 ;;		_handle_ir_code
  4403 ;; This function is called by:
  4404 ;;		_handle_ir
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _handle_ir2
  4410  0673                     _handle_ir2:	
  4411                           
  4412                           ;nozzle.c: 1165: uint8_t i;
  4413                           ;nozzle.c: 1167: uint8_t got_it = 0;
  4414                           
  4415                           ;incstack = 0
  4416 ;; using string table level
  4417                           ; Regs used in _handle_ir2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4418  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0675  01DC               	clrf	handle_ir2@got_it
  4421                           
  4422                           ;nozzle.c: 1169: uint8_t got_one = 0;
  4423  0676  01DB               	clrf	handle_ir2@got_one
  4424                           
  4425                           ;nozzle.c: 1170: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)) && !got_it; i++)
  4426  0677  01E1               	clrf	handle_ir2@i
  4427  0678  2F4F               	goto	l3180
  4428  0679                     l3146:	
  4429                           
  4430                           ;nozzle.c: 1172: {
  4431                           ;nozzle.c: 1174: if(!ir_code_failed[i])
  4432  0679  0861               	movf	handle_ir2@i,w
  4433  067A  3EA0               	addlw	(low (_ir_code_failed| 0))& (0+255)
  4434  067B  0084               	movwf	4
  4435  067C  1383               	bcf	3,7	;select IRP bank1
  4436  067D  0800               	movf	0,w
  4437  067E  1D03               	btfss	3,2
  4438  067F  2F4B               	goto	l3178
  4439                           
  4440                           ;nozzle.c: 1175: {
  4441                           ;nozzle.c: 1176: const ir_code_t *code = &ir_codes[i];
  4442  0680  0861               	movf	handle_ir2@i,w
  4443  0681  00D3               	movwf	??_handle_ir2
  4444  0682  3001               	movlw	1
  4445  0683                     u3425:	
  4446  0683  1003               	clrc
  4447  0684  0DD3               	rlf	??_handle_ir2,f
  4448  0685  3EFF               	addlw	-1
  4449  0686  1D03               	skipz
  4450  0687  2E83               	goto	u3425
  4451  0688  1003               	clrc
  4452  0689  0D53               	rlf	??_handle_ir2,w
  4453  068A  3E83               	addlw	low (_ir_codes| (0+32768))
  4454  068B  00DF               	movwf	handle_ir2@code
  4455  068C  3084               	movlw	high (_ir_codes| (0+32768))
  4456  068D  1803               	skipnc
  4457  068E  3E01               	addlw	1
  4458  068F  00E0               	movwf	handle_ir2@code+1
  4459                           
  4460                           ;nozzle.c: 1177: const uint8_t *data = code->data;
  4461  0690  0860               	movf	handle_ir2@code+1,w
  4462  0691  00FF               	movwf	127
  4463  0692  085F               	movf	handle_ir2@code,w
  4464  0693  0084               	movwf	4
  4465  0694  120A  118A  2100  120A  118A  	fcall	stringtab
  4466  0699  00D3               	movwf	??_handle_ir2
  4467  069A  120A  118A  2100  120A  118A  	fcall	stringtab
  4468  069F  00D4               	movwf	??_handle_ir2+1
  4469  06A0  0853               	movf	??_handle_ir2,w
  4470  06A1  00D7               	movwf	handle_ir2@data
  4471  06A2  0854               	movf	??_handle_ir2+1,w
  4472  06A3  00D8               	movwf	handle_ir2@data+1
  4473                           
  4474                           ;nozzle.c: 1179: if(ir_offset < code->size)
  4475  06A4  3002               	movlw	2
  4476  06A5  075F               	addwf	handle_ir2@code,w
  4477  06A6  0084               	movwf	4
  4478  06A7  0860               	movf	handle_ir2@code+1,w
  4479  06A8  1803               	skipnc
  4480  06A9  0A60               	incf	handle_ir2@code+1,w
  4481  06AA  00FF               	movwf	127
  4482  06AB  120A  118A  2100  120A  118A  	fcall	stringtab
  4483  06B0  022D               	subwf	_ir_offset,w
  4484  06B1  1803               	skipnc
  4485  06B2  2F4B               	goto	l3178
  4486                           
  4487                           ;nozzle.c: 1180: {
  4488                           ;nozzle.c: 1182: int16_t data_value = data[ir_offset];
  4489  06B3  082D               	movf	_ir_offset,w
  4490  06B4  0757               	addwf	handle_ir2@data,w
  4491  06B5  0084               	movwf	4
  4492  06B6  0858               	movf	handle_ir2@data+1,w
  4493  06B7  1803               	skipnc
  4494  06B8  0A58               	incf	handle_ir2@data+1,w
  4495  06B9  00FF               	movwf	127
  4496  06BA  120A  118A  2100  120A  118A  	fcall	stringtab
  4497  06BF  00D3               	movwf	??_handle_ir2
  4498  06C0  01D4               	clrf	??_handle_ir2+1
  4499  06C1  0853               	movf	??_handle_ir2,w
  4500  06C2  00DD               	movwf	handle_ir2@data_value
  4501  06C3  0854               	movf	??_handle_ir2+1,w
  4502  06C4  00DE               	movwf	handle_ir2@data_value+1
  4503                           
  4504                           ;nozzle.c: 1183: int16_t error = ((data_value - ir_time) < 0 ? (-(data_value - ir_time))
      +                           : (data_value - ir_time));
  4505  06C5  0924               	comf	_ir_time,w	;volatile
  4506  06C6  00D3               	movwf	??_handle_ir2
  4507  06C7  0925               	comf	_ir_time+1,w	;volatile
  4508  06C8  00D4               	movwf	??_handle_ir2+1
  4509  06C9  0AD3               	incf	??_handle_ir2,f
  4510  06CA  1903               	skipnz
  4511  06CB  0AD4               	incf	??_handle_ir2+1,f
  4512  06CC  085D               	movf	handle_ir2@data_value,w
  4513  06CD  0753               	addwf	??_handle_ir2,w
  4514  06CE  00D5               	movwf	??_handle_ir2+2
  4515  06CF  085E               	movf	handle_ir2@data_value+1,w
  4516  06D0  1803               	skipnc
  4517  06D1  0A5E               	incf	handle_ir2@data_value+1,w
  4518  06D2  0754               	addwf	??_handle_ir2+1,w
  4519  06D3  00D6               	movwf	??_handle_ir2+3
  4520  06D4  1BD6               	btfsc	??_handle_ir2+3,7
  4521  06D5  2EE5               	goto	l3160
  4522  06D6  0924               	comf	_ir_time,w	;volatile
  4523  06D7  00D3               	movwf	??_handle_ir2
  4524  06D8  0925               	comf	_ir_time+1,w	;volatile
  4525  06D9  00D4               	movwf	??_handle_ir2+1
  4526  06DA  0AD3               	incf	??_handle_ir2,f
  4527  06DB  1903               	skipnz
  4528  06DC  0AD4               	incf	??_handle_ir2+1,f
  4529  06DD  085D               	movf	handle_ir2@data_value,w
  4530  06DE  0753               	addwf	??_handle_ir2,w
  4531  06DF  00D9               	movwf	handle_ir2@error
  4532  06E0  085E               	movf	handle_ir2@data_value+1,w
  4533  06E1  1803               	skipnc
  4534  06E2  0A5E               	incf	handle_ir2@data_value+1,w
  4535  06E3  0754               	addwf	??_handle_ir2+1,w
  4536  06E4  2EFC               	goto	L8
  4537  06E5                     l3160:	
  4538  06E5  0924               	comf	_ir_time,w	;volatile
  4539  06E6  00D3               	movwf	??_handle_ir2
  4540  06E7  0925               	comf	_ir_time+1,w	;volatile
  4541  06E8  00D4               	movwf	??_handle_ir2+1
  4542  06E9  0AD3               	incf	??_handle_ir2,f
  4543  06EA  1903               	skipnz
  4544  06EB  0AD4               	incf	??_handle_ir2+1,f
  4545  06EC  085D               	movf	handle_ir2@data_value,w
  4546  06ED  0753               	addwf	??_handle_ir2,w
  4547  06EE  00D5               	movwf	??_handle_ir2+2
  4548  06EF  085E               	movf	handle_ir2@data_value+1,w
  4549  06F0  1803               	skipnc
  4550  06F1  0A5E               	incf	handle_ir2@data_value+1,w
  4551  06F2  0754               	addwf	??_handle_ir2+1,w
  4552  06F3  00D6               	movwf	??_handle_ir2+3
  4553  06F4  09D5               	comf	??_handle_ir2+2,f
  4554  06F5  09D6               	comf	??_handle_ir2+3,f
  4555  06F6  0AD5               	incf	??_handle_ir2+2,f
  4556  06F7  1903               	skipnz
  4557  06F8  0AD6               	incf	??_handle_ir2+3,f
  4558  06F9  0855               	movf	??_handle_ir2+2,w
  4559  06FA  00D9               	movwf	handle_ir2@error
  4560  06FB  0856               	movf	??_handle_ir2+3,w
  4561  06FC                     L8:	
  4562  06FC  00DA               	movwf	handle_ir2@error+1
  4563                           
  4564                           ;nozzle.c: 1186: if(error > 2)
  4565  06FD  085A               	movf	handle_ir2@error+1,w
  4566  06FE  3A80               	xorlw	128
  4567  06FF  00FF               	movwf	127
  4568  0700  3080               	movlw	128
  4569  0701  027F               	subwf	127,w
  4570  0702  1D03               	skipz
  4571  0703  2F06               	goto	u3455
  4572  0704  3003               	movlw	3
  4573  0705  0259               	subwf	handle_ir2@error,w
  4574  0706                     u3455:	
  4575  0706  1C03               	skipc
  4576  0707  2F11               	goto	l3166
  4577                           
  4578                           ;nozzle.c: 1187: {
  4579                           ;nozzle.c: 1189: ir_code_failed[i] = 1;
  4580  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4581  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4582  070A  0861               	movf	handle_ir2@i,w
  4583  070B  3EA0               	addlw	(low (_ir_code_failed| 0))& (0+255)
  4584  070C  0084               	movwf	4
  4585  070D  1383               	bcf	3,7	;select IRP bank1
  4586  070E  0180               	clrf	0
  4587  070F  0A80               	incf	0,f
  4588                           
  4589                           ;nozzle.c: 1190: }
  4590  0710  2F4B               	goto	l3178
  4591  0711                     l3166:	
  4592                           
  4593                           ;nozzle.c: 1191: else
  4594                           ;nozzle.c: 1193: {
  4595                           ;nozzle.c: 1195: if(ir_offset >= code->size - 1)
  4596  0711  3002               	movlw	2
  4597  0712  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0713  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0714  075F               	addwf	handle_ir2@code,w
  4600  0715  0084               	movwf	4
  4601  0716  0860               	movf	handle_ir2@code+1,w
  4602  0717  1803               	skipnc
  4603  0718  0A60               	incf	handle_ir2@code+1,w
  4604  0719  00FF               	movwf	127
  4605  071A  120A  118A  2100  120A  118A  	fcall	stringtab
  4606  071F  3EFF               	addlw	255
  4607  0720  00D3               	movwf	??_handle_ir2
  4608  0721  30FF               	movlw	255
  4609  0722  1803               	skipnc
  4610  0723  3000               	movlw	0
  4611  0724  00D4               	movwf	??_handle_ir2+1
  4612  0725  0854               	movf	??_handle_ir2+1,w
  4613  0726  3A80               	xorlw	128
  4614  0727  3C80               	sublw	128
  4615  0728  1D03               	skipz
  4616  0729  2F2C               	goto	u3465
  4617  072A  0853               	movf	??_handle_ir2,w
  4618  072B  022D               	subwf	_ir_offset,w
  4619  072C                     u3465:	
  4620  072C  1C03               	skipc
  4621  072D  2F47               	goto	l3176
  4622                           
  4623                           ;nozzle.c: 1196: {
  4624                           ;nozzle.c: 1197: have_ir = 1;
  4625  072E  1283               	bcf	3,5	;RP0=0, select bank0
  4626  072F  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0730  01AC               	clrf	_have_ir
  4628  0731  0AAC               	incf	_have_ir,f
  4629                           
  4630                           ;nozzle.c: 1198: repeat_delay = (100 / 2);
  4631  0732  3032               	movlw	50
  4632  0733  00D3               	movwf	??_handle_ir2
  4633  0734  0853               	movf	??_handle_ir2,w
  4634  0735  00AA               	movwf	_repeat_delay
  4635                           
  4636                           ;nozzle.c: 1199: ir_code = code->value;
  4637  0736  3003               	movlw	3
  4638  0737  075F               	addwf	handle_ir2@code,w
  4639  0738  0084               	movwf	4
  4640  0739  0860               	movf	handle_ir2@code+1,w
  4641  073A  1803               	skipnc
  4642  073B  0A60               	incf	handle_ir2@code+1,w
  4643  073C  00FF               	movwf	127
  4644  073D  120A  118A  2100  120A  118A  	fcall	stringtab
  4645  0742  00D3               	movwf	??_handle_ir2
  4646  0743  0853               	movf	??_handle_ir2,w
  4647  0744  00AB               	movwf	_ir_code
  4648                           
  4649                           ;nozzle.c: 1201: got_it = 1;
  4650  0745  01DC               	clrf	handle_ir2@got_it
  4651  0746  0ADC               	incf	handle_ir2@got_it,f
  4652  0747                     l3176:	
  4653                           
  4654                           ;nozzle.c: 1202: }
  4655                           ;nozzle.c: 1204: got_one = 1;
  4656  0747  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0748  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0749  01DB               	clrf	handle_ir2@got_one
  4659  074A  0ADB               	incf	handle_ir2@got_one,f
  4660  074B                     l3178:	
  4661  074B  3001               	movlw	1
  4662  074C  00D3               	movwf	??_handle_ir2
  4663  074D  0853               	movf	??_handle_ir2,w
  4664  074E  07E1               	addwf	handle_ir2@i,f
  4665  074F                     l3180:	
  4666  074F  300A               	movlw	10
  4667  0750  0261               	subwf	handle_ir2@i,w
  4668  0751  1803               	skipnc
  4669  0752  2F56               	goto	l3184
  4670  0753  085C               	movf	handle_ir2@got_it,w
  4671  0754  1903               	btfsc	3,2
  4672  0755  2E79               	goto	l3146
  4673  0756                     l3184:	
  4674                           
  4675                           ;nozzle.c: 1205: }
  4676                           ;nozzle.c: 1206: }
  4677                           ;nozzle.c: 1207: }
  4678                           ;nozzle.c: 1208: }
  4679                           ;nozzle.c: 1211: if(got_it)
  4680  0756  085C               	movf	handle_ir2@got_it,w
  4681  0757  1903               	btfsc	3,2
  4682  0758  2F5D               	goto	l3188
  4683                           
  4684                           ;nozzle.c: 1212: {
  4685                           ;nozzle.c: 1223: handle_ir_code();
  4686  0759  120A  158A  270D   	fcall	_handle_ir_code
  4687                           
  4688                           ;nozzle.c: 1224: }
  4689  075C  0008               	return
  4690  075D                     l3188:	
  4691                           
  4692                           ;nozzle.c: 1225: else
  4693                           ;nozzle.c: 1226: if(got_one)
  4694  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4695  075E  1303               	bcf	3,6	;RP1=0, select bank0
  4696  075F  085B               	movf	handle_ir2@got_one,w
  4697  0760  1903               	btfsc	3,2
  4698  0761  2F67               	goto	l3192
  4699                           
  4700                           ;nozzle.c: 1227: {
  4701                           ;nozzle.c: 1229: ir_offset++;
  4702  0762  3001               	movlw	1
  4703  0763  00D3               	movwf	??_handle_ir2
  4704  0764  0853               	movf	??_handle_ir2,w
  4705  0765  07AD               	addwf	_ir_offset,f
  4706                           
  4707                           ;nozzle.c: 1230: }
  4708  0766  0008               	return
  4709  0767                     l3192:	
  4710                           
  4711                           ;nozzle.c: 1231: else
  4712                           ;nozzle.c: 1232: {
  4713                           ;nozzle.c: 1234: ir_offset = 0;
  4714  0767  01AD               	clrf	_ir_offset
  4715                           
  4716                           ;nozzle.c: 1235: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
  4717  0768  01E1               	clrf	handle_ir2@i
  4718  0769                     L9:	
  4719  0769  300A               	movlw	10
  4720  076A  0261               	subwf	handle_ir2@i,w
  4721  076B  1803               	btfsc	3,0
  4722  076C  0008               	return
  4723                           
  4724                           ;nozzle.c: 1236: {
  4725                           ;nozzle.c: 1237: ir_code_failed[i] = 0;
  4726  076D  0861               	movf	handle_ir2@i,w
  4727  076E  3EA0               	addlw	(low (_ir_code_failed| 0))& (0+255)
  4728  076F  0084               	movwf	4
  4729  0770  1383               	bcf	3,7	;select IRP bank1
  4730  0771  0180               	clrf	0
  4731  0772  3001               	movlw	1
  4732  0773  00D3               	movwf	??_handle_ir2
  4733  0774  0853               	movf	??_handle_ir2,w
  4734  0775  07E1               	addwf	handle_ir2@i,f
  4735  0776  2F69               	goto	L9
  4736  0777                     __end_of_handle_ir2:	
  4737                           
  4738                           	psect	text16
  4739  0F0D                     __ptext16:	
  4740 ;; *************** function _handle_ir_code *****************
  4741 ;; Defined at:
  4742 ;;		line 1028 in file "nozzle.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  i               1    0        unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0
  4758 ;;      Temps:          0       1       0       0       0
  4759 ;;      Totals:         0       1       0       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    5
  4763 ;; This function calls:
  4764 ;;		_arm_motors
  4765 ;;		_disarm_motors
  4766 ;;		_handle_preset_button
  4767 ;;		_update_motors
  4768 ;; This function is called by:
  4769 ;;		_handle_ir2
  4770 ;;		_handle_ir
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _handle_ir_code
  4776  0F0D                     _handle_ir_code:	
  4777                           
  4778                           ;nozzle.c: 1030: uint8_t i;
  4779                           ;nozzle.c: 1031: switch(ir_code)
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _handle_ir_code: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4783  0F0D  2FDD               	goto	l3128
  4784  0F0E                     l3060:	
  4785                           ;nozzle.c: 1032: {
  4786                           ;nozzle.c: 1033: case 0:
  4787                           
  4788                           
  4789                           ;nozzle.c: 1034: setting_preset = 0;
  4790  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0F10  01B2               	clrf	_setting_preset
  4793                           
  4794                           ;nozzle.c: 1035: preset_state = 0;
  4795  0F11  01B0               	clrf	_preset_state
  4796                           
  4797                           ;nozzle.c: 1036: PORTDbits.RD7 = !PORTDbits.RD7;
  4798  0F12  1003               	clrc
  4799  0F13  1F88               	btfss	8,7	;volatile
  4800  0F14  1403               	setc
  4801  0F15  1C03               	btfss	3,0
  4802  0F16  2F1B               	goto	u3210
  4803  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  4804  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0F19  1788               	bsf	8,7	;volatile
  4806  0F1A  2F1E               	goto	l3064
  4807  0F1B                     u3210:	
  4808  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0F1D  1388               	bcf	8,7	;volatile
  4811  0F1E                     l3064:	
  4812                           
  4813                           ;nozzle.c: 1046: if(nozzle_pitch > 0)
  4814  0F1E  0845               	movf	_nozzle_pitch,w
  4815  0F1F  3A80               	xorlw	128
  4816  0F20  3E7F               	addlw	-129
  4817  0F21  1C03               	skipc
  4818  0F22  0008               	return
  4819                           
  4820                           ;nozzle.c: 1047: {
  4821                           ;nozzle.c: 1048: nozzle_pitch--;
  4822  0F23  30FF               	movlw	255
  4823  0F24  00D2               	movwf	??_handle_ir_code
  4824  0F25  0852               	movf	??_handle_ir_code,w
  4825  0F26  07C5               	addwf	_nozzle_pitch,f
  4826                           
  4827                           ;nozzle.c: 1049: update_motors();
  4828  0F27  120A  158A  2630   	fcall	_update_motors
  4829                           
  4830                           ;nozzle.c: 1050: }
  4831                           ;nozzle.c: 1052: break;
  4832  0F2A  0008               	return
  4833  0F2B                     l3070:	
  4834                           ;nozzle.c: 1054: case 1:
  4835                           
  4836                           
  4837                           ;nozzle.c: 1055: setting_preset = 0;
  4838  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0F2D  01B2               	clrf	_setting_preset
  4841                           
  4842                           ;nozzle.c: 1056: preset_state = 0;
  4843  0F2E  01B0               	clrf	_preset_state
  4844                           
  4845                           ;nozzle.c: 1057: PORTDbits.RD7 = !PORTDbits.RD7;
  4846  0F2F  1003               	clrc
  4847  0F30  1F88               	btfss	8,7	;volatile
  4848  0F31  1403               	setc
  4849  0F32  1C03               	btfss	3,0
  4850  0F33  2F38               	goto	u3240
  4851  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4852  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4853  0F36  1788               	bsf	8,7	;volatile
  4854  0F37  2F3B               	goto	l3074
  4855  0F38                     u3240:	
  4856  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0F3A  1388               	bcf	8,7	;volatile
  4859  0F3B                     l3074:	
  4860                           
  4861                           ;nozzle.c: 1065: if(nozzle_pitch < 24)
  4862  0F3B  0845               	movf	_nozzle_pitch,w
  4863  0F3C  3A80               	xorlw	128
  4864  0F3D  3E68               	addlw	-152
  4865  0F3E  1803               	skipnc
  4866  0F3F  0008               	return
  4867                           
  4868                           ;nozzle.c: 1066: {
  4869                           ;nozzle.c: 1067: nozzle_pitch++;
  4870  0F40  3001               	movlw	1
  4871  0F41  00D2               	movwf	??_handle_ir_code
  4872  0F42  0852               	movf	??_handle_ir_code,w
  4873  0F43  07C5               	addwf	_nozzle_pitch,f
  4874                           
  4875                           ;nozzle.c: 1068: update_motors();
  4876  0F44  120A  158A  2630   	fcall	_update_motors
  4877                           
  4878                           ;nozzle.c: 1069: }
  4879                           ;nozzle.c: 1071: break;
  4880  0F47  0008               	return
  4881  0F48                     l3080:	
  4882                           ;nozzle.c: 1073: case 2:
  4883                           
  4884                           
  4885                           ;nozzle.c: 1074: setting_preset = 0;
  4886  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0F4A  01B2               	clrf	_setting_preset
  4889                           
  4890                           ;nozzle.c: 1075: preset_state = 0;
  4891  0F4B  01B0               	clrf	_preset_state
  4892                           
  4893                           ;nozzle.c: 1076: PORTDbits.RD7 = !PORTDbits.RD7;
  4894  0F4C  1003               	clrc
  4895  0F4D  1F88               	btfss	8,7	;volatile
  4896  0F4E  1403               	setc
  4897  0F4F  1C03               	btfss	3,0
  4898  0F50  2F55               	goto	u3270
  4899  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  4901  0F53  1788               	bsf	8,7	;volatile
  4902  0F54  2F58               	goto	l3084
  4903  0F55                     u3270:	
  4904  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0F57  1388               	bcf	8,7	;volatile
  4907  0F58                     l3084:	
  4908                           
  4909                           ;nozzle.c: 1083: if(nozzle_angle < tracking_state[0].max)
  4910  0F58  0833               	movf	_nozzle_angle,w
  4911  0F59  3A80               	xorlw	128
  4912  0F5A  00D2               	movwf	??_handle_ir_code
  4913  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  4914  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0F5D  0833               	movf	(_tracking_state^(0+128)+9),w
  4916  0F5E  3A80               	xorlw	128
  4917  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  4918  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0F61  02D2               	subwf	??_handle_ir_code,f
  4920  0F62  1803               	skipnc
  4921  0F63  0008               	return
  4922                           
  4923                           ;nozzle.c: 1084: {
  4924                           ;nozzle.c: 1085: nozzle_angle++;
  4925  0F64  3001               	movlw	1
  4926  0F65  00D2               	movwf	??_handle_ir_code
  4927  0F66  0852               	movf	??_handle_ir_code,w
  4928  0F67  07B3               	addwf	_nozzle_angle,f
  4929                           
  4930                           ;nozzle.c: 1086: update_motors();
  4931  0F68  120A  158A  2630   	fcall	_update_motors
  4932                           
  4933                           ;nozzle.c: 1087: }
  4934                           ;nozzle.c: 1089: break;
  4935  0F6B  0008               	return
  4936  0F6C                     l3090:	
  4937                           ;nozzle.c: 1091: case 3:
  4938                           
  4939                           
  4940                           ;nozzle.c: 1092: setting_preset = 0;
  4941  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0F6E  01B2               	clrf	_setting_preset
  4944                           
  4945                           ;nozzle.c: 1093: preset_state = 0;
  4946  0F6F  01B0               	clrf	_preset_state
  4947                           
  4948                           ;nozzle.c: 1094: PORTDbits.RD7 = !PORTDbits.RD7;
  4949  0F70  1003               	clrc
  4950  0F71  1F88               	btfss	8,7	;volatile
  4951  0F72  1403               	setc
  4952  0F73  1C03               	btfss	3,0
  4953  0F74  2F79               	goto	u3300
  4954  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  4955  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  4956  0F77  1788               	bsf	8,7	;volatile
  4957  0F78  2F7C               	goto	l3094
  4958  0F79                     u3300:	
  4959  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0F7B  1388               	bcf	8,7	;volatile
  4962  0F7C                     l3094:	
  4963                           
  4964                           ;nozzle.c: 1102: if(nozzle_angle > tracking_state[0].min)
  4965  0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  4966  0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  4967  0F7E  0832               	movf	(_tracking_state^(0+128)+8),w
  4968  0F7F  3A80               	xorlw	128
  4969  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0F82  00D2               	movwf	??_handle_ir_code
  4972  0F83  0833               	movf	_nozzle_angle,w
  4973  0F84  3A80               	xorlw	128
  4974  0F85  02D2               	subwf	??_handle_ir_code,f
  4975  0F86  1803               	skipnc
  4976  0F87  0008               	return
  4977                           
  4978                           ;nozzle.c: 1103: {
  4979                           ;nozzle.c: 1104: nozzle_angle--;
  4980  0F88  30FF               	movlw	255
  4981  0F89  00D2               	movwf	??_handle_ir_code
  4982  0F8A  0852               	movf	??_handle_ir_code,w
  4983  0F8B  07B3               	addwf	_nozzle_angle,f
  4984                           
  4985                           ;nozzle.c: 1105: update_motors();
  4986  0F8C  120A  158A  2630   	fcall	_update_motors
  4987                           
  4988                           ;nozzle.c: 1106: }
  4989                           ;nozzle.c: 1108: break;
  4990  0F8F  0008               	return
  4991  0F90                     l3100:	
  4992                           ;nozzle.c: 1110: case 5:
  4993                           
  4994                           
  4995                           ;nozzle.c: 1111: if(setting_preset)
  4996  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0F92  0832               	movf	_setting_preset,w
  4999  0F93  1903               	btfsc	3,2
  5000  0F94  2F97               	goto	l3104
  5001                           
  5002                           ;nozzle.c: 1112: {
  5003                           ;nozzle.c: 1113: setting_preset = 0;
  5004  0F95  01B2               	clrf	_setting_preset
  5005                           
  5006                           ;nozzle.c: 1114: }
  5007  0F96  0008               	return
  5008  0F97                     l3104:	
  5009                           
  5010                           ;nozzle.c: 1115: else
  5011                           ;nozzle.c: 1116: if(armed)
  5012  0F97  083A               	movf	_armed,w
  5013  0F98  1903               	btfsc	3,2
  5014  0F99  0008               	return
  5015                           
  5016                           ;nozzle.c: 1117: {
  5017                           ;nozzle.c: 1118: setting_preset = 1;
  5018  0F9A  01B2               	clrf	_setting_preset
  5019  0F9B  0AB2               	incf	_setting_preset,f
  5020                           
  5021                           ;nozzle.c: 1119: }
  5022                           ;nozzle.c: 1120: break;
  5023  0F9C  0008               	return
  5024  0F9D                     l3108:	
  5025                           ;nozzle.c: 1122: case 6:
  5026                           
  5027                           
  5028                           ;nozzle.c: 1123: handle_preset_button(0);
  5029  0F9D  3000               	movlw	0
  5030  0F9E  00CE               	movwf	handle_preset_button@preset
  5031  0F9F  00CF               	movwf	handle_preset_button@preset+1
  5032  0FA0  120A  158A  22C2   	fcall	_handle_preset_button
  5033                           
  5034                           ;nozzle.c: 1124: break;
  5035  0FA3  0008               	return
  5036  0FA4                     l3110:	
  5037                           ;nozzle.c: 1126: case 7:
  5038                           
  5039                           
  5040                           ;nozzle.c: 1127: handle_preset_button(1);
  5041  0FA4  3001               	movlw	1
  5042  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  5043  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  5044  0FA7  00CE               	movwf	handle_preset_button@preset
  5045  0FA8  3000               	movlw	0
  5046  0FA9  00CF               	movwf	handle_preset_button@preset+1
  5047  0FAA  120A  158A  22C2   	fcall	_handle_preset_button
  5048                           
  5049                           ;nozzle.c: 1128: break;
  5050  0FAD  0008               	return
  5051  0FAE                     l3112:	
  5052                           ;nozzle.c: 1130: case 8:
  5053                           
  5054                           
  5055                           ;nozzle.c: 1131: handle_preset_button(2);
  5056  0FAE  3002               	movlw	2
  5057  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0FB1  00CE               	movwf	handle_preset_button@preset
  5060  0FB2  3000               	movlw	0
  5061  0FB3  00CF               	movwf	handle_preset_button@preset+1
  5062  0FB4  120A  158A  22C2   	fcall	_handle_preset_button
  5063                           
  5064                           ;nozzle.c: 1132: break;
  5065  0FB7  0008               	return
  5066  0FB8                     l3114:	
  5067                           ;nozzle.c: 1134: case 9:
  5068                           
  5069                           
  5070                           ;nozzle.c: 1135: handle_preset_button(3);
  5071  0FB8  3003               	movlw	3
  5072  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0FBB  00CE               	movwf	handle_preset_button@preset
  5075  0FBC  3000               	movlw	0
  5076  0FBD  00CF               	movwf	handle_preset_button@preset+1
  5077  0FBE  120A  158A  22C2   	fcall	_handle_preset_button
  5078                           
  5079                           ;nozzle.c: 1136: break;
  5080  0FC1  0008               	return
  5081  0FC2                     l3116:	
  5082                           ;nozzle.c: 1138: case 4:
  5083                           
  5084                           
  5085                           ;nozzle.c: 1139: setting_preset = 0;
  5086  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5087  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5088  0FC4  01B2               	clrf	_setting_preset
  5089                           
  5090                           ;nozzle.c: 1140: preset_state = 0;
  5091  0FC5  01B0               	clrf	_preset_state
  5092                           
  5093                           ;nozzle.c: 1141: PORTDbits.RD7 = !PORTDbits.RD7;
  5094  0FC6  1003               	clrc
  5095  0FC7  1F88               	btfss	8,7	;volatile
  5096  0FC8  1403               	setc
  5097  0FC9  1C03               	btfss	3,0
  5098  0FCA  2FCF               	goto	u3350
  5099  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0FCD  1788               	bsf	8,7	;volatile
  5102  0FCE  2FD2               	goto	l3120
  5103  0FCF                     u3350:	
  5104  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  5106  0FD1  1388               	bcf	8,7	;volatile
  5107  0FD2                     l3120:	
  5108                           
  5109                           ;nozzle.c: 1142: if(!armed)
  5110  0FD2  083A               	movf	_armed,w
  5111  0FD3  1D03               	btfss	3,2
  5112  0FD4  2FD9               	goto	l3124
  5113                           
  5114                           ;nozzle.c: 1143: {
  5115                           ;nozzle.c: 1144: arm_motors();
  5116  0FD5  120A  158A  219C   	fcall	_arm_motors
  5117                           
  5118                           ;nozzle.c: 1145: }
  5119  0FD8  0008               	return
  5120  0FD9                     l3124:	
  5121                           
  5122                           ;nozzle.c: 1146: else
  5123                           ;nozzle.c: 1147: {
  5124                           ;nozzle.c: 1148: disarm_motors();
  5125  0FD9  120A  158A  2026   	fcall	_disarm_motors
  5126                           
  5127                           ;nozzle.c: 1151: }
  5128                           
  5129                           ;nozzle.c: 1149: }
  5130                           ;nozzle.c: 1150: break;
  5131  0FDC  0008               	return
  5132  0FDD                     l3128:	
  5133  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0FDF  082B               	movf	_ir_code,w
  5136                           
  5137                           ; Switch size 1, requested type "space"
  5138                           ; Number of cases is 10, Range of values is 0 to 9
  5139                           ; switch strategies available:
  5140                           ; Name         Instructions Cycles
  5141                           ; simple_byte           31    16 (average)
  5142                           ; direct_byte           38     8 (fixed)
  5143                           ; jumptable            260     6 (fixed)
  5144                           ;	Chosen strategy is simple_byte
  5145  0FE0  3A00               	xorlw	0	; case 0
  5146  0FE1  1903               	skipnz
  5147  0FE2  2F0E               	goto	l3060
  5148  0FE3  3A01               	xorlw	1	; case 1
  5149  0FE4  1903               	skipnz
  5150  0FE5  2F2B               	goto	l3070
  5151  0FE6  3A03               	xorlw	3	; case 2
  5152  0FE7  1903               	skipnz
  5153  0FE8  2F48               	goto	l3080
  5154  0FE9  3A01               	xorlw	1	; case 3
  5155  0FEA  1903               	skipnz
  5156  0FEB  2F6C               	goto	l3090
  5157  0FEC  3A07               	xorlw	7	; case 4
  5158  0FED  1903               	skipnz
  5159  0FEE  2FC2               	goto	l3116
  5160  0FEF  3A01               	xorlw	1	; case 5
  5161  0FF0  1903               	skipnz
  5162  0FF1  2F90               	goto	l3100
  5163  0FF2  3A03               	xorlw	3	; case 6
  5164  0FF3  1903               	skipnz
  5165  0FF4  2F9D               	goto	l3108
  5166  0FF5  3A01               	xorlw	1	; case 7
  5167  0FF6  1903               	skipnz
  5168  0FF7  2FA4               	goto	l3110
  5169  0FF8  3A0F               	xorlw	15	; case 8
  5170  0FF9  1903               	skipnz
  5171  0FFA  2FAE               	goto	l3112
  5172  0FFB  3A01               	xorlw	1	; case 9
  5173  0FFC  1903               	skipnz
  5174  0FFD  2FB8               	goto	l3114
  5175  0FFE  2FFF               	goto	l413
  5176  0FFF                     l413:	
  5177  0FFF  0008               	return
  5178  1000                     __end_of_handle_ir_code:	
  5179                           
  5180                           	psect	text17
  5181  0AC2                     __ptext17:	
  5182 ;; *************** function _handle_preset_button *****************
  5183 ;; Defined at:
  5184 ;;		line 926 in file "nozzle.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  preset          2    8[BANK0 ] int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5198 ;;      Params:         0       2       0       0       0
  5199 ;;      Locals:         0       0       0       0       0
  5200 ;;      Temps:          0       2       0       0       0
  5201 ;;      Totals:         0       4       0       0       0
  5202 ;;Total ram usage:        4 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    4
  5205 ;; This function calls:
  5206 ;;		_update_motors
  5207 ;;		_write_presets
  5208 ;; This function is called by:
  5209 ;;		_handle_ir_code
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _handle_preset_button
  5215  0AC2                     _handle_preset_button:	
  5216                           
  5217                           ;nozzle.c: 928: if(setting_preset)
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _handle_preset_button: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5221  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0AC4  0832               	movf	_setting_preset,w
  5224  0AC5  1903               	btfsc	3,2
  5225  0AC6  2AFB               	goto	l3056
  5226                           
  5227                           ;nozzle.c: 929: {
  5228                           ;nozzle.c: 930: presets[preset].pitch = nozzle_pitch;
  5229  0AC7  0845               	movf	_nozzle_pitch,w
  5230  0AC8  00D0               	movwf	??_handle_preset_button
  5231  0AC9  084E               	movf	handle_preset_button@preset,w
  5232  0ACA  00D1               	movwf	??_handle_preset_button+1
  5233  0ACB  0751               	addwf	??_handle_preset_button+1,w
  5234  0ACC  3E3D               	addlw	(low (_presets| 0))& (0+255)
  5235  0ACD  0084               	movwf	4
  5236  0ACE  0850               	movf	??_handle_preset_button,w
  5237  0ACF  1383               	bcf	3,7	;select IRP bank0
  5238  0AD0  0080               	movwf	0
  5239                           
  5240                           ;nozzle.c: 931: presets[preset].angle = nozzle_angle;
  5241  0AD1  0833               	movf	_nozzle_angle,w
  5242  0AD2  00D0               	movwf	??_handle_preset_button
  5243  0AD3  1403               	setc
  5244  0AD4  0D4E               	rlf	handle_preset_button@preset,w
  5245  0AD5  3E3D               	addlw	(low (_presets| 0))& (0+255)
  5246  0AD6  0084               	movwf	4
  5247  0AD7  0850               	movf	??_handle_preset_button,w
  5248  0AD8  0080               	movwf	0
  5249                           
  5250                           ;nozzle.c: 932: write_presets();
  5251  0AD9  120A  158A  21D1  120A  158A  	fcall	_write_presets
  5252                           
  5253                           ;nozzle.c: 934: setting_preset = 0;
  5254  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0AE0  01B2               	clrf	_setting_preset
  5257                           
  5258                           ;nozzle.c: 936: PORTDbits.RD7 = 1;
  5259  0AE1  1788               	bsf	8,7	;volatile
  5260                           
  5261                           ;nozzle.c: 939: orig_nozzle_angle = nozzle_angle;
  5262  0AE2  0833               	movf	_nozzle_angle,w
  5263  0AE3  00D0               	movwf	??_handle_preset_button
  5264  0AE4  0850               	movf	??_handle_preset_button,w
  5265  0AE5  00AF               	movwf	_orig_nozzle_angle
  5266                           
  5267                           ;nozzle.c: 940: if(nozzle_angle < 39)
  5268  0AE6  0833               	movf	_nozzle_angle,w
  5269  0AE7  3A80               	xorlw	128
  5270  0AE8  3E59               	addlw	-167
  5271  0AE9  1803               	skipnc
  5272  0AEA  2AED               	goto	l3050
  5273                           
  5274                           ;nozzle.c: 941: {
  5275                           ;nozzle.c: 942: nozzle_angle++;
  5276  0AEB  3001               	movlw	1
  5277  0AEC  2AEE               	goto	L10
  5278  0AED                     l3050:	
  5279                           ;nozzle.c: 943: }
  5280                           
  5281                           
  5282                           ;nozzle.c: 944: else
  5283                           ;nozzle.c: 945: {
  5284                           ;nozzle.c: 946: nozzle_angle--;
  5285  0AED  30FF               	movlw	255
  5286  0AEE                     L10:	
  5287  0AEE  00D0               	movwf	??_handle_preset_button
  5288  0AEF  0850               	movf	??_handle_preset_button,w
  5289  0AF0  07B3               	addwf	_nozzle_angle,f
  5290                           
  5291                           ;nozzle.c: 947: }
  5292                           ;nozzle.c: 948: update_motors();
  5293  0AF1  120A  158A  2630   	fcall	_update_motors
  5294                           
  5295                           ;nozzle.c: 949: preset_state = do_preset_save1;
  5296  0AF4  301E               	movlw	(low (fp__do_preset_save1-fpbase))& (0+255)
  5297  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  5299  0AF7  00D0               	movwf	??_handle_preset_button
  5300  0AF8  0850               	movf	??_handle_preset_button,w
  5301  0AF9  00B0               	movwf	_preset_state
  5302                           
  5303                           ;nozzle.c: 950: }
  5304  0AFA  0008               	return
  5305  0AFB                     l3056:	
  5306                           
  5307                           ;nozzle.c: 951: else
  5308                           ;nozzle.c: 952: {
  5309                           ;nozzle.c: 953: current_preset = preset;
  5310  0AFB  084E               	movf	handle_preset_button@preset,w
  5311  0AFC  00D0               	movwf	??_handle_preset_button
  5312  0AFD  0850               	movf	??_handle_preset_button,w
  5313  0AFE  00B1               	movwf	_current_preset
  5314                           
  5315                           ;nozzle.c: 955: preset_state = do_preset_center;
  5316  0AFF  301B               	movlw	(low (fp__do_preset_center-fpbase))& (0+255)
  5317  0B00  00D0               	movwf	??_handle_preset_button
  5318  0B01  0850               	movf	??_handle_preset_button,w
  5319  0B02  00B0               	movwf	_preset_state
  5320  0B03  0008               	return
  5321  0B04                     __end_of_handle_preset_button:	
  5322                           
  5323                           	psect	text18
  5324  09D1                     __ptext18:	
  5325 ;; *************** function _write_presets *****************
  5326 ;; Defined at:
  5327 ;;		line 897 in file "nozzle.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  i               1    2[BANK0 ] unsigned char 
  5332 ;;  ptr             1    1[BANK0 ] PTR unsigned char 
  5333 ;;		 -> presets(8), 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       0       0       0       0
  5344 ;;      Locals:         0       2       0       0       0
  5345 ;;      Temps:          0       1       0       0       0
  5346 ;;      Totals:         0       3       0       0       0
  5347 ;;Total ram usage:        3 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    2
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_handle_preset_button
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _write_presets
  5359  09D1                     _write_presets:	
  5360                           
  5361                           ;nozzle.c: 899: uint8_t i;
  5362                           ;nozzle.c: 900: uint8_t *ptr = (uint8_t*)presets;
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _write_presets: [wreg-fsr0h+status,2+status,0]
  5366  09D1  303D               	movlw	(low (_presets| 0))& (0+255)
  5367  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  5368  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  5369  09D4  00C6               	movwf	??_write_presets
  5370  09D5  0846               	movf	??_write_presets,w
  5371  09D6  00C7               	movwf	write_presets@ptr
  5372                           
  5373                           ;nozzle.c: 902: INTCONbits.GIE = 0;
  5374  09D7  138B               	bcf	11,7	;volatile
  5375                           
  5376                           ;nozzle.c: 903: for(i = 0; i < sizeof(presets); i++)
  5377  09D8  01C8               	clrf	write_presets@i
  5378  09D9  3008               	movlw	8
  5379  09DA  0248               	subwf	write_presets@i,w
  5380  09DB  1803               	btfsc	3,0
  5381  09DC  2A04               	goto	l378
  5382  09DD                     l377:	
  5383                           
  5384                           ;nozzle.c: 904: {
  5385                           ;nozzle.c: 905: PIR2bits.EEIF = 0;
  5386  09DD  120D               	bcf	13,4	;volatile
  5387                           
  5388                           ;nozzle.c: 906: EEADR = 0x00 + i;
  5389  09DE  0848               	movf	write_presets@i,w
  5390  09DF  1283               	bcf	3,5	;RP0=0, select bank2
  5391  09E0  1703               	bsf	3,6	;RP1=1, select bank2
  5392  09E1  008D               	movwf	13	;volatile
  5393                           
  5394                           ;nozzle.c: 907: EEDATA = *ptr;
  5395  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  5396  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  5397  09E4  0847               	movf	write_presets@ptr,w
  5398  09E5  0084               	movwf	4
  5399  09E6  1383               	bcf	3,7	;select IRP bank0
  5400  09E7  0800               	movf	0,w
  5401  09E8  1283               	bcf	3,5	;RP0=0, select bank2
  5402  09E9  1703               	bsf	3,6	;RP1=1, select bank2
  5403  09EA  008C               	movwf	12	;volatile
  5404                           
  5405                           ;nozzle.c: 908: EECON1bits.EEPGD = 0;
  5406  09EB  1683               	bsf	3,5	;RP0=1, select bank3
  5407  09EC  1703               	bsf	3,6	;RP1=1, select bank3
  5408  09ED  138C               	bcf	12,7	;volsfr
  5409                           
  5410                           ;nozzle.c: 909: EECON1bits.WREN = 1;
  5411  09EE  150C               	bsf	12,2	;volsfr
  5412                           
  5413                           ;nozzle.c: 910: EECON2 = 0x55;
  5414  09EF  3055               	movlw	85
  5415  09F0  008D               	movwf	13	;volsfr
  5416                           
  5417                           ;nozzle.c: 911: EECON2 = 0xaa;
  5418  09F1  30AA               	movlw	170
  5419  09F2  008D               	movwf	13	;volsfr
  5420                           
  5421                           ;nozzle.c: 912: EECON1bits.WR = 1;
  5422  09F3  148C               	bsf	12,1	;volsfr
  5423                           
  5424                           ;nozzle.c: 913: ptr++;
  5425  09F4  3001               	movlw	1
  5426  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  5427  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  5428  09F7  00C6               	movwf	??_write_presets
  5429  09F8  0846               	movf	??_write_presets,w
  5430  09F9  07C7               	addwf	write_presets@ptr,f
  5431  09FA                     l379:	
  5432                           ;nozzle.c: 916: {
  5433                           
  5434                           ;nozzle.c: 915: while(!PIR2bits.EEIF)
  5435                           
  5436  09FA  1E0D               	btfss	13,4	;volatile
  5437  09FB  29FA               	goto	l379
  5438  09FC  3001               	movlw	1
  5439  09FD  00C6               	movwf	??_write_presets
  5440  09FE  0846               	movf	??_write_presets,w
  5441  09FF  07C8               	addwf	write_presets@i,f
  5442  0A00  3008               	movlw	8
  5443  0A01  0248               	subwf	write_presets@i,w
  5444  0A02  1C03               	skipc
  5445  0A03  29DD               	goto	l377
  5446  0A04                     l378:	
  5447                           
  5448                           ;nozzle.c: 917: }
  5449                           ;nozzle.c: 918: }
  5450                           ;nozzle.c: 921: EECON1bits.WREN = 0;
  5451  0A04  1683               	bsf	3,5	;RP0=1, select bank3
  5452  0A05  1703               	bsf	3,6	;RP1=1, select bank3
  5453  0A06  110C               	bcf	12,2	;volsfr
  5454                           
  5455                           ;nozzle.c: 923: INTCONbits.GIE = 1;
  5456  0A07  178B               	bsf	11,7	;volatile
  5457  0A08  0008               	return
  5458  0A09                     __end_of_write_presets:	
  5459                           
  5460                           	psect	text19
  5461  0826                     __ptext19:	
  5462 ;; *************** function _disarm_motors *****************
  5463 ;; Defined at:
  5464 ;;		line 683 in file "nozzle.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;		None
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5478 ;;      Params:         0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0
  5480 ;;      Temps:          0       1       0       0       0
  5481 ;;      Totals:         0       1       0       0       0
  5482 ;;Total ram usage:        1 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    2
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_handle_ir_code
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _disarm_motors
  5494  0826                     _disarm_motors:	
  5495                           
  5496                           ;nozzle.c: 685: armed = 0;
  5497                           
  5498                           ;incstack = 0
  5499                           ; Regs used in _disarm_motors: [wreg+status,2+status,0]
  5500  0826  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0827  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0828  01BA               	clrf	_armed
  5503                           
  5504                           ;nozzle.c: 686: PORTD &= ~(uint8_t)0b00111111;
  5505  0829  30C0               	movlw	192
  5506  082A  00C6               	movwf	??_disarm_motors
  5507  082B  0846               	movf	??_disarm_motors,w
  5508  082C  0588               	andwf	8,f	;volatile
  5509                           
  5510                           ;nozzle.c: 687: motor_state = motor_idle;
  5511  082D  3024               	movlw	(low (fp__motor_idle-fpbase))& (0+255)
  5512  082E  00C6               	movwf	??_disarm_motors
  5513  082F  0846               	movf	??_disarm_motors,w
  5514  0830  00E9               	movwf	_motor_state
  5515  0831  0008               	return
  5516  0832                     __end_of_disarm_motors:	
  5517                           
  5518                           	psect	text20
  5519  099C                     __ptext20:	
  5520 ;; *************** function _arm_motors *****************
  5521 ;; Defined at:
  5522 ;;		line 663 in file "nozzle.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0
  5538 ;;      Temps:          0       1       0       0       0
  5539 ;;      Totals:         0       1       0       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    2
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_handle_ir_code
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function _arm_motors
  5552  099C                     _arm_motors:	
  5553                           
  5554                           ;nozzle.c: 665: armed = 1;
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _arm_motors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5558  099C  1283               	bcf	3,5	;RP0=0, select bank0
  5559  099D  1303               	bcf	3,6	;RP1=0, select bank0
  5560  099E  01BA               	clrf	_armed
  5561  099F  0ABA               	incf	_armed,f
  5562                           
  5563                           ;nozzle.c: 666: PORTDbits.RD7 = 1;
  5564  09A0  1788               	bsf	8,7	;volatile
  5565                           
  5566                           ;nozzle.c: 667: current_motor = 2;
  5567  09A1  3002               	movlw	2
  5568  09A2  00C6               	movwf	??_arm_motors
  5569  09A3  0846               	movf	??_arm_motors,w
  5570  09A4  00B6               	movwf	_current_motor
  5571                           
  5572                           ;nozzle.c: 669: tracking_state[2].target_position = 8;
  5573  09A5  3008               	movlw	8
  5574  09A6  00C6               	movwf	??_arm_motors
  5575  09A7  0846               	movf	??_arm_motors,w
  5576  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  5577  09A9  1303               	bcf	3,6	;RP1=0, select bank1
  5578  09AA  00C9               	movwf	(_tracking_state^(0+128)+31)
  5579                           
  5580                           ;nozzle.c: 670: tracking_state[2].changed = 0;
  5581  09AB  01CC               	clrf	(_tracking_state^(0+128)+34)
  5582                           
  5583                           ;nozzle.c: 672: tracking_state[1].target_position = 17;
  5584  09AC  3011               	movlw	17
  5585  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  5586  09AE  1303               	bcf	3,6	;RP1=0, select bank0
  5587  09AF  00C6               	movwf	??_arm_motors
  5588  09B0  0846               	movf	??_arm_motors,w
  5589  09B1  1683               	bsf	3,5	;RP0=1, select bank1
  5590  09B2  1303               	bcf	3,6	;RP1=0, select bank1
  5591  09B3  00BD               	movwf	(_tracking_state^(0+128)+19)
  5592                           
  5593                           ;nozzle.c: 673: tracking_state[1].changed = 0;
  5594  09B4  01C0               	clrf	(_tracking_state^(0+128)+22)
  5595                           
  5596                           ;nozzle.c: 675: tracking_state[0].target_position = 22 + step_to_encoders[0 * 3 + 0];
  5597  09B5  3012               	movlw	low (_step_to_encoders| (0+32768))
  5598  09B6  0084               	movwf	4
  5599  09B7  3081               	movlw	high (_step_to_encoders| (0+32768))
  5600  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  5601  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  5602  09BA  00FF               	movwf	127
  5603  09BB  120A  118A  2100   	fcall	stringtab
  5604  09BE  3E16               	addlw	22
  5605  09BF  00C6               	movwf	??_arm_motors
  5606  09C0  0846               	movf	??_arm_motors,w
  5607  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  5608  09C2  1303               	bcf	3,6	;RP1=0, select bank1
  5609  09C3  00B1               	movwf	(_tracking_state^(0+128)+7)
  5610                           
  5611                           ;nozzle.c: 676: tracking_state[0].changed = 0;
  5612  09C4  01B4               	clrf	(_tracking_state^(0+128)+10)
  5613                           
  5614                           ;nozzle.c: 678: nozzle_pitch = 0;
  5615  09C5  1283               	bcf	3,5	;RP0=0, select bank0
  5616  09C6  1303               	bcf	3,6	;RP1=0, select bank0
  5617  09C7  01C5               	clrf	_nozzle_pitch
  5618                           
  5619                           ;nozzle.c: 679: nozzle_angle = 22;
  5620  09C8  3016               	movlw	22
  5621  09C9  00C6               	movwf	??_arm_motors
  5622  09CA  0846               	movf	??_arm_motors,w
  5623  09CB  00B3               	movwf	_nozzle_angle
  5624                           
  5625                           ;nozzle.c: 680: motor_state = motor_home1;
  5626  09CC  3021               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  5627  09CD  00C6               	movwf	??_arm_motors
  5628  09CE  0846               	movf	??_arm_motors,w
  5629  09CF  00E9               	movwf	_motor_state
  5630  09D0  0008               	return
  5631  09D1                     __end_of_arm_motors:	
  5632                           
  5633                           	psect	text21
  5634  0873                     __ptext21:	
  5635 ;; *************** function _do_preset_save1 *****************
  5636 ;; Defined at:
  5637 ;;		line 875 in file "nozzle.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      void 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, pclath, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5651 ;;      Params:         0       0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0
  5653 ;;      Temps:          0       1       0       0       0
  5654 ;;      Totals:         0       1       0       0       0
  5655 ;;Total ram usage:        1 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    3
  5658 ;; This function calls:
  5659 ;;		_motors_tracking
  5660 ;; This function is called by:
  5661 ;;		_handle_preset_button
  5662 ;;		_main
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _do_preset_save1
  5668  0873                     _do_preset_save1:	
  5669                           
  5670                           ;nozzle.c: 877: if(!motors_tracking())
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _do_preset_save1: [wreg+status,2+status,0+pclath+cstack]
  5674  0873  120A  158A  2032  120A  158A  	fcall	_motors_tracking
  5675  0878  3A00               	xorlw	0
  5676  0879  1D03               	skipz
  5677  087A  0008               	return
  5678                           
  5679                           ;nozzle.c: 878: {
  5680                           ;nozzle.c: 879: preset_delay = (100 / 2);
  5681  087B  3032               	movlw	50
  5682  087C  1283               	bcf	3,5	;RP0=0, select bank0
  5683  087D  1303               	bcf	3,6	;RP1=0, select bank0
  5684  087E  00C6               	movwf	??_do_preset_save1
  5685  087F  0846               	movf	??_do_preset_save1,w
  5686  0880  00AE               	movwf	_preset_delay
  5687                           
  5688                           ;nozzle.c: 880: preset_state = do_preset_save2;
  5689  0881  300C               	movlw	(low (fp__do_preset_save2-fpbase))& (0+255)
  5690  0882  00C6               	movwf	??_do_preset_save1
  5691  0883  0846               	movf	??_do_preset_save1,w
  5692  0884  00B0               	movwf	_preset_state
  5693  0885  0008               	return
  5694  0886                     __end_of_do_preset_save1:	
  5695                           
  5696                           	psect	text22
  5697  08DB                     __ptext22:	
  5698 ;; *************** function _do_preset_center *****************
  5699 ;; Defined at:
  5700 ;;		line 847 in file "nozzle.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5714 ;;      Params:         0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0
  5716 ;;      Temps:          0       1       0       0       0
  5717 ;;      Totals:         0       1       0       0       0
  5718 ;;Total ram usage:        1 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    4
  5721 ;; This function calls:
  5722 ;;		_motors_tracking
  5723 ;;		_update_motors
  5724 ;; This function is called by:
  5725 ;;		_handle_preset_button
  5726 ;;		_main
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _do_preset_center
  5732  08DB                     _do_preset_center:	
  5733                           
  5734                           ;nozzle.c: 849: if(!motors_tracking())
  5735                           
  5736                           ;incstack = 0
  5737                           ; Regs used in _do_preset_center: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5738  08DB  120A  158A  2032  120A  158A  	fcall	_motors_tracking
  5739  08E0  3A00               	xorlw	0
  5740  08E1  1D03               	skipz
  5741  08E2  0008               	return
  5742                           
  5743                           ;nozzle.c: 850: {
  5744                           ;nozzle.c: 852: if(nozzle_pitch > 0)
  5745  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  5746  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  5747  08E5  0845               	movf	_nozzle_pitch,w
  5748  08E6  3A80               	xorlw	128
  5749  08E7  3E7F               	addlw	-129
  5750  08E8  1C03               	skipc
  5751  08E9  28F2               	goto	l3364
  5752                           
  5753                           ;nozzle.c: 853: {
  5754                           ;nozzle.c: 854: nozzle_pitch--;
  5755  08EA  30FF               	movlw	255
  5756  08EB  00CE               	movwf	??_do_preset_center
  5757  08EC  084E               	movf	??_do_preset_center,w
  5758  08ED  07C5               	addwf	_nozzle_pitch,f
  5759                           
  5760                           ;nozzle.c: 855: update_motors();
  5761  08EE  120A  158A  2630   	fcall	_update_motors
  5762                           
  5763                           ;nozzle.c: 856: }
  5764  08F1  0008               	return
  5765  08F2                     l3364:	
  5766                           
  5767                           ;nozzle.c: 857: else
  5768                           ;nozzle.c: 858: {
  5769                           ;nozzle.c: 859: preset_delay = (100 / 2);
  5770  08F2  3032               	movlw	50
  5771  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  5772  08F4  1303               	bcf	3,6	;RP1=0, select bank0
  5773  08F5  00CE               	movwf	??_do_preset_center
  5774  08F6  084E               	movf	??_do_preset_center,w
  5775  08F7  00AE               	movwf	_preset_delay
  5776                           
  5777                           ;nozzle.c: 860: preset_state = do_preset_delay1;
  5778  08F8  3018               	movlw	(low (fp__do_preset_delay1-fpbase))& (0+255)
  5779  08F9  00CE               	movwf	??_do_preset_center
  5780  08FA  084E               	movf	??_do_preset_center,w
  5781  08FB  00B0               	movwf	_preset_state
  5782  08FC  0008               	return
  5783  08FD                     __end_of_do_preset_center:	
  5784                           
  5785                           	psect	text23
  5786  07F6                     __ptext23:	
  5787 ;; *************** function _do_preset_delay1 *****************
  5788 ;; Defined at:
  5789 ;;		line 839 in file "nozzle.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0
  5805 ;;      Temps:          0       1       0       0       0
  5806 ;;      Totals:         0       1       0       0       0
  5807 ;;Total ram usage:        1 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    2
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_do_preset_center
  5814 ;;		_main
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function _do_preset_delay1
  5820  07F6                     _do_preset_delay1:	
  5821                           
  5822                           ;nozzle.c: 841: if(preset_delay == 0)
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in _do_preset_delay1: [wreg+status,2+status,0]
  5826  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  5827  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  5828  07F8  082E               	movf	_preset_delay,w
  5829  07F9  1D03               	btfss	3,2
  5830  07FA  0008               	return
  5831                           
  5832                           ;nozzle.c: 842: {
  5833                           ;nozzle.c: 843: preset_state = do_preset_angle;
  5834  07FB  3015               	movlw	(low (fp__do_preset_angle-fpbase))& (0+255)
  5835  07FC  00C6               	movwf	??_do_preset_delay1
  5836  07FD  0846               	movf	??_do_preset_delay1,w
  5837  07FE  00B0               	movwf	_preset_state
  5838  07FF  0008               	return
  5839  0800                     __end_of_do_preset_delay1:	
  5840                           
  5841                           	psect	text24
  5842  0A82                     __ptext24:	
  5843 ;; *************** function _do_preset_angle *****************
  5844 ;; Defined at:
  5845 ;;		line 813 in file "nozzle.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  want_angle      1    9[BANK0 ] char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5859 ;;      Params:         0       0       0       0       0
  5860 ;;      Locals:         0       1       0       0       0
  5861 ;;      Temps:          0       1       0       0       0
  5862 ;;      Totals:         0       2       0       0       0
  5863 ;;Total ram usage:        2 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    4
  5866 ;; This function calls:
  5867 ;;		_motors_tracking
  5868 ;;		_update_motors
  5869 ;; This function is called by:
  5870 ;;		_do_preset_delay1
  5871 ;;		_main
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function _do_preset_angle
  5877  0A82                     _do_preset_angle:	
  5878                           
  5879                           ;nozzle.c: 815: if(!motors_tracking())
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _do_preset_angle: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5883  0A82  120A  158A  2032  120A  158A  	fcall	_motors_tracking
  5884  0A87  3A00               	xorlw	0
  5885  0A88  1D03               	skipz
  5886  0A89  0008               	return
  5887                           
  5888                           ;nozzle.c: 816: {
  5889                           ;nozzle.c: 818: int8_t want_angle = presets[current_preset].angle;
  5890  0A8A  1403               	setc
  5891  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0A8D  0D31               	rlf	_current_preset,w
  5894  0A8E  3E3D               	addlw	(low (_presets| 0))& (0+255)
  5895  0A8F  0084               	movwf	4
  5896  0A90  1383               	bcf	3,7	;select IRP bank0
  5897  0A91  0800               	movf	0,w
  5898  0A92  00CE               	movwf	??_do_preset_angle
  5899  0A93  084E               	movf	??_do_preset_angle,w
  5900  0A94  00CF               	movwf	do_preset_angle@want_angle
  5901                           
  5902                           ;nozzle.c: 819: if(want_angle > nozzle_angle)
  5903  0A95  0833               	movf	_nozzle_angle,w
  5904  0A96  3A80               	xorlw	128
  5905  0A97  00CE               	movwf	??_do_preset_angle
  5906  0A98  084F               	movf	do_preset_angle@want_angle,w
  5907  0A99  3A80               	xorlw	128
  5908  0A9A  02CE               	subwf	??_do_preset_angle,f
  5909  0A9B  1803               	skipnc
  5910  0A9C  2AA5               	goto	l3344
  5911                           
  5912                           ;nozzle.c: 820: {
  5913                           ;nozzle.c: 821: nozzle_angle++;
  5914  0A9D  3001               	movlw	1
  5915  0A9E  00CE               	movwf	??_do_preset_angle
  5916  0A9F  084E               	movf	??_do_preset_angle,w
  5917  0AA0  07B3               	addwf	_nozzle_angle,f
  5918                           
  5919                           ;nozzle.c: 822: update_motors();
  5920  0AA1  120A  158A  2630   	fcall	_update_motors
  5921                           
  5922                           ;nozzle.c: 823: }
  5923  0AA4  0008               	return
  5924  0AA5                     l3344:	
  5925                           
  5926                           ;nozzle.c: 824: else
  5927                           ;nozzle.c: 825: if(want_angle < nozzle_angle)
  5928  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0AA6  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0AA7  084F               	movf	do_preset_angle@want_angle,w
  5931  0AA8  3A80               	xorlw	128
  5932  0AA9  00CE               	movwf	??_do_preset_angle
  5933  0AAA  0833               	movf	_nozzle_angle,w
  5934  0AAB  3A80               	xorlw	128
  5935  0AAC  02CE               	subwf	??_do_preset_angle,f
  5936  0AAD  1803               	skipnc
  5937  0AAE  2AB7               	goto	l3350
  5938                           
  5939                           ;nozzle.c: 826: {
  5940                           ;nozzle.c: 827: nozzle_angle--;
  5941  0AAF  30FF               	movlw	255
  5942  0AB0  00CE               	movwf	??_do_preset_angle
  5943  0AB1  084E               	movf	??_do_preset_angle,w
  5944  0AB2  07B3               	addwf	_nozzle_angle,f
  5945                           
  5946                           ;nozzle.c: 828: update_motors();
  5947  0AB3  120A  158A  2630   	fcall	_update_motors
  5948                           
  5949                           ;nozzle.c: 829: }
  5950  0AB6  0008               	return
  5951  0AB7                     l3350:	
  5952                           
  5953                           ;nozzle.c: 830: else
  5954                           ;nozzle.c: 831: {
  5955                           ;nozzle.c: 833: preset_delay = (100 / 2);
  5956  0AB7  3032               	movlw	50
  5957  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0ABA  00CE               	movwf	??_do_preset_angle
  5960  0ABB  084E               	movf	??_do_preset_angle,w
  5961  0ABC  00AE               	movwf	_preset_delay
  5962                           
  5963                           ;nozzle.c: 834: preset_state = do_preset_delay2;
  5964  0ABD  3012               	movlw	(low (fp__do_preset_delay2-fpbase))& (0+255)
  5965  0ABE  00CE               	movwf	??_do_preset_angle
  5966  0ABF  084E               	movf	??_do_preset_angle,w
  5967  0AC0  00B0               	movwf	_preset_state
  5968  0AC1  0008               	return
  5969  0AC2                     __end_of_do_preset_angle:	
  5970                           
  5971                           	psect	text25
  5972  081C                     __ptext25:	
  5973 ;; *************** function _do_preset_delay2 *****************
  5974 ;; Defined at:
  5975 ;;		line 805 in file "nozzle.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5989 ;;      Params:         0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0
  5991 ;;      Temps:          0       1       0       0       0
  5992 ;;      Totals:         0       1       0       0       0
  5993 ;;Total ram usage:        1 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    2
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_do_preset_angle
  6000 ;;		_main
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           
  6005                           ;psect for function _do_preset_delay2
  6006  081C                     _do_preset_delay2:	
  6007                           
  6008                           ;nozzle.c: 807: if(preset_delay == 0)
  6009                           
  6010                           ;incstack = 0
  6011                           ; Regs used in _do_preset_delay2: [wreg+status,2+status,0]
  6012  081C  1283               	bcf	3,5	;RP0=0, select bank0
  6013  081D  1303               	bcf	3,6	;RP1=0, select bank0
  6014  081E  082E               	movf	_preset_delay,w
  6015  081F  1D03               	btfss	3,2
  6016  0820  0008               	return
  6017                           
  6018                           ;nozzle.c: 808: {
  6019                           ;nozzle.c: 809: preset_state = do_preset_pitch;
  6020  0821  300F               	movlw	(low (fp__do_preset_pitch-fpbase))& (0+255)
  6021  0822  00C6               	movwf	??_do_preset_delay2
  6022  0823  0846               	movf	??_do_preset_delay2,w
  6023  0824  00B0               	movwf	_preset_state
  6024  0825  0008               	return
  6025  0826                     __end_of_do_preset_delay2:	
  6026                           
  6027                           	psect	text26
  6028  0A09                     __ptext26:	
  6029 ;; *************** function _do_preset_pitch *****************
  6030 ;; Defined at:
  6031 ;;		line 780 in file "nozzle.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  want_pitch      1   10[BANK0 ] char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6045 ;;      Params:         0       0       0       0       0
  6046 ;;      Locals:         0       1       0       0       0
  6047 ;;      Temps:          0       2       0       0       0
  6048 ;;      Totals:         0       3       0       0       0
  6049 ;;Total ram usage:        3 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    4
  6052 ;; This function calls:
  6053 ;;		_motors_tracking
  6054 ;;		_update_motors
  6055 ;; This function is called by:
  6056 ;;		_do_preset_delay2
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _do_preset_pitch
  6063  0A09                     _do_preset_pitch:	
  6064                           
  6065                           ;nozzle.c: 782: if(!motors_tracking())
  6066                           
  6067                           ;incstack = 0
  6068                           ; Regs used in _do_preset_pitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6069  0A09  120A  158A  2032  120A  158A  	fcall	_motors_tracking
  6070  0A0E  3A00               	xorlw	0
  6071  0A0F  1D03               	skipz
  6072  0A10  0008               	return
  6073                           
  6074                           ;nozzle.c: 783: {
  6075                           ;nozzle.c: 785: int8_t want_pitch = presets[current_preset].pitch;
  6076  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0A12  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0A13  0831               	movf	_current_preset,w
  6079  0A14  00CE               	movwf	??_do_preset_pitch
  6080  0A15  074E               	addwf	??_do_preset_pitch,w
  6081  0A16  3E3D               	addlw	(low (_presets| 0))& (0+255)
  6082  0A17  0084               	movwf	4
  6083  0A18  1383               	bcf	3,7	;select IRP bank0
  6084  0A19  0800               	movf	0,w
  6085  0A1A  00CF               	movwf	??_do_preset_pitch+1
  6086  0A1B  084F               	movf	??_do_preset_pitch+1,w
  6087  0A1C  00D0               	movwf	do_preset_pitch@want_pitch
  6088                           
  6089                           ;nozzle.c: 786: if(want_pitch > nozzle_pitch)
  6090  0A1D  0845               	movf	_nozzle_pitch,w
  6091  0A1E  3A80               	xorlw	128
  6092  0A1F  00CE               	movwf	??_do_preset_pitch
  6093  0A20  0850               	movf	do_preset_pitch@want_pitch,w
  6094  0A21  3A80               	xorlw	128
  6095  0A22  02CE               	subwf	??_do_preset_pitch,f
  6096  0A23  1803               	skipnc
  6097  0A24  2A2D               	goto	l3322
  6098                           
  6099                           ;nozzle.c: 787: {
  6100                           ;nozzle.c: 788: nozzle_pitch++;
  6101  0A25  3001               	movlw	1
  6102  0A26  00CE               	movwf	??_do_preset_pitch
  6103  0A27  084E               	movf	??_do_preset_pitch,w
  6104  0A28  07C5               	addwf	_nozzle_pitch,f
  6105                           
  6106                           ;nozzle.c: 789: update_motors();
  6107  0A29  120A  158A  2630   	fcall	_update_motors
  6108                           
  6109                           ;nozzle.c: 790: }
  6110  0A2C  0008               	return
  6111  0A2D                     l3322:	
  6112                           
  6113                           ;nozzle.c: 791: else
  6114                           ;nozzle.c: 792: if(want_pitch < nozzle_pitch)
  6115  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  6116  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  6117  0A2F  0850               	movf	do_preset_pitch@want_pitch,w
  6118  0A30  3A80               	xorlw	128
  6119  0A31  00CE               	movwf	??_do_preset_pitch
  6120  0A32  0845               	movf	_nozzle_pitch,w
  6121  0A33  3A80               	xorlw	128
  6122  0A34  02CE               	subwf	??_do_preset_pitch,f
  6123  0A35  1803               	skipnc
  6124  0A36  2A3F               	goto	l3328
  6125                           
  6126                           ;nozzle.c: 793: {
  6127                           ;nozzle.c: 794: nozzle_pitch--;
  6128  0A37  30FF               	movlw	255
  6129  0A38  00CE               	movwf	??_do_preset_pitch
  6130  0A39  084E               	movf	??_do_preset_pitch,w
  6131  0A3A  07C5               	addwf	_nozzle_pitch,f
  6132                           
  6133                           ;nozzle.c: 795: update_motors();
  6134  0A3B  120A  158A  2630   	fcall	_update_motors
  6135                           
  6136                           ;nozzle.c: 796: }
  6137  0A3E  0008               	return
  6138  0A3F                     l3328:	
  6139                           
  6140                           ;nozzle.c: 797: else
  6141                           ;nozzle.c: 798: {
  6142                           ;nozzle.c: 800: preset_state = 0;
  6143  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0A41  01B0               	clrf	_preset_state
  6146  0A42  0008               	return
  6147  0A43                     __end_of_do_preset_pitch:	
  6148                           
  6149                           	psect	text27
  6150  0850                     __ptext27:	
  6151 ;; *************** function _do_preset_save2 *****************
  6152 ;; Defined at:
  6153 ;;		line 865 in file "nozzle.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6167 ;;      Params:         0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0
  6169 ;;      Temps:          0       1       0       0       0
  6170 ;;      Totals:         0       1       0       0       0
  6171 ;;Total ram usage:        1 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    4
  6174 ;; This function calls:
  6175 ;;		_update_motors
  6176 ;; This function is called by:
  6177 ;;		_do_preset_save1
  6178 ;;		_main
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _do_preset_save2
  6184  0850                     _do_preset_save2:	
  6185                           
  6186                           ;nozzle.c: 867: if(preset_delay == 0)
  6187                           
  6188                           ;incstack = 0
  6189                           ; Regs used in _do_preset_save2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6190  0850  1283               	bcf	3,5	;RP0=0, select bank0
  6191  0851  1303               	bcf	3,6	;RP1=0, select bank0
  6192  0852  082E               	movf	_preset_delay,w
  6193  0853  1D03               	btfss	3,2
  6194  0854  0008               	return
  6195                           
  6196                           ;nozzle.c: 868: {
  6197                           ;nozzle.c: 869: nozzle_angle = orig_nozzle_angle;
  6198  0855  082F               	movf	_orig_nozzle_angle,w
  6199  0856  00CE               	movwf	??_do_preset_save2
  6200  0857  084E               	movf	??_do_preset_save2,w
  6201  0858  00B3               	movwf	_nozzle_angle
  6202                           
  6203                           ;nozzle.c: 870: update_motors();
  6204  0859  120A  158A  2630   	fcall	_update_motors
  6205                           
  6206                           ;nozzle.c: 871: preset_state = 0;
  6207  085C  1283               	bcf	3,5	;RP0=0, select bank0
  6208  085D  1303               	bcf	3,6	;RP1=0, select bank0
  6209  085E  01B0               	clrf	_preset_state
  6210  085F  0008               	return
  6211  0860                     __end_of_do_preset_save2:	
  6212                           
  6213                           	psect	text28
  6214  0E30                     __ptext28:	
  6215 ;; *************** function _update_motors *****************
  6216 ;; Defined at:
  6217 ;;		line 691 in file "nozzle.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  diff            1    7[BANK0 ] char 
  6222 ;;  diff            1    6[BANK0 ] char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6232 ;;      Params:         0       0       0       0       0
  6233 ;;      Locals:         0       2       0       0       0
  6234 ;;      Temps:          0       2       0       0       0
  6235 ;;      Totals:         0       4       0       0       0
  6236 ;;Total ram usage:        4 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    3
  6239 ;; This function calls:
  6240 ;;		___bmul
  6241 ;; This function is called by:
  6242 ;;		_do_preset_pitch
  6243 ;;		_do_preset_angle
  6244 ;;		_do_preset_center
  6245 ;;		_do_preset_save2
  6246 ;;		_handle_preset_button
  6247 ;;		_handle_ir_code
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _update_motors
  6253  0E30                     _update_motors:	
  6254                           
  6255                           ;nozzle.c: 702: if(nozzle_pitch > 24)
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _update_motors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6259  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  6260  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  6261  0E32  0845               	movf	_nozzle_pitch,w
  6262  0E33  3A80               	xorlw	128
  6263  0E34  3E67               	addlw	-153
  6264  0E35  1C03               	skipc
  6265  0E36  2E3B               	goto	l2022
  6266                           
  6267                           ;nozzle.c: 703: {
  6268                           ;nozzle.c: 704: nozzle_pitch = 24;
  6269  0E37  3018               	movlw	24
  6270  0E38  00CA               	movwf	??_update_motors
  6271  0E39  084A               	movf	??_update_motors,w
  6272  0E3A  00C5               	movwf	_nozzle_pitch
  6273  0E3B                     l2022:	
  6274                           
  6275                           ;nozzle.c: 705: }
  6276                           ;nozzle.c: 706: if(nozzle_pitch < 0)
  6277  0E3B  1BC5               	btfsc	_nozzle_pitch,7
  6278                           
  6279                           ;nozzle.c: 707: {
  6280                           ;nozzle.c: 708: nozzle_pitch = 0;
  6281  0E3C  01C5               	clrf	_nozzle_pitch
  6282                           
  6283                           ;nozzle.c: 709: }
  6284                           ;nozzle.c: 711: if(nozzle_angle > 39)
  6285  0E3D  0833               	movf	_nozzle_angle,w
  6286  0E3E  3A80               	xorlw	128
  6287  0E3F  3E58               	addlw	-168
  6288  0E40  1C03               	skipc
  6289  0E41  2E46               	goto	l2030
  6290                           
  6291                           ;nozzle.c: 712: {
  6292                           ;nozzle.c: 713: nozzle_angle = 39;
  6293  0E42  3027               	movlw	39
  6294  0E43  00CA               	movwf	??_update_motors
  6295  0E44  084A               	movf	??_update_motors,w
  6296  0E45  00B3               	movwf	_nozzle_angle
  6297  0E46                     l2030:	
  6298                           
  6299                           ;nozzle.c: 714: }
  6300                           ;nozzle.c: 715: if(nozzle_angle < 0)
  6301  0E46  1BB3               	btfsc	_nozzle_angle,7
  6302                           
  6303                           ;nozzle.c: 716: {
  6304                           ;nozzle.c: 717: nozzle_angle = 0;
  6305  0E47  01B3               	clrf	_nozzle_angle
  6306                           
  6307                           ;nozzle.c: 718: }
  6308                           ;nozzle.c: 721: tracking_state[0].target_position = nozzle_angle +
  6309                           ;nozzle.c: 722: step_to_encoders[nozzle_pitch * 3 + 0];
  6310  0E48  3003               	movlw	3
  6311  0E49  00CA               	movwf	??_update_motors
  6312  0E4A  084A               	movf	??_update_motors,w
  6313  0E4B  00C6               	movwf	___bmul@multiplicand
  6314  0E4C  0845               	movf	_nozzle_pitch,w
  6315  0E4D  120A  158A  2060  120A  158A  	fcall	___bmul
  6316  0E52  3E12               	addlw	low (_step_to_encoders| (0+32768))
  6317  0E53  0084               	movwf	4
  6318  0E54  3081               	movlw	high (_step_to_encoders| (0+32768))
  6319  0E55  1803               	skipnc
  6320  0E56  3E01               	addlw	1
  6321  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  6322  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  6323  0E59  00FF               	movwf	127
  6324  0E5A  120A  118A  2100  120A  158A  	fcall	stringtab
  6325  0E5F  0733               	addwf	_nozzle_angle,w
  6326  0E60  00CB               	movwf	??_update_motors+1
  6327  0E61  084B               	movf	??_update_motors+1,w
  6328  0E62  1683               	bsf	3,5	;RP0=1, select bank1
  6329  0E63  1303               	bcf	3,6	;RP1=0, select bank1
  6330  0E64  00B1               	movwf	(_tracking_state^(0+128)+7)
  6331                           
  6332                           ;nozzle.c: 723: tracking_state[1].target_position =
  6333                           ;nozzle.c: 724: step_to_encoders[nozzle_pitch * 3 + 1];
  6334  0E65  3003               	movlw	3
  6335  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  6336  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  6337  0E68  00CA               	movwf	??_update_motors
  6338  0E69  084A               	movf	??_update_motors,w
  6339  0E6A  00C6               	movwf	___bmul@multiplicand
  6340  0E6B  0845               	movf	_nozzle_pitch,w
  6341  0E6C  120A  158A  2060  120A  158A  	fcall	___bmul
  6342  0E71  3E01               	addlw	1
  6343  0E72  3E12               	addlw	low (_step_to_encoders| (0+32768))
  6344  0E73  0084               	movwf	4
  6345  0E74  3081               	movlw	high (_step_to_encoders| (0+32768))
  6346  0E75  1803               	skipnc
  6347  0E76  3E01               	addlw	1
  6348  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0E79  00FF               	movwf	127
  6351  0E7A  120A  118A  2100  120A  158A  	fcall	stringtab
  6352  0E7F  00CB               	movwf	??_update_motors+1
  6353  0E80  084B               	movf	??_update_motors+1,w
  6354  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  6355  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  6356  0E83  00BD               	movwf	(_tracking_state^(0+128)+19)
  6357                           
  6358                           ;nozzle.c: 725: tracking_state[2].target_position =
  6359                           ;nozzle.c: 726: step_to_encoders[nozzle_pitch * 3 + 2];
  6360  0E84  3003               	movlw	3
  6361  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  6363  0E87  00CA               	movwf	??_update_motors
  6364  0E88  084A               	movf	??_update_motors,w
  6365  0E89  00C6               	movwf	___bmul@multiplicand
  6366  0E8A  0845               	movf	_nozzle_pitch,w
  6367  0E8B  120A  158A  2060  120A  158A  	fcall	___bmul
  6368  0E90  3E02               	addlw	2
  6369  0E91  3E12               	addlw	low (_step_to_encoders| (0+32768))
  6370  0E92  0084               	movwf	4
  6371  0E93  3081               	movlw	high (_step_to_encoders| (0+32768))
  6372  0E94  1803               	skipnc
  6373  0E95  3E01               	addlw	1
  6374  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0E98  00FF               	movwf	127
  6377  0E99  120A  118A  2100  120A  158A  	fcall	stringtab
  6378  0E9E  00CB               	movwf	??_update_motors+1
  6379  0E9F  084B               	movf	??_update_motors+1,w
  6380  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  6381  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  6382  0EA2  00C9               	movwf	(_tracking_state^(0+128)+31)
  6383                           
  6384                           ;nozzle.c: 728: if(tracking_state[0].target_position < tracking_state[0].min)
  6385  0EA3  0831               	movf	(_tracking_state^(0+128)+7),w
  6386  0EA4  3A80               	xorlw	128
  6387  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0EA7  00CA               	movwf	??_update_motors
  6390  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  6391  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  6392  0EAA  0832               	movf	(_tracking_state^(0+128)+8),w
  6393  0EAB  3A80               	xorlw	128
  6394  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  6395  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  6396  0EAE  02CA               	subwf	??_update_motors,f
  6397  0EAF  1803               	skipnc
  6398  0EB0  2EC7               	goto	l2044
  6399                           
  6400                           ;nozzle.c: 729: {
  6401                           ;nozzle.c: 730: int8_t diff = tracking_state[0].min - tracking_state[0].target_position;
  6402  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  6403  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  6404  0EB3  0331               	decf	(_tracking_state^(0+128)+7),w
  6405  0EB4  3AFF               	xorlw	255
  6406  0EB5  0732               	addwf	(_tracking_state^(0+128)+8),w
  6407  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  6409  0EB8  00CA               	movwf	??_update_motors
  6410  0EB9  084A               	movf	??_update_motors,w
  6411  0EBA  00CC               	movwf	update_motors@diff
  6412                           
  6413                           ;nozzle.c: 731: tracking_state[0].target_position += diff;
  6414  0EBB  084C               	movf	update_motors@diff,w
  6415  0EBC  00CA               	movwf	??_update_motors
  6416  0EBD  084A               	movf	??_update_motors,w
  6417  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  6418  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  6419  0EC0  07B1               	addwf	(_tracking_state^(0+128)+7),f
  6420                           
  6421                           ;nozzle.c: 733: nozzle_angle += diff;
  6422  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  6423  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  6424  0EC3  084C               	movf	update_motors@diff,w
  6425  0EC4  00CA               	movwf	??_update_motors
  6426  0EC5  084A               	movf	??_update_motors,w
  6427  0EC6  07B3               	addwf	_nozzle_angle,f
  6428  0EC7                     l2044:	
  6429                           
  6430                           ;nozzle.c: 734: }
  6431                           ;nozzle.c: 735: if(tracking_state[0].target_position > tracking_state[0].max)
  6432  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  6433  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  6434  0EC9  0833               	movf	(_tracking_state^(0+128)+9),w
  6435  0ECA  3A80               	xorlw	128
  6436  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  6437  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  6438  0ECD  00CA               	movwf	??_update_motors
  6439  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  6440  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  6441  0ED0  0831               	movf	(_tracking_state^(0+128)+7),w
  6442  0ED1  3A80               	xorlw	128
  6443  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  6445  0ED4  02CA               	subwf	??_update_motors,f
  6446  0ED5  1803               	skipnc
  6447  0ED6  2EE9               	goto	l321
  6448                           
  6449                           ;nozzle.c: 736: {
  6450                           ;nozzle.c: 737: int8_t diff = tracking_state[0].target_position - tracking_state[0].max;
  6451  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  6452  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  6453  0ED9  0333               	decf	(_tracking_state^(0+128)+9),w
  6454  0EDA  3AFF               	xorlw	255
  6455  0EDB  0731               	addwf	(_tracking_state^(0+128)+7),w
  6456  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  6458  0EDE  00CA               	movwf	??_update_motors
  6459  0EDF  084A               	movf	??_update_motors,w
  6460  0EE0  00CD               	movwf	update_motors@diff_551
  6461                           
  6462                           ;nozzle.c: 738: tracking_state[0].target_position -= diff;
  6463  0EE1  084D               	movf	update_motors@diff_551,w
  6464  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  6465  0EE3  1303               	bcf	3,6	;RP1=0, select bank1
  6466  0EE4  02B1               	subwf	(_tracking_state^(0+128)+7),f
  6467                           
  6468                           ;nozzle.c: 740: nozzle_angle -= diff;
  6469  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  6471  0EE7  084D               	movf	update_motors@diff_551,w
  6472  0EE8  02B3               	subwf	_nozzle_angle,f
  6473  0EE9                     l321:	
  6474                           
  6475                           ;nozzle.c: 741: }
  6476                           ;nozzle.c: 744: if(tracking_state[0].changed < 0xff)
  6477  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  6478  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
  6479  0EEB  0A34               	incf	(_tracking_state^(0+128)+10),w
  6480  0EEC  1903               	btfsc	3,2
  6481  0EED  2EF6               	goto	l322
  6482                           
  6483                           ;nozzle.c: 745: {
  6484                           ;nozzle.c: 746: tracking_state[0].changed++;
  6485  0EEE  3001               	movlw	1
  6486  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0EF1  00CA               	movwf	??_update_motors
  6489  0EF2  084A               	movf	??_update_motors,w
  6490  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  6491  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  6492  0EF5  07B4               	addwf	(_tracking_state^(0+128)+10),f
  6493  0EF6                     l322:	
  6494                           
  6495                           ;nozzle.c: 747: }
  6496                           ;nozzle.c: 748: if(tracking_state[1].changed < 0xff)
  6497  0EF6  0A40               	incf	(_tracking_state^(0+128)+22),w
  6498  0EF7  1903               	btfsc	3,2
  6499  0EF8  2F01               	goto	l323
  6500                           
  6501                           ;nozzle.c: 749: {
  6502                           ;nozzle.c: 750: tracking_state[1].changed++;
  6503  0EF9  3001               	movlw	1
  6504  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  6505  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  6506  0EFC  00CA               	movwf	??_update_motors
  6507  0EFD  084A               	movf	??_update_motors,w
  6508  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  6509  0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  6510  0F00  07C0               	addwf	(_tracking_state^(0+128)+22),f
  6511  0F01                     l323:	
  6512                           
  6513                           ;nozzle.c: 751: }
  6514                           ;nozzle.c: 752: if(tracking_state[2].changed < 0xff)
  6515  0F01  0A4C               	incf	(_tracking_state^(0+128)+34),w
  6516  0F02  1903               	btfsc	3,2
  6517  0F03  0008               	return
  6518                           
  6519                           ;nozzle.c: 753: {
  6520                           ;nozzle.c: 754: tracking_state[2].changed++;
  6521  0F04  3001               	movlw	1
  6522  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  6524  0F07  00CA               	movwf	??_update_motors
  6525  0F08  084A               	movf	??_update_motors,w
  6526  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  6527  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  6528  0F0B  07CC               	addwf	(_tracking_state^(0+128)+34),f
  6529  0F0C  0008               	return
  6530  0F0D                     __end_of_update_motors:	
  6531                           
  6532                           	psect	text29
  6533  0860                     __ptext29:	
  6534 ;; *************** function ___bmul *****************
  6535 ;; Defined at:
  6536 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/Umul8.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  multiplier      1    wreg     unsigned char 
  6539 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  multiplier      1    3[BANK0 ] unsigned char 
  6542 ;;  product         1    2[BANK0 ] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      unsigned char 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6552 ;;      Params:         0       1       0       0       0
  6553 ;;      Locals:         0       2       0       0       0
  6554 ;;      Temps:          0       1       0       0       0
  6555 ;;      Totals:         0       4       0       0       0
  6556 ;;Total ram usage:        4 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    2
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_motor_tracking
  6563 ;;		_motor_home6
  6564 ;;		_motor_home5
  6565 ;;		_motor_home4
  6566 ;;		_motor_home3
  6567 ;;		_motor_home2
  6568 ;;		_motor_home1
  6569 ;;		_update_motors
  6570 ;;		_main
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           
  6575                           ;psect for function ___bmul
  6576  0860                     ___bmul:	
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6580                           ;___bmul@multiplier stored from wreg
  6581  0860  1283               	bcf	3,5	;RP0=0, select bank0
  6582  0861  1303               	bcf	3,6	;RP1=0, select bank0
  6583  0862  00C9               	movwf	___bmul@multiplier
  6584  0863  01C8               	clrf	___bmul@product
  6585  0864                     l2006:	
  6586  0864  1C49               	btfss	___bmul@multiplier,0
  6587  0865  286A               	goto	l2010
  6588  0866  0846               	movf	___bmul@multiplicand,w
  6589  0867  00C7               	movwf	??___bmul
  6590  0868  0847               	movf	??___bmul,w
  6591  0869  07C8               	addwf	___bmul@product,f
  6592  086A                     l2010:	
  6593  086A  1003               	clrc
  6594  086B  0DC6               	rlf	___bmul@multiplicand,f
  6595  086C  1003               	clrc
  6596  086D  0CC9               	rrf	___bmul@multiplier,f
  6597  086E  0849               	movf	___bmul@multiplier,w
  6598  086F  1D03               	btfss	3,2
  6599  0870  2864               	goto	l2006
  6600  0871  0848               	movf	___bmul@product,w
  6601  0872  0008               	return
  6602  0873                     __end_of___bmul:	
  6603                           
  6604                           	psect	text30
  6605  0832                     __ptext30:	
  6606 ;; *************** function _motors_tracking *****************
  6607 ;; Defined at:
  6608 ;;		line 769 in file "nozzle.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      unsigned char 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         0       0       0       0       0
  6626 ;;Total ram usage:        0 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    2
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_do_preset_pitch
  6633 ;;		_do_preset_angle
  6634 ;;		_do_preset_center
  6635 ;;		_do_preset_save1
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           
  6640                           ;psect for function _motors_tracking
  6641  0832                     _motors_tracking:	
  6642                           
  6643                           ;nozzle.c: 771: if(tracking_state[0].changed > 0 ||
  6644                           ;nozzle.c: 772: tracking_state[1].changed > 0 ||
  6645                           ;nozzle.c: 773: tracking_state[2].changed > 0)
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _motors_tracking: [wreg+status,2+status,0]
  6649  0832  1683               	bsf	3,5	;RP0=1, select bank1
  6650  0833  1303               	bcf	3,6	;RP1=0, select bank1
  6651  0834  0834               	movf	(_tracking_state^(0+128)+10),w
  6652  0835  1D03               	btfss	3,2
  6653  0836  283C               	goto	l3136
  6654  0837  0840               	movf	(_tracking_state^(0+128)+22),w
  6655  0838  1903               	btfsc	3,2
  6656  0839  084C               	movf	(_tracking_state^(0+128)+34),w
  6657  083A  1903               	btfsc	3,2
  6658  083B  283E               	goto	l3140
  6659  083C                     l3136:	
  6660                           
  6661                           ;nozzle.c: 774: {
  6662                           ;nozzle.c: 775: return 1;
  6663  083C  3001               	movlw	1
  6664  083D  0008               	return
  6665  083E                     l3140:	
  6666                           
  6667                           ;nozzle.c: 776: }
  6668                           ;nozzle.c: 777: return 0;
  6669  083E  3000               	movlw	0
  6670  083F  0008               	return
  6671  0840                     __end_of_motors_tracking:	
  6672                           
  6673                           	psect	text31
  6674  0CE5                     __ptext31:	
  6675 ;; *************** function _capture_adc *****************
  6676 ;; Defined at:
  6677 ;;		line 1304 in file "nozzle.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;		None
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  sensor          1    2[BANK0 ] PTR struct .
  6682 ;;		 -> sensors(24), 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6692 ;;      Params:         0       0       0       0       0
  6693 ;;      Locals:         0       1       0       0       0
  6694 ;;      Temps:          0       2       0       0       0
  6695 ;;      Totals:         0       3       0       0       0
  6696 ;;Total ram usage:        3 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    2
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_charge_adc
  6703 ;;		_main
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           
  6708                           ;psect for function _capture_adc
  6709  0CE5                     _capture_adc:	
  6710                           
  6711                           ;nozzle.c: 1306: if(PIR1bits.ADIF)
  6712                           
  6713                           ;incstack = 0
  6714                           ; Regs used in _capture_adc: [wreg-fsr0h+status,2+status,0]
  6715  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0CE7  1F0C               	btfss	12,6	;volatile
  6718  0CE8  0008               	return
  6719                           
  6720                           ;nozzle.c: 1307: {
  6721                           ;nozzle.c: 1308: sensor_state_t *sensor = &sensors[current_adc];
  6722  0CE9  0834               	movf	_current_adc,w
  6723  0CEA  00C6               	movwf	??_capture_adc
  6724  0CEB  3001               	movlw	1
  6725  0CEC                     u2695:	
  6726  0CEC  1003               	clrc
  6727  0CED  0DC6               	rlf	??_capture_adc,f
  6728  0CEE  3EFF               	addlw	-1
  6729  0CEF  1D03               	skipz
  6730  0CF0  2CEC               	goto	u2695
  6731  0CF1  1003               	clrc
  6732  0CF2  0D46               	rlf	??_capture_adc,w
  6733  0CF3  3ECE               	addlw	(low (_sensors| 0))& (0+255)
  6734  0CF4  00C7               	movwf	??_capture_adc+1
  6735  0CF5  0847               	movf	??_capture_adc+1,w
  6736  0CF6  00C8               	movwf	capture_adc@sensor
  6737                           
  6738                           ;nozzle.c: 1309: sensor->analog = ADRESH;
  6739  0CF7  081E               	movf	30,w	;volatile
  6740  0CF8  00C6               	movwf	??_capture_adc
  6741  0CF9  0848               	movf	capture_adc@sensor,w
  6742  0CFA  0084               	movwf	4
  6743  0CFB  0846               	movf	??_capture_adc,w
  6744  0CFC  1383               	bcf	3,7	;select IRP bank0
  6745  0CFD  0080               	movwf	0
  6746                           
  6747                           ;nozzle.c: 1310: if(sensor->ns == 0 &&
  6748                           ;nozzle.c: 1311: sensor->analog >= 0x80 + 0x20)
  6749  0CFE  0A48               	incf	capture_adc@sensor,w
  6750  0CFF  0084               	movwf	4
  6751  0D00  0800               	movf	0,w
  6752  0D01  1D03               	btfss	3,2
  6753  0D02  2D0E               	goto	l2614
  6754  0D03  0848               	movf	capture_adc@sensor,w
  6755  0D04  0084               	movwf	4
  6756  0D05  30A0               	movlw	160
  6757  0D06  0200               	subwf	0,w
  6758  0D07  1C03               	skipc
  6759  0D08  2D0E               	goto	l2614
  6760                           
  6761                           ;nozzle.c: 1312: {
  6762                           ;nozzle.c: 1313: sensor->ns = 1;
  6763  0D09  0A48               	incf	capture_adc@sensor,w
  6764  0D0A  0084               	movwf	4
  6765  0D0B  0180               	clrf	0
  6766  0D0C  0A80               	incf	0,f
  6767  0D0D  2D1C               	goto	l2620
  6768  0D0E                     l2614:	
  6769                           ;nozzle.c: 1315: }
  6770                           
  6771                           ;nozzle.c: 1314: sensor->position += sensor->step;
  6772                           
  6773                           
  6774                           ;nozzle.c: 1316: else
  6775                           ;nozzle.c: 1317: if(sensor->ns == 1 &&
  6776                           ;nozzle.c: 1318: sensor->analog < 0x80 - 0x20)
  6777  0D0E  0A48               	incf	capture_adc@sensor,w
  6778  0D0F  0084               	movwf	4
  6779  0D10  0300               	decf	0,w
  6780  0D11  1D03               	btfss	3,2
  6781  0D12  2D26               	goto	l2622
  6782  0D13  0848               	movf	capture_adc@sensor,w
  6783  0D14  0084               	movwf	4
  6784  0D15  3060               	movlw	96
  6785  0D16  0200               	subwf	0,w
  6786  0D17  1803               	skipnc
  6787  0D18  2D26               	goto	l2622
  6788                           
  6789                           ;nozzle.c: 1319: {
  6790                           ;nozzle.c: 1320: sensor->ns = 0;
  6791  0D19  0A48               	incf	capture_adc@sensor,w
  6792  0D1A  0084               	movwf	4
  6793  0D1B  0180               	clrf	0
  6794  0D1C                     l2620:	
  6795                           
  6796                           ;nozzle.c: 1321: sensor->position += sensor->step;
  6797  0D1C  0848               	movf	capture_adc@sensor,w
  6798  0D1D  3E02               	addlw	2
  6799  0D1E  0084               	movwf	4
  6800  0D1F  0800               	movf	0,w
  6801  0D20  00C6               	movwf	??_capture_adc
  6802  0D21  0848               	movf	capture_adc@sensor,w
  6803  0D22  3E03               	addlw	3
  6804  0D23  0084               	movwf	4
  6805  0D24  0846               	movf	??_capture_adc,w
  6806  0D25  0780               	addwf	0,f
  6807  0D26                     l2622:	
  6808                           
  6809                           ;nozzle.c: 1322: }
  6810                           ;nozzle.c: 1324: current_adc++;
  6811  0D26  3001               	movlw	1
  6812  0D27  00C6               	movwf	??_capture_adc
  6813  0D28  0846               	movf	??_capture_adc,w
  6814  0D29  07B4               	addwf	_current_adc,f
  6815                           
  6816                           ;nozzle.c: 1325: if(current_adc >= 6)
  6817  0D2A  3006               	movlw	6
  6818  0D2B  0234               	subwf	_current_adc,w
  6819  0D2C  1C03               	skipc
  6820  0D2D  2D3D               	goto	l2642
  6821                           
  6822                           ;nozzle.c: 1326: {
  6823                           ;nozzle.c: 1327: current_adc = 0;
  6824  0D2E  01B4               	clrf	_current_adc
  6825                           
  6826                           ;nozzle.c: 1344: }
  6827                           ;nozzle.c: 1346: switch(current_adc)
  6828  0D2F  2D3D               	goto	l2642
  6829  0D30                     l2628:	
  6830                           ;nozzle.c: 1347: {
  6831                           ;nozzle.c: 1348: case 0:
  6832                           
  6833                           
  6834                           ;nozzle.c: 1349: ADCON0 = 0b10000001 | 0b00000000;
  6835  0D30  3081               	movlw	129
  6836  0D31  2D3B               	goto	L15
  6837  0D32                     l2630:	
  6838                           ;nozzle.c: 1351: case 1:
  6839                           
  6840                           ;nozzle.c: 1350: break;
  6841                           
  6842                           
  6843                           ;nozzle.c: 1352: ADCON0 = 0b10000001 | 0b00001000;
  6844  0D32  3089               	movlw	137
  6845  0D33  2D3B               	goto	L15
  6846  0D34                     l2632:	
  6847                           ;nozzle.c: 1354: case 2:
  6848                           
  6849                           ;nozzle.c: 1353: break;
  6850                           
  6851                           
  6852                           ;nozzle.c: 1355: ADCON0 = 0b10000001 | 0b00010000;
  6853  0D34  3091               	movlw	145
  6854  0D35  2D3B               	goto	L15
  6855  0D36                     l2634:	
  6856                           ;nozzle.c: 1357: case 3:
  6857                           
  6858                           ;nozzle.c: 1356: break;
  6859                           
  6860                           
  6861                           ;nozzle.c: 1358: ADCON0 = 0b10000001 | 0b00011000;
  6862  0D36  3099               	movlw	153
  6863  0D37  2D3B               	goto	L15
  6864  0D38                     l2636:	
  6865                           ;nozzle.c: 1360: case 4:
  6866                           
  6867                           ;nozzle.c: 1359: break;
  6868                           
  6869                           
  6870                           ;nozzle.c: 1361: ADCON0 = 0b10000001 | 0b00100000;
  6871  0D38  30A1               	movlw	161
  6872  0D39  2D3B               	goto	L15
  6873  0D3A                     l2638:	
  6874                           ;nozzle.c: 1363: case 5:
  6875                           
  6876                           ;nozzle.c: 1362: break;
  6877                           
  6878                           
  6879                           ;nozzle.c: 1364: ADCON0 = 0b10000001 | 0b00101000;
  6880  0D3A  30A9               	movlw	169
  6881  0D3B                     L15:	
  6882  0D3B  009F               	movwf	31	;volatile
  6883                           
  6884                           ;nozzle.c: 1366: }
  6885                           
  6886                           ;nozzle.c: 1365: break;
  6887  0D3C  2D51               	goto	l2644
  6888  0D3D                     l2642:	
  6889  0D3D  0834               	movf	_current_adc,w
  6890                           
  6891                           ; Switch size 1, requested type "space"
  6892                           ; Number of cases is 6, Range of values is 0 to 5
  6893                           ; switch strategies available:
  6894                           ; Name         Instructions Cycles
  6895                           ; simple_byte           19    10 (average)
  6896                           ; direct_byte           26     8 (fixed)
  6897                           ; jumptable            260     6 (fixed)
  6898                           ;	Chosen strategy is simple_byte
  6899  0D3E  3A00               	xorlw	0	; case 0
  6900  0D3F  1903               	skipnz
  6901  0D40  2D30               	goto	l2628
  6902  0D41  3A01               	xorlw	1	; case 1
  6903  0D42  1903               	skipnz
  6904  0D43  2D32               	goto	l2630
  6905  0D44  3A03               	xorlw	3	; case 2
  6906  0D45  1903               	skipnz
  6907  0D46  2D34               	goto	l2632
  6908  0D47  3A01               	xorlw	1	; case 3
  6909  0D48  1903               	skipnz
  6910  0D49  2D36               	goto	l2634
  6911  0D4A  3A07               	xorlw	7	; case 4
  6912  0D4B  1903               	skipnz
  6913  0D4C  2D38               	goto	l2636
  6914  0D4D  3A01               	xorlw	1	; case 5
  6915  0D4E  1903               	skipnz
  6916  0D4F  2D3A               	goto	l2638
  6917  0D50  2D51               	goto	l2644
  6918  0D51                     l2644:	
  6919                           
  6920                           ;nozzle.c: 1370: adc_state = charge_adc;
  6921  0D51  3009               	movlw	(low (fp__charge_adc-fpbase))& (0+255)
  6922  0D52  00C6               	movwf	??_capture_adc
  6923  0D53  0846               	movf	??_capture_adc,w
  6924  0D54  00E8               	movwf	_adc_state
  6925                           
  6926                           ;nozzle.c: 1371: adc_counter = 0;
  6927  0D55  01A6               	clrf	_adc_counter
  6928  0D56  0008               	return
  6929  0D57                     __end_of_capture_adc:	
  6930                           
  6931                           	psect	text32
  6932  0840                     __ptext32:	
  6933 ;; *************** function _charge_adc *****************
  6934 ;; Defined at:
  6935 ;;		line 1375 in file "nozzle.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;		None
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6949 ;;      Params:         0       0       0       0       0
  6950 ;;      Locals:         0       0       0       0       0
  6951 ;;      Temps:          0       1       0       0       0
  6952 ;;      Totals:         0       1       0       0       0
  6953 ;;Total ram usage:        1 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    2
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_capture_adc
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _charge_adc
  6966  0840                     _charge_adc:	
  6967                           
  6968                           ;nozzle.c: 1380: adc_counter++;
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _charge_adc: [wreg+status,2+status,0]
  6972  0840  3001               	movlw	1
  6973  0841  1283               	bcf	3,5	;RP0=0, select bank0
  6974  0842  1303               	bcf	3,6	;RP1=0, select bank0
  6975  0843  00C6               	movwf	??_charge_adc
  6976  0844  0846               	movf	??_charge_adc,w
  6977  0845  07A6               	addwf	_adc_counter,f
  6978                           
  6979                           ;nozzle.c: 1381: if(adc_counter >= 1)
  6980  0846  0826               	movf	_adc_counter,w
  6981  0847  1903               	btfsc	3,2
  6982  0848  0008               	return
  6983                           
  6984                           ;nozzle.c: 1382: {
  6985                           ;nozzle.c: 1383: PIR1bits.ADIF = 0;
  6986  0849  130C               	bcf	12,6	;volatile
  6987                           
  6988                           ;nozzle.c: 1384: ADCON0bits.GO = 1;
  6989  084A  151F               	bsf	31,2	;volatile
  6990                           
  6991                           ;nozzle.c: 1385: adc_state = capture_adc;
  6992  084B  3006               	movlw	(low (fp__capture_adc-fpbase))& (0+255)
  6993  084C  00C6               	movwf	??_charge_adc
  6994  084D  0846               	movf	??_charge_adc,w
  6995  084E  00E8               	movwf	_adc_state
  6996  084F  0008               	return
  6997  0850                     __end_of_charge_adc:	
  6998                           
  6999                           	psect	text33
  7000  0B55                     __ptext33:	
  7001 ;; *************** function _isr *****************
  7002 ;; Defined at:
  7003 ;;		line 1665 in file "nozzle.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7017 ;;      Params:         0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0
  7019 ;;      Temps:          5       0       0       0       0
  7020 ;;      Totals:         5       0       0       0       0
  7021 ;;Total ram usage:        5 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		_pwm_off
  7026 ;;		_pwm_on
  7027 ;; This function is called by:
  7028 ;;		Interrupt level 1
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           
  7033                           ;psect for function _isr
  7034  0B55                     _isr:	
  7035  0B55                     L16:	
  7036                           
  7037                           ;nozzle.c: 1734: interrupt_done = 0;
  7038  0B55  01FC               	clrf	_interrupt_done
  7039  0B56                     i1l2838:	
  7040  0B56  087C               	movf	_interrupt_done,w
  7041  0B57  1D03               	btfss	3,2
  7042  0B58  2BA1               	goto	i1l505
  7043                           
  7044                           ;nozzle.c: 1669: {
  7045                           ;nozzle.c: 1670: interrupt_done = 1;
  7046                           
  7047                           ;nozzle.c: 1668: while(!interrupt_done)
  7048                           
  7049                           ;nozzle.c: 1667: interrupt_done = 0;
  7050  0B59  01FC               	clrf	_interrupt_done
  7051  0B5A  0AFC               	incf	_interrupt_done,f
  7052                           
  7053                           ;nozzle.c: 1674: if(INTCONbits.TMR0IF)
  7054  0B5B  1D0B               	btfss	11,2	;volatile
  7055  0B5C  2B65               	goto	i1l2796
  7056                           
  7057                           ;nozzle.c: 1675: {
  7058                           ;nozzle.c: 1676: INTCONbits.TMR0IF = 0;
  7059  0B5D  110B               	bcf	11,2	;volatile
  7060                           
  7061                           ;nozzle.c: 1677: interrupt_done = 0;
  7062  0B5E  01FC               	clrf	_interrupt_done
  7063                           
  7064                           ;nozzle.c: 1678: pwm_state();
  7065  0B5F  087D               	movf	_pwm_state,w
  7066  0B60  120A  118A  208D  120A  158A  	fcall	i1fptable
  7067  0B65                     i1l2796:	
  7068                           
  7069                           ;nozzle.c: 1679: }
  7070                           ;nozzle.c: 1684: if(PIR1bits.TMR1IF)
  7071  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  7072  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  7073  0B67  1C0C               	btfss	12,0	;volatile
  7074  0B68  2B71               	goto	i1l2802
  7075                           
  7076                           ;nozzle.c: 1685: {
  7077                           ;nozzle.c: 1686: PIR1bits.TMR1IF = 0;
  7078  0B69  100C               	bcf	12,0	;volatile
  7079                           
  7080                           ;nozzle.c: 1687: TMR1 = (-22579000 / 4 / 8 / 100);
  7081  0B6A  30E4               	movlw	228
  7082  0B6B  008F               	movwf	15	;volatile
  7083  0B6C  3071               	movlw	113
  7084  0B6D  008E               	movwf	14	;volatile
  7085                           
  7086                           ;nozzle.c: 1688: got_tick = 1;
  7087  0B6E  01B8               	clrf	_got_tick
  7088  0B6F  0AB8               	incf	_got_tick,f
  7089                           
  7090                           ;nozzle.c: 1696: interrupt_done = 0;
  7091  0B70  01FC               	clrf	_interrupt_done
  7092  0B71                     i1l2802:	
  7093                           
  7094                           ;nozzle.c: 1697: }
  7095                           ;nozzle.c: 1700: if(PIR1bits.RCIF)
  7096  0B71  1E8C               	btfss	12,5	;volatile
  7097  0B72  2B7B               	goto	i1l2812
  7098                           
  7099                           ;nozzle.c: 1701: {
  7100                           ;nozzle.c: 1702: PIR1bits.RCIF = 0;
  7101  0B73  128C               	bcf	12,5	;volatile
  7102                           
  7103                           ;nozzle.c: 1703: serial_in = RCREG;
  7104  0B74  081A               	movf	26,w	;volatile
  7105  0B75  00F2               	movwf	??_isr
  7106  0B76  0872               	movf	??_isr,w
  7107  0B77  00BB               	movwf	_serial_in
  7108                           
  7109                           ;nozzle.c: 1704: have_serial = 1;
  7110  0B78  01BC               	clrf	_have_serial
  7111  0B79  0ABC               	incf	_have_serial,f
  7112                           
  7113                           ;nozzle.c: 1705: interrupt_done = 0;
  7114  0B7A  01FC               	clrf	_interrupt_done
  7115  0B7B                     i1l2812:	
  7116                           
  7117                           ;nozzle.c: 1706: }
  7118                           ;nozzle.c: 1709: if(PIR1bits.TMR2IF)
  7119  0B7B  1C8C               	btfss	12,1	;volatile
  7120  0B7C  2B90               	goto	i1l2822
  7121                           
  7122                           ;nozzle.c: 1710: {
  7123                           ;nozzle.c: 1711: PIR1bits.TMR2IF = 0;
  7124  0B7D  108C               	bcf	12,1	;volatile
  7125                           
  7126                           ;nozzle.c: 1712: got_tmr2 = 1;
  7127  0B7E  01A8               	clrf	_got_tmr2
  7128  0B7F  0AA8               	incf	_got_tmr2,f
  7129                           
  7130                           ;nozzle.c: 1713: tmr2_high++;
  7131  0B80  3001               	movlw	1
  7132  0B81  07A2               	addwf	_tmr2_high,f
  7133  0B82  1803               	skipnc
  7134  0B83  0AA3               	incf	_tmr2_high+1,f
  7135  0B84  3000               	movlw	0
  7136  0B85  07A3               	addwf	_tmr2_high+1,f
  7137                           
  7138                           ;nozzle.c: 1714: if(tmr2_high > 725)
  7139  0B86  3002               	movlw	2
  7140  0B87  0223               	subwf	_tmr2_high+1,w
  7141  0B88  30D6               	movlw	214
  7142  0B89  1903               	skipnz
  7143  0B8A  0222               	subwf	_tmr2_high,w
  7144  0B8B  1C03               	skipc
  7145  0B8C  2B8F               	goto	i1l2820
  7146                           
  7147                           ;nozzle.c: 1715: {
  7148                           ;nozzle.c: 1716: ir_timeout = 1;
  7149  0B8D  01A7               	clrf	_ir_timeout
  7150  0B8E  0AA7               	incf	_ir_timeout,f
  7151  0B8F                     i1l2820:	
  7152                           
  7153                           ;nozzle.c: 1717: }
  7154                           ;nozzle.c: 1718: interrupt_done = 0;
  7155  0B8F  01FC               	clrf	_interrupt_done
  7156  0B90                     i1l2822:	
  7157                           
  7158                           ;nozzle.c: 1719: }
  7159                           ;nozzle.c: 1722: if(INTCONbits.INTF)
  7160  0B90  1C8B               	btfss	11,1	;volatile
  7161  0B91  2B56               	goto	i1l2838
  7162                           
  7163                           ;nozzle.c: 1723: {
  7164                           ;nozzle.c: 1724: INTCONbits.INTF = 0;
  7165  0B92  108B               	bcf	11,1	;volatile
  7166                           
  7167                           ;nozzle.c: 1726: TMR2 = 0;
  7168  0B93  0191               	clrf	17	;volatile
  7169                           
  7170                           ;nozzle.c: 1727: PIR1bits.TMR2IF = 0;
  7171  0B94  108C               	bcf	12,1	;volatile
  7172                           
  7173                           ;nozzle.c: 1729: ir_time = tmr2_high;
  7174  0B95  0823               	movf	_tmr2_high+1,w
  7175  0B96  00A5               	movwf	_ir_time+1	;volatile
  7176  0B97  0822               	movf	_tmr2_high,w
  7177  0B98  00A4               	movwf	_ir_time	;volatile
  7178                           
  7179                           ;nozzle.c: 1730: tmr2_high = 0;
  7180  0B99  01A2               	clrf	_tmr2_high
  7181  0B9A  01A3               	clrf	_tmr2_high+1
  7182                           
  7183                           ;nozzle.c: 1731: ir_timeout = 0;
  7184  0B9B  01A7               	clrf	_ir_timeout
  7185                           
  7186                           ;nozzle.c: 1733: got_ir_int = 1;
  7187  0B9C  3001               	movlw	1
  7188  0B9D  00F2               	movwf	??_isr
  7189  0B9E  0872               	movf	??_isr,w
  7190  0B9F  00A9               	movwf	_got_ir_int	;volatile
  7191  0BA0  2B55               	goto	L16
  7192  0BA1                     i1l505:	
  7193  0BA1  0876               	movf	??_isr+4,w
  7194  0BA2  00FF               	movwf	127
  7195  0BA3  0875               	movf	??_isr+3,w
  7196  0BA4  008A               	movwf	10
  7197  0BA5  0874               	movf	??_isr+2,w
  7198  0BA6  0084               	movwf	4
  7199  0BA7  0E73               	swapf	(??_isr+1)^(0+-128),w
  7200  0BA8  0083               	movwf	3
  7201  0BA9  0EFE               	swapf	126,f
  7202  0BAA  0E7E               	swapf	126,w
  7203  0BAB  0009               	retfie
  7204  0BAC                     __end_of_isr:	
  7205                           
  7206                           	psect	intentry
  7207  0004                     __pintentry:	
  7208                           ;incstack = 0
  7209                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7210                           
  7211  0004                     interrupt_function:	
  7212  007E                     saved_w	set	btemp
  7213  0004  00FE               	movwf	btemp
  7214  0005  0E03               	swapf	3,w
  7215  0006  00F3               	movwf	??_isr+1
  7216  0007  0804               	movf	4,w
  7217  0008  00F4               	movwf	??_isr+2
  7218  0009  080A               	movf	10,w
  7219  000A  00F5               	movwf	??_isr+3
  7220  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7221  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7222  000D  087F               	movf	btemp+1,w
  7223  000E  00F6               	movwf	??_isr+4
  7224  000F  120A  158A  2B55   	ljmp	_isr
  7225                           
  7226                           	psect	text34
  7227  0922                     __ptext34:	
  7228 ;; *************** function _pwm_off *****************
  7229 ;; Defined at:
  7230 ;;		line 1638 in file "nozzle.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  prev_port       1    1[COMMON] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7244 ;;      Params:         0       0       0       0       0
  7245 ;;      Locals:         1       0       0       0       0
  7246 ;;      Temps:          1       0       0       0       0
  7247 ;;      Totals:         2       0       0       0       0
  7248 ;;Total ram usage:        2 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_pwm_on
  7254 ;;		_isr
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function _pwm_off
  7260  0922                     _pwm_off:	
  7261                           
  7262                           ;nozzle.c: 1641: if((motor_master & (uint8_t)0b00111111) == (uint8_t)0b00111111)
  7263                           
  7264                           ;incstack = 0
  7265                           ; Regs used in _pwm_off: [wreg+status,2+status,0]
  7266  0922  303F               	movlw	63
  7267  0923  1283               	bcf	3,5	;RP0=0, select bank0
  7268  0924  1303               	bcf	3,6	;RP1=0, select bank0
  7269  0925  0535               	andwf	_motor_master,w
  7270  0926  00F0               	movwf	??_pwm_off
  7271  0927  303F               	movlw	63
  7272  0928  0670               	xorwf	??_pwm_off,w
  7273  0929  1D03               	btfss	3,2
  7274  092A  292F               	goto	i1l2682
  7275                           
  7276                           ;nozzle.c: 1642: {
  7277                           ;nozzle.c: 1643: pwm_duty = 0;
  7278  092B  01F7               	clrf	_pwm_duty
  7279  092C  01F8               	clrf	_pwm_duty+1
  7280                           
  7281                           ;nozzle.c: 1644: pwm_duty_counter = 0;
  7282  092D  01A0               	clrf	_pwm_duty_counter
  7283  092E  01A1               	clrf	_pwm_duty_counter+1
  7284  092F                     i1l2682:	
  7285                           
  7286                           ;nozzle.c: 1645: }
  7287                           ;nozzle.c: 1648: uint8_t prev_port = PORTD & ~(uint8_t)0b00111111;
  7288  092F  0808               	movf	8,w	;volatile
  7289  0930  39C0               	andlw	192
  7290  0931  00F0               	movwf	??_pwm_off
  7291  0932  0870               	movf	??_pwm_off,w
  7292  0933  00F1               	movwf	pwm_off@prev_port
  7293                           
  7294                           ;nozzle.c: 1649: PORTD = prev_port | motor_master;
  7295  0934  0871               	movf	pwm_off@prev_port,w
  7296  0935  0435               	iorwf	_motor_master,w
  7297  0936  0088               	movwf	8	;volatile
  7298                           
  7299                           ;nozzle.c: 1650: pwm_state = pwm_on;
  7300  0937  3004               	movlw	(low (fp__pwm_on-i1fpbase))& (0+255)
  7301  0938  00F0               	movwf	??_pwm_off
  7302  0939  0870               	movf	??_pwm_off,w
  7303  093A  00FD               	movwf	_pwm_state
  7304                           
  7305                           ;nozzle.c: 1652: if(pwm_duty == 0)
  7306  093B  0877               	movf	_pwm_duty,w
  7307  093C  0478               	iorwf	_pwm_duty+1,w
  7308  093D  1D03               	btfss	3,2
  7309  093E  2944               	goto	i1l2690
  7310                           
  7311                           ;nozzle.c: 1653: {
  7312                           ;nozzle.c: 1654: PR2 = 0xff;
  7313  093F  30FF               	movlw	255
  7314  0940  1683               	bsf	3,5	;RP0=1, select bank1
  7315  0941  1303               	bcf	3,6	;RP1=0, select bank1
  7316  0942  0092               	movwf	18	;volatile
  7317                           
  7318                           ;nozzle.c: 1655: }
  7319  0943  0008               	return
  7320  0944                     i1l2690:	
  7321                           
  7322                           ;nozzle.c: 1656: else
  7323                           ;nozzle.c: 1657: {
  7324                           ;nozzle.c: 1658: PR2 = pwm_duty;
  7325  0944  0877               	movf	_pwm_duty,w
  7326  0945  1683               	bsf	3,5	;RP0=1, select bank1
  7327  0946  1303               	bcf	3,6	;RP1=0, select bank1
  7328  0947  0092               	movwf	18	;volatile
  7329  0948  0008               	return
  7330  0949                     __end_of_pwm_off:	
  7331                           
  7332                           	psect	text35
  7333  0099                     __ptext35:	
  7334 ;; *************** function _pwm_on *****************
  7335 ;; Defined at:
  7336 ;;		line 1599 in file "nozzle.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  temp_mask       1    1[COMMON] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0, btemp+1
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7350 ;;      Params:         0       0       0       0       0
  7351 ;;      Locals:         1       0       0       0       0
  7352 ;;      Temps:          1       0       0       0       0
  7353 ;;      Totals:         2       0       0       0       0
  7354 ;;Total ram usage:        2 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_pwm_off
  7360 ;;		_isr
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _pwm_on
  7366  0099                     _pwm_on:	
  7367                           
  7368                           ;nozzle.c: 1601: if(pwm_duty < 0xff)
  7369                           
  7370                           ;incstack = 0
  7371                           ; Regs used in _pwm_on: [wreg+status,2+status,0+btemp+1]
  7372  0099  0878               	movf	_pwm_duty+1,w
  7373  009A  3A80               	xorlw	128
  7374  009B  00FF               	movwf	127
  7375  009C  3080               	movlw	128
  7376  009D  027F               	subwf	127,w
  7377  009E  1D03               	skipz
  7378  009F  28A2               	goto	u276_25
  7379  00A0  30FF               	movlw	255
  7380  00A1  0277               	subwf	_pwm_duty,w
  7381  00A2                     u276_25:	
  7382  00A2  1803               	skipnc
  7383  00A3  28F7               	goto	i1l2676
  7384                           
  7385                           ;nozzle.c: 1602: {
  7386                           ;nozzle.c: 1604: uint8_t temp_mask = (uint8_t)0b00111111 ^ 0xff;
  7387  00A4  30C0               	movlw	192
  7388  00A5  00F0               	movwf	??_pwm_on
  7389  00A6  0870               	movf	??_pwm_on,w
  7390  00A7  00F1               	movwf	pwm_on@temp_mask
  7391                           
  7392                           ;nozzle.c: 1605: if((motor_master & ((uint8_t)0b00000100 | (uint8_t)0b00001000)) == ((ui
      +                          nt8_t)0b00000100 | (uint8_t)0b00001000))
  7393  00A8  300C               	movlw	12
  7394  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  7395  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  7396  00AB  0535               	andwf	_motor_master,w
  7397  00AC  00F0               	movwf	??_pwm_on
  7398  00AD  300C               	movlw	12
  7399  00AE  0670               	xorwf	??_pwm_on,w
  7400  00AF  1D03               	btfss	3,2
  7401  00B0  28B5               	goto	i1l480
  7402                           
  7403                           ;nozzle.c: 1606: {
  7404                           ;nozzle.c: 1607: temp_mask |= ((uint8_t)0b00000100 | (uint8_t)0b00001000);
  7405  00B1  300C               	movlw	12
  7406  00B2  00F0               	movwf	??_pwm_on
  7407  00B3  0870               	movf	??_pwm_on,w
  7408  00B4  04F1               	iorwf	pwm_on@temp_mask,f
  7409  00B5                     i1l480:	
  7410                           
  7411                           ;nozzle.c: 1608: }
  7412                           ;nozzle.c: 1609: if((motor_master & ((uint8_t)0b00100000 | (uint8_t)0b00010000)) == ((ui
      +                          nt8_t)0b00100000 | (uint8_t)0b00010000))
  7413  00B5  3030               	movlw	48
  7414  00B6  0535               	andwf	_motor_master,w
  7415  00B7  00F0               	movwf	??_pwm_on
  7416  00B8  3030               	movlw	48
  7417  00B9  0670               	xorwf	??_pwm_on,w
  7418  00BA  1D03               	btfss	3,2
  7419  00BB  28C0               	goto	i1l481
  7420                           
  7421                           ;nozzle.c: 1610: {
  7422                           ;nozzle.c: 1611: temp_mask |= ((uint8_t)0b00100000 | (uint8_t)0b00010000);
  7423  00BC  3030               	movlw	48
  7424  00BD  00F0               	movwf	??_pwm_on
  7425  00BE  0870               	movf	??_pwm_on,w
  7426  00BF  04F1               	iorwf	pwm_on@temp_mask,f
  7427  00C0                     i1l481:	
  7428                           
  7429                           ;nozzle.c: 1612: }
  7430                           ;nozzle.c: 1613: if((motor_master & ((uint8_t)0b00000001 | (uint8_t)0b00000010)) == ((ui
      +                          nt8_t)0b00000001 | (uint8_t)0b00000010))
  7431  00C0  3003               	movlw	3
  7432  00C1  0535               	andwf	_motor_master,w
  7433  00C2  00F0               	movwf	??_pwm_on
  7434  00C3  3003               	movlw	3
  7435  00C4  0670               	xorwf	??_pwm_on,w
  7436  00C5  1D03               	btfss	3,2
  7437  00C6  28CB               	goto	i1l482
  7438                           
  7439                           ;nozzle.c: 1614: {
  7440                           ;nozzle.c: 1615: temp_mask |= ((uint8_t)0b00000001 | (uint8_t)0b00000010);
  7441  00C7  3003               	movlw	3
  7442  00C8  00F0               	movwf	??_pwm_on
  7443  00C9  0870               	movf	??_pwm_on,w
  7444  00CA  04F1               	iorwf	pwm_on@temp_mask,f
  7445  00CB                     i1l482:	
  7446                           
  7447                           ;nozzle.c: 1616: }
  7448                           ;nozzle.c: 1618: PORTD &= temp_mask;
  7449  00CB  0871               	movf	pwm_on@temp_mask,w
  7450  00CC  00F0               	movwf	??_pwm_on
  7451  00CD  0870               	movf	??_pwm_on,w
  7452  00CE  0588               	andwf	8,f	;volatile
  7453                           
  7454                           ;nozzle.c: 1619: pwm_state = pwm_off;
  7455  00CF  3001               	movlw	(low (fp__pwm_off-i1fpbase))& (0+255)
  7456  00D0  00F0               	movwf	??_pwm_on
  7457  00D1  0870               	movf	??_pwm_on,w
  7458  00D2  00FD               	movwf	_pwm_state
  7459                           
  7460                           ;nozzle.c: 1620: PR2 = 0xff - pwm_duty;
  7461  00D3  0377               	decf	_pwm_duty,w
  7462  00D4  3AFF               	xorlw	255
  7463  00D5  3EFF               	addlw	255
  7464  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  7465  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  7466  00D8  0092               	movwf	18	;volatile
  7467                           
  7468                           ;nozzle.c: 1623: pwm_duty_counter++;
  7469  00D9  3001               	movlw	1
  7470  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7471  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7472  00DC  07A0               	addwf	_pwm_duty_counter,f
  7473  00DD  1803               	skipnc
  7474  00DE  0AA1               	incf	_pwm_duty_counter+1,f
  7475  00DF  3000               	movlw	0
  7476  00E0  07A1               	addwf	_pwm_duty_counter+1,f
  7477                           
  7478                           ;nozzle.c: 1624: if(pwm_duty_counter >= 100)
  7479  00E1  0821               	movf	_pwm_duty_counter+1,w
  7480  00E2  3A80               	xorlw	128
  7481  00E3  00FF               	movwf	127
  7482  00E4  3080               	movlw	128
  7483  00E5  027F               	subwf	127,w
  7484  00E6  1D03               	skipz
  7485  00E7  28EA               	goto	u280_25
  7486  00E8  3064               	movlw	100
  7487  00E9  0220               	subwf	_pwm_duty_counter,w
  7488  00EA                     u280_25:	
  7489  00EA  1C03               	skipc
  7490  00EB  0008               	return
  7491                           
  7492                           ;nozzle.c: 1625: {
  7493                           ;nozzle.c: 1626: pwm_duty_counter = 0;
  7494  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  7495  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  7496  00EE  01A0               	clrf	_pwm_duty_counter
  7497  00EF  01A1               	clrf	_pwm_duty_counter+1
  7498                           
  7499                           ;nozzle.c: 1627: pwm_duty++;
  7500  00F0  3001               	movlw	1
  7501  00F1  07F7               	addwf	_pwm_duty,f
  7502  00F2  1803               	skipnc
  7503  00F3  0AF8               	incf	_pwm_duty+1,f
  7504  00F4  3000               	movlw	0
  7505  00F5  07F8               	addwf	_pwm_duty+1,f
  7506                           
  7507                           ;nozzle.c: 1628: }
  7508                           ;nozzle.c: 1629: }
  7509  00F6  0008               	return
  7510  00F7                     i1l2676:	
  7511                           
  7512                           ;nozzle.c: 1630: else
  7513                           ;nozzle.c: 1631: {
  7514                           ;nozzle.c: 1632: pwm_state = pwm_off;
  7515  00F7  3001               	movlw	(low (fp__pwm_off-i1fpbase))& (0+255)
  7516  00F8  00F0               	movwf	??_pwm_on
  7517  00F9  0870               	movf	??_pwm_on,w
  7518  00FA  00FD               	movwf	_pwm_state
  7519                           
  7520                           ;nozzle.c: 1633: PR2 = 0xff;
  7521  00FB  30FF               	movlw	255
  7522  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  7523  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  7524  00FE  0092               	movwf	18	;volatile
  7525  00FF  0008               	return
  7526  0100                     __end_of_pwm_on:	
  7527  0006                     
  7528                           	psect	functab
  7529  004F                     __pfunctab:	
  7530  004F                     __fptable:	
  7531  004F                     fptable:	
  7532  004F  00FF               	movwf	(btemp+1)& (0+127)
  7533  0050  3000               	movlw	high fptable
  7534  0051  008A               	movwf	10
  7535  0052  087F               	movf	(btemp+1)& (0+127),w
  7536  0053  0782               	addwf	2,f
  7537  0054                     fpbase:	
  7538  0054  2854               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7539  0055                     fp_u0:	
  7540  0055  2855               	ljmp	fp_u0	; unused
  7541  0056                     fp_u1:	
  7542  0056  2856               	ljmp	fp_u1	; unused
  7543  0057                     fp_u2:	
  7544  0057  2857               	ljmp	fp_u2	; unused
  7545  0058                     fp_u3:	
  7546  0058  2858               	ljmp	fp_u3	; unused
  7547  0059                     fp_u4:	
  7548  0059  2859               	ljmp	fp_u4	; unused
  7549  005A                     fp__capture_adc:	
  7550  005A  120A  158A  2CE5   	ljmp	_capture_adc
  7551  005D                     fp__charge_adc:	
  7552  005D  120A  158A  2840   	ljmp	_charge_adc
  7553  0060                     fp__do_preset_save2:	
  7554  0060  120A  158A  2850   	ljmp	_do_preset_save2
  7555  0063                     fp__do_preset_pitch:	
  7556  0063  120A  158A  2A09   	ljmp	_do_preset_pitch
  7557  0066                     fp__do_preset_delay2:	
  7558  0066  120A  158A  281C   	ljmp	_do_preset_delay2
  7559  0069                     fp__do_preset_angle:	
  7560  0069  120A  158A  2A82   	ljmp	_do_preset_angle
  7561  006C                     fp__do_preset_delay1:	
  7562  006C  120A  118A  2FF6   	ljmp	_do_preset_delay1
  7563  006F                     fp__do_preset_center:	
  7564  006F  120A  158A  28DB   	ljmp	_do_preset_center
  7565  0072                     fp__do_preset_save1:	
  7566  0072  120A  158A  2873   	ljmp	_do_preset_save1
  7567  0075                     fp__motor_home1:	
  7568  0075  120A  158A  2C74   	ljmp	_motor_home1
  7569  0078                     fp__motor_idle:	
  7570  0078  120A  158A  2810   	ljmp	_motor_idle
  7571  007B                     fp__motor_tracking:	
  7572  007B  120A  158A  2D57   	ljmp	_motor_tracking
  7573  007E                     fp__motor_home2:	
  7574  007E  120A  158A  2C0A   	ljmp	_motor_home2
  7575  0081                     fp__motor_home6:	
  7576  0081  120A  158A  2A43   	ljmp	_motor_home6
  7577  0084                     fp__motor_home5:	
  7578  0084  120A  158A  2B04   	ljmp	_motor_home5
  7579  0087                     fp__motor_home4:	
  7580  0087  120A  118A  2F77   	ljmp	_motor_home4
  7581  008A                     fp__motor_home3:	
  7582  008A  120A  158A  2970   	ljmp	_motor_home3
  7583  008D                     __end_of__fptable:	
  7584  008D                     __i1fptable:	
  7585  008D                     i1fptable:	
  7586  008D  00FF               	movwf	(btemp+1)& (0+127)
  7587  008E  3000               	movlw	high i1fptable
  7588  008F  008A               	movwf	10
  7589  0090  087F               	movf	(btemp+1)& (0+127),w
  7590  0091  0782               	addwf	2,f
  7591  0092                     i1fpbase:	
  7592  0092  2892               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  7593  0093                     fp__pwm_off:	
  7594  0093  120A  158A  2922   	ljmp	_pwm_off
  7595  0096                     fp__pwm_on:	
  7596  0096  120A  118A  2899   	ljmp	_pwm_on
  7597  0099                     __end_of__i1fptable:	
  7598  007E                     btemp	set	126	;btemp
  7599  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    921
    Data        4
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     34      75
    BANK1            80      0      70
    BANK3            96      0      64
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    memset@p	PTR unsigned char  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    main@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    sp__memset	PTR void  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    pwm_state	PTR FTN()void  size(1) Largest target is 1
		 -> pwm_on(), pwm_off(), 

    capture_adc@sensor	PTR struct . size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    adc_state	PTR FTN()void  size(1) Largest target is 1
		 -> capture_adc(), charge_adc(), 

    handle_ir2@code.data	PTR const unsigned char  size(2) Largest target is 71
		 -> fastfwd_data(CODE[71]), right_data(CODE[71]), left_data(CODE[71]), down_data(CODE[71]), 
		 -> up_data(CODE[71]), fastrev_data(CODE[71]), button0_data(CODE[71]), button9_data(CODE[71]), 
		 -> button8_data(CODE[71]), button7_data(CODE[71]), 

    handle_ir2@data	PTR const unsigned char  size(2) Largest target is 71
		 -> fastfwd_data(CODE[71]), right_data(CODE[71]), left_data(CODE[71]), down_data(CODE[71]), 
		 -> up_data(CODE[71]), fastrev_data(CODE[71]), button0_data(CODE[71]), button9_data(CODE[71]), 
		 -> button8_data(CODE[71]), button7_data(CODE[71]), 

    handle_ir2@code	PTR const struct . size(2) Largest target is 40
		 -> ir_codes(CODE[40]), 

    write_presets@ptr	PTR unsigned char  size(1) Largest target is 8
		 -> presets(BANK0[8]), 

    read_presets@ptr	PTR unsigned char  size(1) Largest target is 8
		 -> presets(BANK0[8]), 

    preset_state	PTR FTN()void  size(1) Largest target is 1
		 -> do_preset_save1(), do_preset_save2(), do_preset_center(), do_preset_delay1(), 
		 -> do_preset_angle(), do_preset_delay2(), do_preset_pitch(), Absolute function(), 

    motor_home1@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home2@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home3@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home4@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home5@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home6@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_tracking@encoder	PTR struct . size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    motor_tracking@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_state	PTR FTN()void  size(1) Largest target is 1
		 -> motor_home2(), motor_home3(), motor_home4(), motor_home5(), 
		 -> motor_home1(), motor_home6(), motor_tracking(), motor_idle(), 

    print_text@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[28]), 

    S41$data	PTR const unsigned char  size(2) Largest target is 71
		 -> fastfwd_data(CODE[71]), right_data(CODE[71]), left_data(CODE[71]), down_data(CODE[71]), 
		 -> up_data(CODE[71]), fastrev_data(CODE[71]), button0_data(CODE[71]), button9_data(CODE[71]), 
		 -> button8_data(CODE[71]), button7_data(CODE[71]), 

    ir_codes.data	PTR const unsigned char  size(2) Largest target is 71
		 -> fastfwd_data(CODE[71]), right_data(CODE[71]), left_data(CODE[71]), down_data(CODE[71]), 
		 -> up_data(CODE[71]), fastrev_data(CODE[71]), button0_data(CODE[71]), button9_data(CODE[71]), 
		 -> button8_data(CODE[71]), button7_data(CODE[71]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_pwm_off
    _isr->_pwm_on

Critical Paths under _main in BANK0

    _main->_handle_ir
    _print_text->_print_byte
    _motor_tracking->___bmul
    _motor_home6->___bmul
    _motor_home5->___bmul
    _motor_home4->___bmul
    _motor_home3->___bmul
    _motor_home2->___bmul
    _motor_home1->___bmul
    _handle_ir->_handle_ir2
    _handle_ir2->_handle_ir_code
    _handle_ir_code->_handle_preset_button
    _handle_preset_button->_update_motors
    _do_preset_save2->_update_motors
    _do_preset_pitch->_update_motors
    _do_preset_center->_update_motors
    _do_preset_angle->_update_motors
    _update_motors->___bmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11657
                                             30 BANK0      4     4      0
                   Absolute function *
                             ___bmul
                        _capture_adc *
                         _charge_adc *
                    _do_preset_angle *
                   _do_preset_center *
                   _do_preset_delay1 *
                   _do_preset_delay2 *
                    _do_preset_pitch *
                    _do_preset_save1 *
                    _do_preset_save2 *
                          _handle_ir
                        _handle_uart
                             _memset
                        _motor_home1 *
                        _motor_home2 *
                        _motor_home3 *
                        _motor_home4 *
                        _motor_home5 *
                        _motor_home6 *
                         _motor_idle *
                     _motor_tracking *
                         _print_text
                       _read_presets
 ---------------------------------------------------------------------------------
 (1) _read_presets                                         3     3      0      92
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _print_text                                           2     0      2     164
                                              2 BANK0      2     0      2
                         _print_byte
 ---------------------------------------------------------------------------------
 (2) _print_byte                                           2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _motor_tracking                                       4     4      0    1000
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_idle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_home6                                          4     4      0     472
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home5                                          5     5      0     534
                                              4 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home4                                          8     8      0     701
                                              4 BANK0      8     8      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home3                                          3     3      0     500
                                              4 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home2                                          7     7      0     667
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home1                                          7     7      0     667
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     254
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _handle_uart                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _handle_ir                                            2     2      0    3689
                                             28 BANK0      2     2      0
                         _handle_ir2
                     _handle_ir_code
 ---------------------------------------------------------------------------------
 (2) _handle_ir2                                          15    15      0    2109
                                             13 BANK0     15    15      0
                     _handle_ir_code
 ---------------------------------------------------------------------------------
 (2) _handle_ir_code                                       2     2      0    1481
                                             12 BANK0      1     1      0
                         _arm_motors
                      _disarm_motors
               _handle_preset_button
                      _update_motors
 ---------------------------------------------------------------------------------
 (3) _handle_preset_button                                 4     2      2     987
                                              8 BANK0      4     2      2
                      _update_motors
                      _write_presets
 ---------------------------------------------------------------------------------
 (4) _write_presets                                        3     3      0      92
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _disarm_motors                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _arm_motors                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_preset_save2                                      1     1      0     494
                                              8 BANK0      1     1      0
                      _update_motors
 ---------------------------------------------------------------------------------
 (1) _do_preset_save1                                      1     1      0       0
                                              0 BANK0      1     1      0
                    _motors_tracking
 ---------------------------------------------------------------------------------
 (1) _do_preset_pitch                                      3     3      0     559
                                              8 BANK0      3     3      0
                    _motors_tracking
                      _update_motors
 ---------------------------------------------------------------------------------
 (1) _do_preset_delay2                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_preset_delay1                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_preset_center                                     1     1      0     494
                                              8 BANK0      1     1      0
                    _motors_tracking
                      _update_motors
 ---------------------------------------------------------------------------------
 (1) _do_preset_angle                                      2     2      0     559
                                              8 BANK0      2     2      0
                    _motors_tracking
                      _update_motors
 ---------------------------------------------------------------------------------
 (3) _update_motors                                        4     4      0     494
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     404
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _motors_tracking                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _charge_adc                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _capture_adc                                          3     3      0     243
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  5     5      0      49
                                              2 COMMON     5     5      0
                            _pwm_off *
                             _pwm_on *
 ---------------------------------------------------------------------------------
 (8) _pwm_on                                               2     2      0      26
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _pwm_off                                              2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   Absolute function(Fake) *
   ___bmul *
   _capture_adc *
   _charge_adc *
   _do_preset_angle *
     _motors_tracking
     _update_motors
       ___bmul
   _do_preset_center *
     _motors_tracking
     _update_motors
       ___bmul
   _do_preset_delay1 *
   _do_preset_delay2 *
   _do_preset_pitch *
     _motors_tracking
     _update_motors
       ___bmul
   _do_preset_save1 *
     _motors_tracking
   _do_preset_save2 *
     _update_motors
       ___bmul
   _handle_ir *
     _handle_ir2
       _handle_ir_code
         _arm_motors
         _disarm_motors
         _handle_preset_button
           _update_motors
             ___bmul
           _write_presets
         _update_motors
           ___bmul
     _handle_ir_code
       _arm_motors
       _disarm_motors
       _handle_preset_button
         _update_motors
           ___bmul
         _write_presets
       _update_motors
         ___bmul
   _handle_uart *
   _memset *
   _motor_home1 *
     ___bmul
   _motor_home2 *
     ___bmul
   _motor_home3 *
     ___bmul
   _motor_home4 *
     ___bmul
   _motor_home5 *
     ___bmul
   _motor_home6 *
     ___bmul
   _motor_idle *
   _motor_tracking *
     ___bmul
   _print_text *
     _print_byte
   _read_presets *

 _isr (ROOT)
   _pwm_off *
   _pwm_on *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 26 07:24:05 2021

                            pc 0002       __size_of_motors_tracking 000E                 ___bmul@product 0048  
                  __CFG_CP$OFF 0000                             fsr 0004                  _update_motors 0E30  
                          l321 0EE9                            l322 0EF6                            l323 0F01  
                          l413 0FFF                            l510 05E1                            l441 0BD0  
                          l266 0A63                            l517 0628                            l518 062D  
                          l377 09DD                            l378 0A04                            l379 09FA  
             _do_preset_delay1 07F6               _do_preset_delay2 081C         ??_handle_preset_button 0050  
                          _PR2 0092                   __CFG_CPD$OFF 0000               _do_preset_center 08DB  
                 _nozzle_angle 0033                            _isr 0B55                            fsr0 0004  
                          indf 0000                   _nozzle_pitch 0045               ??_motor_tracking 004A  
                 __CFG_FOSC$HS 0000                   __CFG_LVP$OFF 0000                           l2010 086A  
                         l2006 0864                           l2030 0E46                           l2022 0E3B  
                         l2044 0EC7                           l3100 0F90                           l3110 0FA4  
                         l3120 0FD2                           l3112 0FAE                           l3104 0F97  
                         l3050 0AED                           l3114 0FB8                           l3210 08FD  
                         l3140 083E                           l3124 0FD9                           l3116 0FC2  
                         l3108 0F9D                           l3060 0F0E                           l3220 0A6A  
                         l3070 0F2B                           l3302 0CAD                           l3230 0A76  
                         l3136 083C                           l3056 0AFB                           l3080 0F48  
                         l3064 0F1E                           l3128 0FDD                           l3160 06E5  
                         l2352 0DD6                           l3224 0A70                           l3322 0A2D  
                         l3090 0F6C                           l3074 0F3B                           l3146 0679  
                         l2362 0E2A                           l2346 0DAC                           l2620 0D1C  
                         l3084 0F58                           l3180 074F                           l3412 0BFF  
                         l3308 0CCF                           l3252 07B0                           l2630 0D32  
                         l2622 0D26                           l2614 0D0E                           l3350 0AB7  
                         l3094 0F7C                           l3166 0711                           l3406 0BEB  
                         l2358 0E03                           l2632 0D34                           l3328 0A3F  
                         l3344 0AA5                           l3192 0767                           l3184 0756  
                         l3176 0747                           l3416 0C06                           l2634 0D36  
                         l2642 0D3D                           l3178 074B                           l3282 0C43  
                         l3530 05EB                           l2636 0D38                           l2644 0D51  
                         l2628 0D30                           l3364 08F2                           l3188 075D  
                         l3540 05FB                           l2638 0D3A                           l3550 061F  
                         l3386 0BC3                           l3546 0617                           l3396 0BD5  
                         l3564 0636                           l3582 065F                           l3574 064E  
                         l2698 08C4                           ?_isr 0070                           STR_1 04AB  
                 __CFG_WDTE$ON 0000                           u3210 0F1B                           u3300 0F79  
                         u3240 0F38                           u2185 0D6F                           u4050 064B  
                         u3350 0FCF                           u3270 0F55                           u3425 0683  
                         u3605 07D7                           u3455 0706                           u3615 07E5  
                         u3465 072C                           u3555 0B20                           u3635 0C26  
                         u2695 0CEC                           u3575 0793                           u3655 0C5C  
                         u3665 0C90                           u3595 07C9                           u3685 0CC6  
                         u3890 0BFC                           _TMR0 0001                           _TMR1 000E  
                         _TMR2 0011                   __CFG_WRT$OFF 0000     motor_home6@current_encoder 004C  
                         _main 04C7                           _tick 0037                           fp_u0 0055  
                         fp_u1 0056                           fp_u2 0057                           fp_u3 0058  
                         fp_u4 0059                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 0012              ___bmul@multiplier 0049                          ??_isr 0072  
               ?_update_motors 0070                ??_disarm_motors 0046                          ?_main 0070  
     __end_of_step_to_encoders 015D                          _EEADR 010D                  fp__motor_idle 0078  
                        _T1CON 0010                          _T2CON 0012                          i1l505 0BA1  
            handle_ir2@got_one 005B                          i1l480 00B5                          i1l481 00C0  
                        i1l482 00CB                          _RCREG 001A                          _RCSTA 0018  
                        _SPBRG 0099                          _PORTD 0008                          _TRISD 0088  
                        _TXREG 0019                          _TXSTA 0098                          _armed 003A  
                        main@i 0067                          fpbase 0054                          pclath 000A  
                 main@tracking 0066                __end_of_up_data 0483       __size_of_do_preset_angle 0040  
              __end_of_pwm_off 0949             fp__do_preset_angle 0069                          status 0003  
     __size_of_do_preset_save1 0013       __size_of_do_preset_save2 0010                          wtemp0 007E  
     __size_of_do_preset_pitch 003A             fp__do_preset_save1 0072             fp__do_preset_save2 0060  
           fp__do_preset_pitch 0063        motor_home2@sensor_value 0050                __initialization 0015  
                 __end_of_main 0673           __size_of_capture_adc 0072                         ??_main 0064  
               write_presets@i 0048              ??_motors_tracking 0046                         _ADCON0 001F  
                       _ADCON1 009F           __size_of_handle_uart 001A                         _ADRESH 001E  
                       _EEDATA 010C                         _EECON2 018D                 fp__motor_home1 0075  
               fp__motor_home2 007E                 fp__motor_home3 008A                 fp__motor_home4 0087  
               fp__motor_home5 0084                 fp__motor_home6 0081                         i1l2802 0B71  
                       i1l2820 0B8F                         i1l2812 0B7B                         i1l2822 0B90  
                       i1l2690 0944                         i1l2682 092F                         i1l2676 00F7  
                       i1l2838 0B56                         i1l2796 0B65                         u280_25 00EA  
                       u276_25 00A2                     __i1fptable 008D                pwm_on@temp_mask 0071  
             __end_of__fptable 008D                 __CFG_PWRTE$OFF 0000           __end_of_fastfwd_data 0320  
                       ___bmul 0860                ??_update_motors 004A               __end_of_ir_codes 04AB  
                ?_read_presets 0070                         _memset 08BD                   ?_motor_home1 0070  
                 ?_motor_home2 0070                   ?_motor_home3 0070                   ?_motor_home4 0070  
                 ?_motor_home5 0070                   ?_motor_home6 0070           __end_of_fastrev_data 0367  
                       _pwm_on 0099                         fptable 004F                   __pdataCOMMON 007D  
                       fptotal 0027                _motor_home1$537 004D                _motor_home2$520 004D  
              _motor_home4$488 004D                         saved_w 007E            fp__do_preset_delay1 006C  
          fp__do_preset_delay2 0066            fp__do_preset_center 006F                      ??_pwm_off 0070  
      __end_of__initialization 004B              _orig_nozzle_angle 002F       __end_of_do_preset_delay1 0800  
     __end_of_do_preset_delay2 0826       __end_of_do_preset_center 08FD            ___bmul@multiplicand 0046  
            ??_do_preset_angle 004E                 __pcstackCOMMON 0070              ??_do_preset_save1 0046  
            ??_do_preset_save2 004E              ??_do_preset_pitch 004E                   __pidataBANK0 0811  
              handle_ir2@error 0059    motor_home1@current_boundary 004C                 ??_read_presets 0046  
           __size_of_handle_ir 005E                 _OPTION_REGbits 0081               _pwm_duty_counter 0020  
       __size_of_write_presets 0038                     __pbssBANK0 0020                     __pbssBANK1 00A0  
                   __pbssBANK3 0190                  _current_motor 0036                     _charge_adc 0840  
                   __pmaintext 04C7                        ?___bmul 0046                     __pintentry 0004  
               _ir_code_failed 00A0                     _handle_ir2 0673                        ?_memset 0046  
                      ?_pwm_on 0070                     _arm_motors 099C               pwm_off@prev_port 0071  
__size_of_handle_preset_button 0042        __size_of_handle_ir_code 00F3                     __stringtab 0100  
                      i1fpbase 0092                     _first_edge 006A              __end_of_handle_ir 0C0A  
         __end_of_button0_data 0204           __end_of_button7_data 02D9        motor_home4@sensor_value 0051  
         __end_of_button8_data 0292           __end_of_button9_data 024B                _motors_tracking 0832  
                _write_presets 09D1                __size_of___bmul 0013              __end_of_cos_table 01AD  
                   _got_ir_int 0029              __end_of_hex_table 01BD                     _ir_timeout 0027  
              __size_of_memset 001E              __end_of_left_data 03F5          __end_of_disarm_motors 0832  
            __end_of_down_data 043C                        __ptext1 0949                        __ptext2 08FD  
                      __ptext3 08A0                        __ptext4 0C0A                        __ptext5 0970  
                      __ptext6 0777                        __ptext7 0B04                        __ptext8 0A43  
                      __ptext9 0C74                        _have_ir 002C                __size_of_pwm_on 0067  
          __size_of__i1fptable 000C                        _ir_code 002B                        _ir_time 0024  
                 __size_of_isr 0057           __size_of_motor_home1 0071           __size_of_motor_home2 006A  
         __size_of_motor_home3 002C           __size_of_motor_home4 007F           __size_of_motor_home5 0051  
         __size_of_motor_home6 003F                        _sensors 00CE                        _presets 003D  
                      _up_data 043C                        _pwm_off 0922                   _fastfwd_data 02D9  
  motor_home2@current_boundary 004C                        clrloop0 0815           end_of_initialization 004B  
         __end_of_read_presets 0970                    ?_charge_adc 0070                        memset@c 0046  
                      memset@n 0048                        memset@p 004C        __size_of_motor_tracking 00D9  
                 _fastrev_data 0320              fp__motor_tracking 007B              __end_of_sin_table 0185  
                   _right_data 0367                  ??_capture_adc 0046                 ?_write_presets 0070  
                   _motor_idle 0810                   __pstringtext 0100                     handle_ir@i 0063  
                  ?_handle_ir2 0070                      _PORTDbits 0008                     _print_byte 08A0  
                  ?_arm_motors 0070                     _print_text 08FD                  ??_handle_uart 0046  
                    _TRISDbits 0088      do_preset_angle@want_angle 004F                _do_preset_angle 0A82  
                   fp__pwm_off 0093                _do_preset_save1 0873                _do_preset_save2 0850  
              _do_preset_pitch 0A09        __end_of_motors_tracking 0840              ?_do_preset_delay1 0070  
            ?_do_preset_delay2 0070              ?_do_preset_center 0070          update_motors@diff_551 004D  
    do_preset_pitch@want_pitch 0050                    print_byte@c 0047             ??_do_preset_delay1 0046  
           ??_do_preset_delay2 0046             ??_do_preset_center 004E                    print_text@s 0048  
               __end_of___bmul 0873          __end_of_update_motors 0F0D               handle_ir2@got_it 005C  
                  _adc_counter 0026                  __pidataCOMMON 0003            __end_of_capture_adc 0D57  
               __end_of_memset 08DB            __size_of_charge_adc 0010                 __end_of_pwm_on 0100  
          start_initialization 0015                 _handle_ir_code 0F0D                    __end_of_isr 0BAC  
          __end_of_handle_uart 08A0            __size_of_handle_ir2 0104                ??_write_presets 0046  
          __size_of_arm_motors 0035                       ??___bmul 0047                    ?_motor_idle 0070  
   handle_preset_button@preset 004E                    __pdataBANK0 0068                       ??_memset 004A  
                     ??_pwm_on 0070         __end_of_handle_ir_code 1000                    ?_print_byte 0070  
           __end_of__i1fptable 0099                    ?_print_text 0048               write_presets@ptr 0047  
      __end_of_do_preset_angle 0AC2                    __pbssCOMMON 0077                      ___latbits 0002  
               _current_preset 0031        __end_of_do_preset_save1 0886        __end_of_do_preset_save2 0860  
                __pcstackBANK0 0046                   _button0_data 01BD          __size_of_read_presets 0027  
      __end_of_do_preset_pitch 0A43                 handle_ir2@data 0057                 handle_ir2@code 005F  
         handle_ir2@data_value 005D                   _button7_data 0292                   _button8_data 024B  
            __size_of__fptable 003E                   _button9_data 0204                      _adc_state 0068  
       motor_tracking@tracking 004D                 _motor_tracking 0D57               ?_motors_tracking 0070  
 __end_of_handle_preset_button 0B04                    _capture_adc 0CE5                      __pfunctab 004F  
                    _handle_ir 0BAC                   _read_presets 0949                      _cos_table 0185  
              ?_handle_ir_code 0070                      _hex_table 01AD                      _left_data 03AE  
                  _handle_uart 0886                      _down_data 03F5                      _ir_offset 002D  
                     ?_pwm_off 0070         __end_of_motor_tracking 0E30                 _uart_position1 007A  
               _uart_position2 0079            __size_of_motor_idle 0001                   ??_charge_adc 0046  
            interrupt_function 0004                      clear_ram0 0814                      _tmr2_high 0022  
                     _PIE1bits 008C                    _have_serial 003C            __size_of_print_byte 001D  
          __size_of_print_text 0025                       _PIR1bits 000C                       _PIR2bits 000D  
                    _serial_in 003B                      _sin_table 015D                     ?_handle_ir 0070  
                    _uart_size 007B                   ??_handle_ir2 0053                    _led_counter 0039  
                ??_motor_home1 004A                  ??_motor_home2 004A                  ??_motor_home3 004A  
                ??_motor_home4 004A                  ??_motor_home5 004A                  ??_motor_home6 004A  
                   _ADCON0bits 001F                    __stringbase 0112                      _pwm_state 007D  
                    fp__pwm_on 0096                   ??_arm_motors 0046             __end_of_charge_adc 0850  
             ?_do_preset_angle 0070               ?_do_preset_save1 0070               ?_do_preset_save2 0070  
             ?_do_preset_pitch 0070                       i1fptable 008D    motor_home4@current_boundary 004C  
                     i1fptotal 0006                ?_motor_tracking 0070              update_motors@diff 004C  
           __end_of_handle_ir2 0777         __size_of_disarm_motors 000C                     _EECON1bits 018C  
           __end_of_arm_motors 09D1          motor_tracking@encoder 004C                   _repeat_delay 002A  
           __end_of__stringtab 0112                 _setting_preset 0032      __size_of_do_preset_delay1 000A  
    __size_of_do_preset_delay2 000A      __size_of_do_preset_center 0022                       __fptable 004F  
                  _current_adc 0034           _handle_preset_button 0AC2            __end_of_motor_home1 0CE5  
          __end_of_motor_home2 0C74            __end_of_motor_home3 099C            __end_of_motor_home4 07F6  
          __end_of_motor_home5 0B55            __end_of_motor_home6 0A82                       __ptext10 0810  
                     __ptext11 0D57                       __ptext20 099C                       __ptext12 08BD  
                     __ptext21 0873                       __ptext13 0886                       __ptext30 0832  
                     __ptext22 08DB                       __ptext14 0BAC                       __ptext31 0CE5  
                     __ptext23 07F6                       __ptext15 0673                       __ptext32 0840  
                     __ptext24 0A82                       __ptext16 0F0D                       __ptext33 0B55  
                     __ptext25 081C                       __ptext17 0AC2                       __ptext34 0922  
                     __ptext26 0A09                       __ptext18 09D1                       __ptext35 0099  
                     __ptext27 0850                       __ptext19 0826                       __ptext28 0E30  
                     __ptext29 0860               __size_of_pwm_off 0027                       _ir_codes 0483  
             _step_to_encoders 0112                       _got_tmr2 0028                       _got_tick 0038  
                __size_of_main 01AC                    ??_handle_ir 0062                   ??_motor_idle 0046  
                     _pwm_duty 0077     motor_home4@current_encoder 0050                  _disarm_motors 0826  
                 ??_print_byte 0046                   ??_print_text 004A                 fp__capture_adc 005A  
                   _INTCONbits 000B          ?_handle_preset_button 004E             __end_of_right_data 03AE  
                     memset@p1 004B              capture_adc@sensor 0048                   _motor_master 0035  
                     intlevel1 004F         __size_of_update_motors 00DD             __end_of_motor_idle 0811  
               _tracking_state 00AA                      stringcode 010A                  fp__charge_adc 005D  
           __end_of_print_byte 08BD          __end_of_write_presets 0A09             __end_of_print_text 0922  
                 ?_capture_adc 0070                   _preset_delay 002E            motor_home1@tracking 004F  
                 _preset_state 0030               ??_handle_ir_code 0052            motor_home2@tracking 004F  
               ?_disarm_motors 0070                    _motor_home1 0C74                    _motor_home2 0C0A  
                  _motor_home3 0970                    _motor_home4 0777                    _motor_home5 0B04  
                  _motor_home6 0A43                    handle_ir2@i 0061                    _uart_buffer 0190  
                  _motor_state 0069            motor_home3@tracking 004C                 _interrupt_done 007C  
                 ?_handle_uart 0070                       stringtab 0100            motor_home4@tracking 004F  
   motor_home5@current_encoder 004D            motor_home5@tracking 004E                read_presets@ptr 0047  
          motor_home6@tracking 004D        motor_home1@sensor_value 0050                  read_presets@i 0048  
